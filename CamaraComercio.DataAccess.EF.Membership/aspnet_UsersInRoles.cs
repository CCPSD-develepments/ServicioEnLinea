//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.Membership
{
    public partial class aspnet_UsersInRoles
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    		public static string UserId = @"UserId";
    public static string RoleId = @"RoleId";
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual System.Guid UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    if (aspnet_Users != null && aspnet_Users.UserId != value)
                    {
                        aspnet_Users = null;
                    }
                    _userId = value;
                }
            }
        }
        private System.Guid _userId;
    
        public virtual System.Guid RoleId
        {
            get { return _roleId; }
            set
            {
                if (_roleId != value)
                {
                    if (aspnet_Roles != null && aspnet_Roles.RoleId != value)
                    {
                        aspnet_Roles = null;
                    }
                    if (aspnet_Roles1 != null && aspnet_Roles1.RoleId != value)
                    {
                        aspnet_Roles1 = null;
                    }
                    _roleId = value;
                }
            }
        }
        private System.Guid _roleId;

        #endregion

        #region Navigation Properties
    
        public virtual aspnet_Roles aspnet_Roles
        {
            get { return _aspnet_Roles; }
            set
            {
                if (!ReferenceEquals(_aspnet_Roles, value))
                {
                    var previousValue = _aspnet_Roles;
                    _aspnet_Roles = value;
                    Fixupaspnet_Roles(previousValue);
                }
            }
        }
        private aspnet_Roles _aspnet_Roles;
    
        public virtual aspnet_Roles aspnet_Roles1
        {
            get { return _aspnet_Roles1; }
            set
            {
                if (!ReferenceEquals(_aspnet_Roles1, value))
                {
                    var previousValue = _aspnet_Roles1;
                    _aspnet_Roles1 = value;
                    Fixupaspnet_Roles1(previousValue);
                }
            }
        }
        private aspnet_Roles _aspnet_Roles1;
    
        public virtual aspnet_Users aspnet_Users
        {
            get { return _aspnet_Users; }
            set
            {
                if (!ReferenceEquals(_aspnet_Users, value))
                {
                    var previousValue = _aspnet_Users;
                    _aspnet_Users = value;
                    Fixupaspnet_Users(previousValue);
                }
            }
        }
        private aspnet_Users _aspnet_Users;

        #endregion

        #region Association Fixup
    
        private void Fixupaspnet_Roles(aspnet_Roles previousValue)
        {
            if (previousValue != null && previousValue.aspnet_UsersInRoles.Contains(this))
            {
                previousValue.aspnet_UsersInRoles.Remove(this);
            }
    
            if (aspnet_Roles != null)
            {
                if (!aspnet_Roles.aspnet_UsersInRoles.Contains(this))
                {
                    aspnet_Roles.aspnet_UsersInRoles.Add(this);
                }
                if (RoleId != aspnet_Roles.RoleId)
                {
                    RoleId = aspnet_Roles.RoleId;
                }
            }
        }
    
        private void Fixupaspnet_Roles1(aspnet_Roles previousValue)
        {
            if (previousValue != null && previousValue.aspnet_UsersInRoles1.Contains(this))
            {
                previousValue.aspnet_UsersInRoles1.Remove(this);
            }
    
            if (aspnet_Roles1 != null)
            {
                if (!aspnet_Roles1.aspnet_UsersInRoles1.Contains(this))
                {
                    aspnet_Roles1.aspnet_UsersInRoles1.Add(this);
                }
                if (RoleId != aspnet_Roles1.RoleId)
                {
                    RoleId = aspnet_Roles1.RoleId;
                }
            }
        }
    
        private void Fixupaspnet_Users(aspnet_Users previousValue)
        {
            if (previousValue != null && previousValue.aspnet_UsersInRoles.Contains(this))
            {
                previousValue.aspnet_UsersInRoles.Remove(this);
            }
    
            if (aspnet_Users != null)
            {
                if (!aspnet_Users.aspnet_UsersInRoles.Contains(this))
                {
                    aspnet_Users.aspnet_UsersInRoles.Add(this);
                }
                if (UserId != aspnet_Users.UserId)
                {
                    UserId = aspnet_Users.UserId;
                }
            }
        }

        #endregion

    }
}
