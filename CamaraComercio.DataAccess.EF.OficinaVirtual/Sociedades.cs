//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.OficinaVirtual
{
    [Serializable]
    public partial class Sociedades
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    			public static string SociedadId = @"SociedadId";	
    	public static string RegistroId = @"RegistroId";	
    	public static string TipoSociedadId = @"TipoSociedadId";	
    	public static string NombreSocial = @"NombreSocial";	
    	public static string Rnc = @"Rnc";	
    	public static string EsNacional = @"EsNacional";	
    	public static string NacionalidadId = @"NacionalidadId";	
    	public static string FechaConstitucion = @"FechaConstitucion";	
    	public static string DuracionSociedad = @"DuracionSociedad";	
    	public static string FechaAsamblea = @"FechaAsamblea";	
    	public static string DuraccionDirectiva = @"DuraccionDirectiva";	
    	public static string EstatusId = @"EstatusId";	
    	public static string EsEnteRegulado = @"EsEnteRegulado";	
    	public static string TipoEnteReguladoId = @"TipoEnteReguladoId";	
    	public static string NoResolucion = @"NoResolucion";	
    	public static string NumeroNaveIndustrial = @"NumeroNaveIndustrial";	
    	public static string NombreSiglas = @"NombreSiglas";	
    	public static string SiglasConfig = @"SiglasConfig";	
    	public static string AccionesNominales = @"AccionesNominales";	
    	public static string AccionesNoNominales = @"AccionesNoNominales";	
    	public static string FechaEnteRegulado = @"FechaEnteRegulado";	
    	public static string SrmSociedadId = @"SrmSociedadId";	
    	public static string TransaccionId = @"TransaccionId";	
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int SociedadId
        {
            get;
            set;
        }
    
        public virtual int RegistroId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TipoSociedadId
        {
            get;
            set;
        }
    
        public virtual string NombreSocial
        {
            get;
            set;
        }
    
        public virtual string Rnc
        {
            get;
            set;
        }
    
        public virtual bool EsNacional
        {
            get;
            set;
        }
    
        public virtual Nullable<int> NacionalidadId
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaConstitucion
        {
            get;
            set;
        }
    
        public virtual string DuracionSociedad
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaAsamblea
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DuraccionDirectiva
        {
            get;
            set;
        }
    
        public virtual Nullable<int> EstatusId
        {
            get;
            set;
        }
    
        public virtual bool EsEnteRegulado
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TipoEnteReguladoId
        {
            get;
            set;
        }
    
        public virtual string NoResolucion
        {
            get;
            set;
        }
    
        public virtual string NumeroNaveIndustrial
        {
            get;
            set;
        }
    
        public virtual string NombreSiglas
        {
            get;
            set;
        }
    
        public virtual string SiglasConfig
        {
            get;
            set;
        }
    
        public virtual Nullable<int> AccionesNominales
        {
            get;
            set;
        }
    
        public virtual Nullable<int> AccionesNoNominales
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaEnteRegulado
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SrmSociedadId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TransaccionId
        {
            get { return _transaccionId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_transaccionId != value)
                    {
                        if (Transacciones != null && Transacciones.TransaccionId != value)
                        {
                            Transacciones = null;
                        }
                        _transaccionId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _transaccionId;

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<Sucursales> Sucursales
        {
            get
            {
                if (_sucursales == null)
                {
                    var newCollection = new FixupCollection<Sucursales>();
                    newCollection.CollectionChanged += FixupSucursales;
                    _sucursales = newCollection;
                }
                return _sucursales;
            }
            set
            {
                if (!ReferenceEquals(_sucursales, value))
                {
                    var previousValue = _sucursales as FixupCollection<Sucursales>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSucursales;
                    }
                    _sucursales = value;
                    var newValue = value as FixupCollection<Sucursales>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSucursales;
                    }
                }
            }
        }
        private ICollection<Sucursales> _sucursales;
    
        public virtual Transacciones Transacciones
        {
            get { return _transacciones; }
            set
            {
                if (!ReferenceEquals(_transacciones, value))
                {
                    var previousValue = _transacciones;
                    _transacciones = value;
                    FixupTransacciones(previousValue);
                }
            }
        }
        private Transacciones _transacciones;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupTransacciones(Transacciones previousValue)
        {
            if (previousValue != null && previousValue.Sociedades.Contains(this))
            {
                previousValue.Sociedades.Remove(this);
            }
    
            if (Transacciones != null)
            {
                if (!Transacciones.Sociedades.Contains(this))
                {
                    Transacciones.Sociedades.Add(this);
                }
                if (TransaccionId != Transacciones.TransaccionId)
                {
                    TransaccionId = Transacciones.TransaccionId;
                }
            }
            else if (!_settingFK)
            {
                TransaccionId = null;
            }
        }
    
        private void FixupSucursales(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Sucursales item in e.NewItems)
                {
                    item.Sociedades = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Sucursales item in e.OldItems)
                {
                    if (ReferenceEquals(item.Sociedades, this))
                    {
                        item.Sociedades = null;
                    }
                }
            }
        }

        #endregion

    }
}
