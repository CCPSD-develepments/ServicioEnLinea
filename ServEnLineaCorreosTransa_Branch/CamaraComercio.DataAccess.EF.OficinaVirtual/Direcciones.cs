//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.OficinaVirtual
{
    [Serializable]
    public partial class Direcciones
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    			public static string DireccionId = @"DireccionId";	
    	public static string Calle = @"Calle";	
    	public static string Numero = @"Numero";	
    	public static string CiudadId = @"CiudadId";	
    	public static string SectorId = @"SectorId";	
    	public static string ApartadoPostal = @"ApartadoPostal";	
    	public static string TelefonoCasa = @"TelefonoCasa";	
    	public static string TelefonoOficina = @"TelefonoOficina";	
    	public static string Extension = @"Extension";	
    	public static string Fax = @"Fax";	
    	public static string Email = @"Email";	
    	public static string SitioWeb = @"SitioWeb";	
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int DireccionId
        {
            get;
            set;
        }
    
        public virtual string Calle
        {
            get;
            set;
        }
    
        public virtual string Numero
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CiudadId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SectorId
        {
            get;
            set;
        }
    
        public virtual string ApartadoPostal
        {
            get;
            set;
        }
    
        public virtual string TelefonoCasa
        {
            get;
            set;
        }
    
        public virtual string TelefonoOficina
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Extension
        {
            get;
            set;
        }
    
        public virtual string Fax
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual string SitioWeb
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<Personas> Personas
        {
            get
            {
                if (_personas == null)
                {
                    var newCollection = new FixupCollection<Personas>();
                    newCollection.CollectionChanged += FixupPersonas;
                    _personas = newCollection;
                }
                return _personas;
            }
            set
            {
                if (!ReferenceEquals(_personas, value))
                {
                    var previousValue = _personas as FixupCollection<Personas>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPersonas;
                    }
                    _personas = value;
                    var newValue = value as FixupCollection<Personas>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPersonas;
                    }
                }
            }
        }
        private ICollection<Personas> _personas;

        #endregion

        #region Association Fixup
    
        private void FixupPersonas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Personas item in e.NewItems)
                {
                    item.Direcciones = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Personas item in e.OldItems)
                {
                    if (ReferenceEquals(item.Direcciones, this))
                    {
                        item.Direcciones = null;
                    }
                }
            }
        }

        #endregion

    }
}
