//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.OficinaVirtual
{
    [Serializable]
    public partial class PropiedadesUI
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    			public static string ID = @"ID";	
    	public static string Nombre = @"Nombre";	
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual string Nombre
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<PropiedadesPorSociedad> PropiedadesPorSociedad
        {
            get
            {
                if (_propiedadesPorSociedad == null)
                {
                    var newCollection = new FixupCollection<PropiedadesPorSociedad>();
                    newCollection.CollectionChanged += FixupPropiedadesPorSociedad;
                    _propiedadesPorSociedad = newCollection;
                }
                return _propiedadesPorSociedad;
            }
            set
            {
                if (!ReferenceEquals(_propiedadesPorSociedad, value))
                {
                    var previousValue = _propiedadesPorSociedad as FixupCollection<PropiedadesPorSociedad>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPropiedadesPorSociedad;
                    }
                    _propiedadesPorSociedad = value;
                    var newValue = value as FixupCollection<PropiedadesPorSociedad>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPropiedadesPorSociedad;
                    }
                }
            }
        }
        private ICollection<PropiedadesPorSociedad> _propiedadesPorSociedad;

        #endregion

        #region Association Fixup
    
        private void FixupPropiedadesPorSociedad(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PropiedadesPorSociedad item in e.NewItems)
                {
                    item.PropiedadesUI = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PropiedadesPorSociedad item in e.OldItems)
                {
                    if (ReferenceEquals(item.PropiedadesUI, this))
                    {
                        item.PropiedadesUI = null;
                    }
                }
            }
        }

        #endregion

    }
}
