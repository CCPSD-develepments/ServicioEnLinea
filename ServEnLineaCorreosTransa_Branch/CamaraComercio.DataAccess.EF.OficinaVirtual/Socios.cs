//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.OficinaVirtual
{
    [Serializable]
    public partial class Socios
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    			public static string Id = @"Id";	
    	public static string RegistroId = @"RegistroId";	
    	public static string TipoSocio = @"TipoSocio";	
    	public static string TipoRelacion = @"TipoRelacion";	
    	public static string CargoId = @"CargoId";	
    	public static string TipoDocumento = @"TipoDocumento";	
    	public static string Documento = @"Documento";	
    	public static string NacionalidadId = @"NacionalidadId";	
    	public static string RegistroMercantil = @"RegistroMercantil";	
    	public static string Orden = @"Orden";	
    	public static string SociedadNombreSocial = @"SociedadNombreSocial";	
    	public static string PersonaPrimerNombre = @"PersonaPrimerNombre";	
    	public static string PersonaSegundoNombre = @"PersonaSegundoNombre";	
    	public static string PersonaPrimerApellido = @"PersonaPrimerApellido";	
    	public static string PersonaSegundoApellido = @"PersonaSegundoApellido";	
    	public static string PersonaEstadoCivil = @"PersonaEstadoCivil";	
    	public static string PersonaProfesionId = @"PersonaProfesionId";	
    	public static string DireccionCalle = @"DireccionCalle";	
    	public static string DireccionNumero = @"DireccionNumero";	
    	public static string DireccionCiudadId = @"DireccionCiudadId";	
    	public static string DireccionSectorId = @"DireccionSectorId";	
    	public static string DireccionApartadoPostal = @"DireccionApartadoPostal";	
    	public static string RepresentanteId = @"RepresentanteId";	
    	public static string CantidadAcciones = @"CantidadAcciones";	
    	public static string FechaNacimiento = @"FechaNacimiento";	
    	public static string TipoBeneficiario = @"TipoBeneficiario";	
    	public static string IdentificacionTributariaPais = @"IdentificacionTributariaPais";	
    	public static string TipoDatosSocio = @"TipoDatosSocio";	
    	public static string Telefono1 = @"Telefono1";	
    	public static string Telefono2 = @"Telefono2";	
    	public static string CorreoElectronico = @"CorreoElectronico";	
    	public static string SrmId = @"SrmId";	
    	public static string SrmSocioId = @"SrmSocioId";	
    	public static string TransaccionId = @"TransaccionId";	
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int RegistroId
        {
            get;
            set;
        }
    
        public virtual string TipoSocio
        {
            get;
            set;
        }
    
        public virtual string TipoRelacion
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CargoId
        {
            get;
            set;
        }
    
        public virtual string TipoDocumento
        {
            get;
            set;
        }
    
        public virtual string Documento
        {
            get;
            set;
        }
    
        public virtual Nullable<int> NacionalidadId
        {
            get;
            set;
        }
    
        public virtual string RegistroMercantil
        {
            get;
            set;
        }
    
        public virtual int Orden
        {
            get;
            set;
        }
    
        public virtual string SociedadNombreSocial
        {
            get;
            set;
        }
    
        public virtual string PersonaPrimerNombre
        {
            get;
            set;
        }
    
        public virtual string PersonaSegundoNombre
        {
            get;
            set;
        }
    
        public virtual string PersonaPrimerApellido
        {
            get;
            set;
        }
    
        public virtual string PersonaSegundoApellido
        {
            get;
            set;
        }
    
        public virtual string PersonaEstadoCivil
        {
            get;
            set;
        }
    
        public virtual Nullable<int> PersonaProfesionId
        {
            get;
            set;
        }
    
        public virtual string DireccionCalle
        {
            get;
            set;
        }
    
        public virtual string DireccionNumero
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DireccionCiudadId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DireccionSectorId
        {
            get;
            set;
        }
    
        public virtual string DireccionApartadoPostal
        {
            get;
            set;
        }
    
        public virtual Nullable<int> RepresentanteId
        {
            get { return _representanteId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_representanteId != value)
                    {
                        if (Personas != null && Personas.PersonaId != value)
                        {
                            Personas = null;
                        }
                        _representanteId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _representanteId;
    
        public virtual Nullable<int> CantidadAcciones
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaNacimiento
        {
            get;
            set;
        }
    
        public virtual string TipoBeneficiario
        {
            get;
            set;
        }
    
        public virtual string IdentificacionTributariaPais
        {
            get;
            set;
        }
    
        public virtual string TipoDatosSocio
        {
            get;
            set;
        }
    
        public virtual string Telefono1
        {
            get;
            set;
        }
    
        public virtual string Telefono2
        {
            get;
            set;
        }
    
        public virtual string CorreoElectronico
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SrmId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SrmSocioId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TransaccionId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Personas Personas
        {
            get { return _personas; }
            set
            {
                if (!ReferenceEquals(_personas, value))
                {
                    var previousValue = _personas;
                    _personas = value;
                    FixupPersonas(previousValue);
                }
            }
        }
        private Personas _personas;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupPersonas(Personas previousValue)
        {
            if (previousValue != null && previousValue.Socios.Contains(this))
            {
                previousValue.Socios.Remove(this);
            }
    
            if (Personas != null)
            {
                if (!Personas.Socios.Contains(this))
                {
                    Personas.Socios.Add(this);
                }
                if (RepresentanteId != Personas.PersonaId)
                {
                    RepresentanteId = Personas.PersonaId;
                }
            }
            else if (!_settingFK)
            {
                RepresentanteId = null;
            }
        }

        #endregion

    }
}
