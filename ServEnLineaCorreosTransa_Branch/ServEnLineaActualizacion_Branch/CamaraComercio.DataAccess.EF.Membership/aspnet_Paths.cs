//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.Membership
{
    public partial class aspnet_Paths
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    		public static string ApplicationId = @"ApplicationId";
    public static string PathId = @"PathId";
    public static string Path = @"Path";
    public static string LoweredPath = @"LoweredPath";
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual System.Guid ApplicationId
        {
            get;
            set;
        }
    
        public virtual System.Guid PathId
        {
            get;
            set;
        }
    
        public virtual string Path
        {
            get;
            set;
        }
    
        public virtual string LoweredPath
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers
        {
            get { return _aspnet_PersonalizationAllUsers; }
            set
            {
                if (!ReferenceEquals(_aspnet_PersonalizationAllUsers, value))
                {
                    var previousValue = _aspnet_PersonalizationAllUsers;
                    _aspnet_PersonalizationAllUsers = value;
                    Fixupaspnet_PersonalizationAllUsers(previousValue);
                }
            }
        }
        private aspnet_PersonalizationAllUsers _aspnet_PersonalizationAllUsers;
    
        public virtual ICollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                if (_aspnet_PersonalizationPerUser == null)
                {
                    var newCollection = new FixupCollection<aspnet_PersonalizationPerUser>();
                    newCollection.CollectionChanged += Fixupaspnet_PersonalizationPerUser;
                    _aspnet_PersonalizationPerUser = newCollection;
                }
                return _aspnet_PersonalizationPerUser;
            }
            set
            {
                if (!ReferenceEquals(_aspnet_PersonalizationPerUser, value))
                {
                    var previousValue = _aspnet_PersonalizationPerUser as FixupCollection<aspnet_PersonalizationPerUser>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupaspnet_PersonalizationPerUser;
                    }
                    _aspnet_PersonalizationPerUser = value;
                    var newValue = value as FixupCollection<aspnet_PersonalizationPerUser>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupaspnet_PersonalizationPerUser;
                    }
                }
            }
        }
        private ICollection<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
    
        public virtual aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers1
        {
            get { return _aspnet_PersonalizationAllUsers1; }
            set
            {
                if (!ReferenceEquals(_aspnet_PersonalizationAllUsers1, value))
                {
                    var previousValue = _aspnet_PersonalizationAllUsers1;
                    _aspnet_PersonalizationAllUsers1 = value;
                    Fixupaspnet_PersonalizationAllUsers1(previousValue);
                }
            }
        }
        private aspnet_PersonalizationAllUsers _aspnet_PersonalizationAllUsers1;
    
        public virtual ICollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser1
        {
            get
            {
                if (_aspnet_PersonalizationPerUser1 == null)
                {
                    var newCollection = new FixupCollection<aspnet_PersonalizationPerUser>();
                    newCollection.CollectionChanged += Fixupaspnet_PersonalizationPerUser1;
                    _aspnet_PersonalizationPerUser1 = newCollection;
                }
                return _aspnet_PersonalizationPerUser1;
            }
            set
            {
                if (!ReferenceEquals(_aspnet_PersonalizationPerUser1, value))
                {
                    var previousValue = _aspnet_PersonalizationPerUser1 as FixupCollection<aspnet_PersonalizationPerUser>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupaspnet_PersonalizationPerUser1;
                    }
                    _aspnet_PersonalizationPerUser1 = value;
                    var newValue = value as FixupCollection<aspnet_PersonalizationPerUser>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupaspnet_PersonalizationPerUser1;
                    }
                }
            }
        }
        private ICollection<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser1;

        #endregion

        #region Association Fixup
    
        private void Fixupaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.aspnet_Paths, this))
            {
                previousValue.aspnet_Paths = null;
            }
    
            if (aspnet_PersonalizationAllUsers != null)
            {
                aspnet_PersonalizationAllUsers.aspnet_Paths = this;
            }
        }
    
        private void Fixupaspnet_PersonalizationAllUsers1(aspnet_PersonalizationAllUsers previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.aspnet_Paths1, this))
            {
                previousValue.aspnet_Paths1 = null;
            }
    
            if (aspnet_PersonalizationAllUsers1 != null)
            {
                aspnet_PersonalizationAllUsers1.aspnet_Paths1 = this;
            }
        }
    
        private void Fixupaspnet_PersonalizationPerUser(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (aspnet_PersonalizationPerUser item in e.NewItems)
                {
                    item.aspnet_Paths = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (aspnet_PersonalizationPerUser item in e.OldItems)
                {
                    if (ReferenceEquals(item.aspnet_Paths, this))
                    {
                        item.aspnet_Paths = null;
                    }
                }
            }
        }
    
        private void Fixupaspnet_PersonalizationPerUser1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (aspnet_PersonalizationPerUser item in e.NewItems)
                {
                    item.aspnet_Paths1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (aspnet_PersonalizationPerUser item in e.OldItems)
                {
                    if (ReferenceEquals(item.aspnet_Paths1, this))
                    {
                        item.aspnet_Paths1 = null;
                    }
                }
            }
        }

        #endregion

    }
}
