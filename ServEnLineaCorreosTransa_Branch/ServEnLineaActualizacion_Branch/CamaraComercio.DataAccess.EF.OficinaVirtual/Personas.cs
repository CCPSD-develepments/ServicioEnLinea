//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.OficinaVirtual
{
    [Serializable]
    public partial class Personas
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    			public static string PersonaId = @"PersonaId";	
    	public static string RegistroId = @"RegistroId";	
    	public static string TipoDocumento = @"TipoDocumento";	
    	public static string Documento = @"Documento";	
    	public static string PrimerNombre = @"PrimerNombre";	
    	public static string SegundoNombre = @"SegundoNombre";	
    	public static string PrimerApellido = @"PrimerApellido";	
    	public static string SegundoApellido = @"SegundoApellido";	
    	public static string Rnc = @"Rnc";	
    	public static string NacionalidadId = @"NacionalidadId";	
    	public static string EstadoCivil = @"EstadoCivil";	
    	public static string ProfesionId = @"ProfesionId";	
    	public static string DireccionId = @"DireccionId";	
    	public static string DireccionCalle = @"DireccionCalle";	
    	public static string DireccionNumero = @"DireccionNumero";	
    	public static string DireccionCiudadId = @"DireccionCiudadId";	
    	public static string DireccionSectorId = @"DireccionSectorId";	
    	public static string DireccionApartadoPostal = @"DireccionApartadoPostal";	
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int PersonaId
        {
            get;
            set;
        }
    
        public virtual int RegistroId
        {
            get;
            set;
        }
    
        public virtual string TipoDocumento
        {
            get;
            set;
        }
    
        public virtual string Documento
        {
            get;
            set;
        }
    
        public virtual string PrimerNombre
        {
            get;
            set;
        }
    
        public virtual string SegundoNombre
        {
            get;
            set;
        }
    
        public virtual string PrimerApellido
        {
            get;
            set;
        }
    
        public virtual string SegundoApellido
        {
            get;
            set;
        }
    
        public virtual string Rnc
        {
            get;
            set;
        }
    
        public virtual Nullable<int> NacionalidadId
        {
            get;
            set;
        }
    
        public virtual string EstadoCivil
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ProfesionId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DireccionId
        {
            get { return _direccionId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_direccionId != value)
                    {
                        if (Direcciones != null && Direcciones.DireccionId != value)
                        {
                            Direcciones = null;
                        }
                        _direccionId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _direccionId;
    
        public virtual string DireccionCalle
        {
            get;
            set;
        }
    
        public virtual string DireccionNumero
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DireccionCiudadId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DireccionSectorId
        {
            get;
            set;
        }
    
        public virtual string DireccionApartadoPostal
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Direcciones Direcciones
        {
            get { return _direcciones; }
            set
            {
                if (!ReferenceEquals(_direcciones, value))
                {
                    var previousValue = _direcciones;
                    _direcciones = value;
                    FixupDirecciones(previousValue);
                }
            }
        }
        private Direcciones _direcciones;
    
        public virtual ICollection<Socios> Socios
        {
            get
            {
                if (_socios == null)
                {
                    var newCollection = new FixupCollection<Socios>();
                    newCollection.CollectionChanged += FixupSocios;
                    _socios = newCollection;
                }
                return _socios;
            }
            set
            {
                if (!ReferenceEquals(_socios, value))
                {
                    var previousValue = _socios as FixupCollection<Socios>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSocios;
                    }
                    _socios = value;
                    var newValue = value as FixupCollection<Socios>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSocios;
                    }
                }
            }
        }
        private ICollection<Socios> _socios;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupDirecciones(Direcciones previousValue)
        {
            if (previousValue != null && previousValue.Personas.Contains(this))
            {
                previousValue.Personas.Remove(this);
            }
    
            if (Direcciones != null)
            {
                if (!Direcciones.Personas.Contains(this))
                {
                    Direcciones.Personas.Add(this);
                }
                if (DireccionId != Direcciones.DireccionId)
                {
                    DireccionId = Direcciones.DireccionId;
                }
            }
            else if (!_settingFK)
            {
                DireccionId = null;
            }
        }
    
        private void FixupSocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Socios item in e.NewItems)
                {
                    item.Personas = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Socios item in e.OldItems)
                {
                    if (ReferenceEquals(item.Personas, this))
                    {
                        item.Personas = null;
                    }
                }
            }
        }

        #endregion

    }
}
