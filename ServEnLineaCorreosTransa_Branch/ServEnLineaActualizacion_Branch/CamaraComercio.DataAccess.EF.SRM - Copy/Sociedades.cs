//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.SRM
{
    public partial class Sociedades
    {
        #region Property Metadata

        public struct PropColumns
        {
            public static string SociedadId = @"SociedadId";
            public static string TipoSociedadId = @"TipoSociedadId";
            public static string NombreSocial = @"NombreSocial";
            public static string Rnc = @"Rnc";
            public static string EsNacional = @"EsNacional";
            public static string NacionalidadId = @"NacionalidadId";
            public static string FechaConstitucion = @"FechaConstitucion";
            public static string DuracionSociedad = @"DuracionSociedad";
            public static string FechaAsamblea = @"FechaAsamblea";
            public static string DuraccionDirectiva = @"DuraccionDirectiva";
            public static string EstatusId = @"EstatusId";
            public static string EsEnteRegulado = @"EsEnteRegulado";
            public static string TipoEnteReguladoId = @"TipoEnteReguladoId";
            public static string NoResolucion = @"NoResolucion";
            public static string NumeroNaveIndustrial = @"NumeroNaveIndustrial";
            public static string NombreSiglas = @"NombreSiglas";
            public static string SiglasConfig = @"SiglasConfig";
            public static string Suscripcion = @"Suscripcion";
            public static string FechaModificacion = @"FechaModificacion";
            public static string DireccionId = @"DireccionId";
            public static string TipoSociedad = @"TipoSociedad";
            public static string Sufijo = @"Sufijo";
            public static string NacionalidadDescripcion = @"NacionalidadDescripcion";
            public static string EnteReguladoDescripcion = @"EnteReguladoDescripcion";
            public static string EstatusDescripcion = @"EstatusDescripcion";
            public static string FechaEnteRegulado = @"FechaEnteRegulado";
            public static string AccionesNominales = @"AccionesNominales";
            public static string AccionesNoNominales = @"AccionesNoNominales";

        }
        #endregion

        #region Primitive Properties

        public virtual int SociedadId
        {
            get;
            set;
        }

        public virtual Nullable<int> TipoSociedadId
        {
            get;
            set;
        }

        public virtual string NombreSocial
        {
            get;
            set;
        }

        public virtual string Rnc
        {
            get;
            set;
        }

        public virtual bool EsNacional
        {
            get;
            set;
        }

        public virtual Nullable<int> NacionalidadId
        {
            get;
            set;
        }

        public virtual Nullable<System.DateTime> FechaConstitucion
        {
            get;
            set;
        }

        public virtual string DuracionSociedad
        {
            get;
            set;
        }

        public virtual Nullable<System.DateTime> FechaAsamblea
        {
            get;
            set;
        }

        public virtual Nullable<int> DuraccionDirectiva
        {
            get;
            set;
        }

        public virtual Nullable<int> EstatusId
        {
            get;
            set;
        }

        public virtual bool EsEnteRegulado
        {
            get;
            set;
        }

        public virtual Nullable<int> TipoEnteReguladoId
        {
            get;
            set;
        }

        public virtual string NoResolucion
        {
            get;
            set;
        }

        public virtual string NumeroNaveIndustrial
        {
            get;
            set;
        }

        public virtual string NombreSiglas
        {
            get;
            set;
        }

        public virtual string SiglasConfig
        {
            get;
            set;
        }

        public virtual string Suscripcion
        {
            get;
            set;
        }

        public virtual System.DateTime FechaModificacion
        {
            get;
            set;
        }

        public virtual System.Guid rowguid
        {
            get;
            set;
        }

        public virtual Nullable<int> DireccionId
        {
            get;
            set;
        }

        public virtual string TipoSociedad
        {
            get;
            set;
        }

        public virtual string Sufijo
        {
            get;
            set;
        }

        public virtual string NacionalidadDescripcion
        {
            get;
            set;
        }

        public virtual string EnteReguladoDescripcion
        {
            get;
            set;
        }

        public virtual string EstatusDescripcion
        {
            get;
            set;
        }

        public virtual Nullable<System.DateTime> FechaEnteRegulado
        {
            get;
            set;
        }

        public virtual int? AccionesNominales
        {
            get;
            set;
        }

        public virtual int? AccionesNoNominales
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties

        public virtual ICollection<SociedadesLogos> SociedadesLogos
        {
            get
            {
                if (_sociedadesLogos == null)
                {
                    var newCollection = new FixupCollection<SociedadesLogos>();
                    newCollection.CollectionChanged += FixupSociedadesLogos;
                    _sociedadesLogos = newCollection;
                }
                return _sociedadesLogos;
            }
            set
            {
                if (!ReferenceEquals(_sociedadesLogos, value))
                {
                    var previousValue = _sociedadesLogos as FixupCollection<SociedadesLogos>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSociedadesLogos;
                    }
                    _sociedadesLogos = value;
                    var newValue = value as FixupCollection<SociedadesLogos>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSociedadesLogos;
                    }
                }
            }
        }
        private ICollection<SociedadesLogos> _sociedadesLogos;

        public virtual ICollection<Suscursales> Suscursales
        {
            get
            {
                if (_suscursales == null)
                {
                    var newCollection = new FixupCollection<Suscursales>();
                    newCollection.CollectionChanged += FixupSuscursales;
                    _suscursales = newCollection;
                }
                return _suscursales;
            }
            set
            {
                if (!ReferenceEquals(_suscursales, value))
                {
                    var previousValue = _suscursales as FixupCollection<Suscursales>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSuscursales;
                    }
                    _suscursales = value;
                    var newValue = value as FixupCollection<Suscursales>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSuscursales;
                    }
                }
            }
        }
        private ICollection<Suscursales> _suscursales;

        public virtual ICollection<SociedadesRegistros> SociedadesRegistros
        {
            get
            {
                if (_sociedadesRegistros == null)
                {
                    var newCollection = new FixupCollection<SociedadesRegistros>();
                    newCollection.CollectionChanged += FixupSociedadesRegistros;
                    _sociedadesRegistros = newCollection;
                }
                return _sociedadesRegistros;
            }
            set
            {
                if (!ReferenceEquals(_sociedadesRegistros, value))
                {
                    var previousValue = _sociedadesRegistros as FixupCollection<SociedadesRegistros>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSociedadesRegistros;
                    }
                    _sociedadesRegistros = value;
                    var newValue = value as FixupCollection<SociedadesRegistros>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSociedadesRegistros;
                    }
                }
            }
        }
        private ICollection<SociedadesRegistros> _sociedadesRegistros;

        #endregion

        #region Association Fixup

        private void FixupSociedadesLogos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SociedadesLogos item in e.NewItems)
                {
                    item.Sociedades = this;
                }
            }

            if (e.OldItems != null)
            {
                foreach (SociedadesLogos item in e.OldItems)
                {
                    if (ReferenceEquals(item.Sociedades, this))
                    {
                        item.Sociedades = null;
                    }
                }
            }
        }

        private void FixupSuscursales(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Suscursales item in e.NewItems)
                {
                    item.Sociedades = this;
                }
            }

            if (e.OldItems != null)
            {
                foreach (Suscursales item in e.OldItems)
                {
                    if (ReferenceEquals(item.Sociedades, this))
                    {
                        item.Sociedades = null;
                    }
                }
            }
        }

        private void FixupSociedadesRegistros(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SociedadesRegistros item in e.NewItems)
                {
                    item.Sociedades = this;
                }
            }

            if (e.OldItems != null)
            {
                foreach (SociedadesRegistros item in e.OldItems)
                {
                    if (ReferenceEquals(item.Sociedades, this))
                    {
                        item.Sociedades = null;
                    }
                }
            }
        }

        #endregion

    }
}
