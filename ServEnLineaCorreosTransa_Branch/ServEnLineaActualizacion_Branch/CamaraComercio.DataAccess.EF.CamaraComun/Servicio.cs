//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.CamaraComun
{
    public partial class Servicio
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    			public static string ServicioId = @"ServicioId";	
    	public static string Descripcion = @"Descripcion";	
    	public static string TipoServicioId = @"TipoServicioId";	
    	public static string CostoServicio = @"CostoServicio";	
    	public static string CalculoBaseCapital = @"CalculoBaseCapital";	
    	public static string TipoCalculoBaseCapital = @"TipoCalculoBaseCapital";	
    	public static string ServicioParalelo = @"ServicioParalelo";	
    	public static string ServicioFlowId = @"ServicioFlowId";	
    	public static string Cuenta = @"Cuenta";	
    	public static string SeCobra = @"SeCobra";	
    	public static string SinDocumento = @"SinDocumento";	
    	public static string SinCapital = @"SinCapital";	
    	public static string SubTransaccional = @"SubTransaccional";	
    	public static string AfectaOtraCompania = @"AfectaOtraCompania";	
    	public static string FechaModificacion = @"FechaModificacion";	
    	public static string ValidarRenovacion = @"ValidarRenovacion";	
    	public static string EsTransformacion = @"EsTransformacion";	
    	public static string TipoIdentificador = @"TipoIdentificador";	
    	public static string Visible = @"Visible";	
    	public static string SiteVisible = @"SiteVisible";	
    	public static string UsarCostoServicio = @"UsarCostoServicio";	
    	public static string CopiaExonerada = @"CopiaExonerada";	
    	public static string CuentaExpress = @"CuentaExpress";	
    	public static string EsAdecuacion = @"EsAdecuacion";	
    	public static string SeCobraEnSubTransaccion = @"SeCobraEnSubTransaccion";	
    	public static string TransaccionJerarquia = @"TransaccionJerarquia";	
    	public static string GrupoServicio = @"GrupoServicio";	
    	public static string DescripcionWeb = @"DescripcionWeb";	
    	public static string TransfDestinoId = @"TransfDestinoId";	
    	public static string ServicioJerarquia = @"ServicioJerarquia";	
    	public static string ServicioInmediato = @"ServicioInmediato";	
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int ServicioId
        {
            get;
            set;
        }
    
        public virtual string Descripcion
        {
            get;
            set;
        }
    
        public virtual int TipoServicioId
        {
            get { return _tipoServicioId; }
            set
            {
                if (_tipoServicioId != value)
                {
                    if (TipoServicio != null && TipoServicio.TipoServicioId != value)
                    {
                        TipoServicio = null;
                    }
                    _tipoServicioId = value;
                }
            }
        }
        private int _tipoServicioId;
    
        public virtual decimal CostoServicio
        {
            get;
            set;
        }
    
        public virtual bool CalculoBaseCapital
        {
            get;
            set;
        }
    
        public virtual int TipoCalculoBaseCapital
        {
            get;
            set;
        }
    
        public virtual bool ServicioParalelo
        {
            get;
            set;
        }
    
        public virtual int ServicioFlowId
        {
            get;
            set;
        }
    
        public virtual string Cuenta
        {
            get;
            set;
        }
    
        public virtual bool SeCobra
        {
            get;
            set;
        }
    
        public virtual bool SinDocumento
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> SinCapital
        {
            get;
            set;
        }
    
        public virtual bool SubTransaccional
        {
            get;
            set;
        }
    
        public virtual bool AfectaOtraCompania
        {
            get;
            set;
        }
    
        public virtual System.DateTime FechaModificacion
        {
            get;
            set;
        }
    
        public virtual bool ValidarRenovacion
        {
            get;
            set;
        }
    
        public virtual bool EsTransformacion
        {
            get;
            set;
        }
    
        public virtual int TipoIdentificador
        {
            get;
            set;
        }
    
        public virtual bool Visible
        {
            get;
            set;
        }
    
        public virtual bool SiteVisible
        {
            get;
            set;
        }
    
        public virtual bool UsarCostoServicio
        {
            get;
            set;
        }
    
        public virtual bool CopiaExonerada
        {
            get;
            set;
        }
    
        public virtual string CuentaExpress
        {
            get;
            set;
        }
    
        public virtual bool EsAdecuacion
        {
            get;
            set;
        }
    
        public virtual bool SeCobraEnSubTransaccion
        {
            get;
            set;
        }
    
        public virtual int TransaccionJerarquia
        {
            get;
            set;
        }
    
        public virtual int GrupoServicio
        {
            get;
            set;
        }
    
        public virtual string DescripcionWeb
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TransfDestinoId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ServicioJerarquia
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> ServicioInmediato
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<TipoSociedadServicioCargo> TipoSociedadServicioCargo
        {
            get
            {
                if (_tipoSociedadServicioCargo == null)
                {
                    var newCollection = new FixupCollection<TipoSociedadServicioCargo>();
                    newCollection.CollectionChanged += FixupTipoSociedadServicioCargo;
                    _tipoSociedadServicioCargo = newCollection;
                }
                return _tipoSociedadServicioCargo;
            }
            set
            {
                if (!ReferenceEquals(_tipoSociedadServicioCargo, value))
                {
                    var previousValue = _tipoSociedadServicioCargo as FixupCollection<TipoSociedadServicioCargo>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTipoSociedadServicioCargo;
                    }
                    _tipoSociedadServicioCargo = value;
                    var newValue = value as FixupCollection<TipoSociedadServicioCargo>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTipoSociedadServicioCargo;
                    }
                }
            }
        }
        private ICollection<TipoSociedadServicioCargo> _tipoSociedadServicioCargo;
    
        public virtual TipoServicio TipoServicio
        {
            get { return _tipoServicio; }
            set
            {
                if (!ReferenceEquals(_tipoServicio, value))
                {
                    var previousValue = _tipoServicio;
                    _tipoServicio = value;
                    FixupTipoServicio(previousValue);
                }
            }
        }
        private TipoServicio _tipoServicio;
    
        public virtual ICollection<ServicioDocumentoRequerido> ServicioDocumentoRequerido
        {
            get
            {
                if (_servicioDocumentoRequerido == null)
                {
                    var newCollection = new FixupCollection<ServicioDocumentoRequerido>();
                    newCollection.CollectionChanged += FixupServicioDocumentoRequerido;
                    _servicioDocumentoRequerido = newCollection;
                }
                return _servicioDocumentoRequerido;
            }
            set
            {
                if (!ReferenceEquals(_servicioDocumentoRequerido, value))
                {
                    var previousValue = _servicioDocumentoRequerido as FixupCollection<ServicioDocumentoRequerido>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupServicioDocumentoRequerido;
                    }
                    _servicioDocumentoRequerido = value;
                    var newValue = value as FixupCollection<ServicioDocumentoRequerido>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupServicioDocumentoRequerido;
                    }
                }
            }
        }
        private ICollection<ServicioDocumentoRequerido> _servicioDocumentoRequerido;

        #endregion

        #region Association Fixup
    
        private void FixupTipoServicio(TipoServicio previousValue)
        {
            if (previousValue != null && previousValue.Servicio.Contains(this))
            {
                previousValue.Servicio.Remove(this);
            }
    
            if (TipoServicio != null)
            {
                if (!TipoServicio.Servicio.Contains(this))
                {
                    TipoServicio.Servicio.Add(this);
                }
                if (TipoServicioId != TipoServicio.TipoServicioId)
                {
                    TipoServicioId = TipoServicio.TipoServicioId;
                }
            }
        }
    
        private void FixupTipoSociedadServicioCargo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TipoSociedadServicioCargo item in e.NewItems)
                {
                    item.Servicio = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TipoSociedadServicioCargo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Servicio, this))
                    {
                        item.Servicio = null;
                    }
                }
            }
        }
    
        private void FixupServicioDocumentoRequerido(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ServicioDocumentoRequerido item in e.NewItems)
                {
                    item.Servicio = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ServicioDocumentoRequerido item in e.OldItems)
                {
                    if (ReferenceEquals(item.Servicio, this))
                    {
                        item.Servicio = null;
                    }
                }
            }
        }

        #endregion

    }
}
