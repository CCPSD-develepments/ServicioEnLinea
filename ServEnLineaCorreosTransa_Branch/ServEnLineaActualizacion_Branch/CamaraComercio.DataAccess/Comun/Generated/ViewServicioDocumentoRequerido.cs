using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.Comun{
    /// <summary>
    /// Strongly-typed collection for the ViewServicioDocumentoRequerido class.
    /// </summary>
    [Serializable]
    public partial class ViewServicioDocumentoRequeridoCollection : ReadOnlyList<ViewServicioDocumentoRequerido, ViewServicioDocumentoRequeridoCollection>
    {        
        public ViewServicioDocumentoRequeridoCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_ServicioDocumentoRequerido view.
    /// </summary>
    [Serializable]
    public partial class ViewServicioDocumentoRequerido : ReadOnlyRecord<ViewServicioDocumentoRequerido>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_ServicioDocumentoRequerido", TableType.View, DataService.GetInstance("ComunProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarTipoSociedadId = new TableSchema.TableColumn(schema);
                colvarTipoSociedadId.ColumnName = "TipoSociedadId";
                colvarTipoSociedadId.DataType = DbType.Int32;
                colvarTipoSociedadId.MaxLength = 0;
                colvarTipoSociedadId.AutoIncrement = false;
                colvarTipoSociedadId.IsNullable = false;
                colvarTipoSociedadId.IsPrimaryKey = false;
                colvarTipoSociedadId.IsForeignKey = false;
                colvarTipoSociedadId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoSociedadId);
                
                TableSchema.TableColumn colvarServicioId = new TableSchema.TableColumn(schema);
                colvarServicioId.ColumnName = "ServicioId";
                colvarServicioId.DataType = DbType.Int32;
                colvarServicioId.MaxLength = 0;
                colvarServicioId.AutoIncrement = false;
                colvarServicioId.IsNullable = false;
                colvarServicioId.IsPrimaryKey = false;
                colvarServicioId.IsForeignKey = false;
                colvarServicioId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServicioId);
                
                TableSchema.TableColumn colvarTipoDocumentoId = new TableSchema.TableColumn(schema);
                colvarTipoDocumentoId.ColumnName = "TipoDocumentoId";
                colvarTipoDocumentoId.DataType = DbType.Int32;
                colvarTipoDocumentoId.MaxLength = 0;
                colvarTipoDocumentoId.AutoIncrement = false;
                colvarTipoDocumentoId.IsNullable = false;
                colvarTipoDocumentoId.IsPrimaryKey = false;
                colvarTipoDocumentoId.IsForeignKey = false;
                colvarTipoDocumentoId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoDocumentoId);
                
                TableSchema.TableColumn colvarRequerido = new TableSchema.TableColumn(schema);
                colvarRequerido.ColumnName = "Requerido";
                colvarRequerido.DataType = DbType.Boolean;
                colvarRequerido.MaxLength = 0;
                colvarRequerido.AutoIncrement = false;
                colvarRequerido.IsNullable = false;
                colvarRequerido.IsPrimaryKey = false;
                colvarRequerido.IsForeignKey = false;
                colvarRequerido.IsReadOnly = false;
                
                schema.Columns.Add(colvarRequerido);
                
                TableSchema.TableColumn colvarDocumentoDescripcion = new TableSchema.TableColumn(schema);
                colvarDocumentoDescripcion.ColumnName = "DocumentoDescripcion";
                colvarDocumentoDescripcion.DataType = DbType.String;
                colvarDocumentoDescripcion.MaxLength = 150;
                colvarDocumentoDescripcion.AutoIncrement = false;
                colvarDocumentoDescripcion.IsNullable = false;
                colvarDocumentoDescripcion.IsPrimaryKey = false;
                colvarDocumentoDescripcion.IsForeignKey = false;
                colvarDocumentoDescripcion.IsReadOnly = false;
                
                schema.Columns.Add(colvarDocumentoDescripcion);
                
                TableSchema.TableColumn colvarTipoSociedadDescripcion = new TableSchema.TableColumn(schema);
                colvarTipoSociedadDescripcion.ColumnName = "TipoSociedadDescripcion";
                colvarTipoSociedadDescripcion.DataType = DbType.AnsiString;
                colvarTipoSociedadDescripcion.MaxLength = 100;
                colvarTipoSociedadDescripcion.AutoIncrement = false;
                colvarTipoSociedadDescripcion.IsNullable = false;
                colvarTipoSociedadDescripcion.IsPrimaryKey = false;
                colvarTipoSociedadDescripcion.IsForeignKey = false;
                colvarTipoSociedadDescripcion.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoSociedadDescripcion);
                
                TableSchema.TableColumn colvarRegistrable = new TableSchema.TableColumn(schema);
                colvarRegistrable.ColumnName = "Registrable";
                colvarRegistrable.DataType = DbType.Boolean;
                colvarRegistrable.MaxLength = 0;
                colvarRegistrable.AutoIncrement = false;
                colvarRegistrable.IsNullable = false;
                colvarRegistrable.IsPrimaryKey = false;
                colvarRegistrable.IsForeignKey = false;
                colvarRegistrable.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegistrable);
                
                TableSchema.TableColumn colvarCostoOriginal = new TableSchema.TableColumn(schema);
                colvarCostoOriginal.ColumnName = "CostoOriginal";
                colvarCostoOriginal.DataType = DbType.Currency;
                colvarCostoOriginal.MaxLength = 0;
                colvarCostoOriginal.AutoIncrement = false;
                colvarCostoOriginal.IsNullable = false;
                colvarCostoOriginal.IsPrimaryKey = false;
                colvarCostoOriginal.IsForeignKey = false;
                colvarCostoOriginal.IsReadOnly = false;
                
                schema.Columns.Add(colvarCostoOriginal);
                
                TableSchema.TableColumn colvarCostoCopia = new TableSchema.TableColumn(schema);
                colvarCostoCopia.ColumnName = "CostoCopia";
                colvarCostoCopia.DataType = DbType.Currency;
                colvarCostoCopia.MaxLength = 0;
                colvarCostoCopia.AutoIncrement = false;
                colvarCostoCopia.IsNullable = false;
                colvarCostoCopia.IsPrimaryKey = false;
                colvarCostoCopia.IsForeignKey = false;
                colvarCostoCopia.IsReadOnly = false;
                
                schema.Columns.Add(colvarCostoCopia);
                
                TableSchema.TableColumn colvarVisible = new TableSchema.TableColumn(schema);
                colvarVisible.ColumnName = "Visible";
                colvarVisible.DataType = DbType.Boolean;
                colvarVisible.MaxLength = 0;
                colvarVisible.AutoIncrement = false;
                colvarVisible.IsNullable = false;
                colvarVisible.IsPrimaryKey = false;
                colvarVisible.IsForeignKey = false;
                colvarVisible.IsReadOnly = false;
                
                schema.Columns.Add(colvarVisible);
                
                TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
                colvarFechaModificacion.ColumnName = "FechaModificacion";
                colvarFechaModificacion.DataType = DbType.DateTime;
                colvarFechaModificacion.MaxLength = 0;
                colvarFechaModificacion.AutoIncrement = false;
                colvarFechaModificacion.IsNullable = false;
                colvarFechaModificacion.IsPrimaryKey = false;
                colvarFechaModificacion.IsForeignKey = false;
                colvarFechaModificacion.IsReadOnly = false;
                
                schema.Columns.Add(colvarFechaModificacion);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ComunProvider"].AddSchema("cvw_ServicioDocumentoRequerido",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewServicioDocumentoRequerido()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewServicioDocumentoRequerido(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewServicioDocumentoRequerido(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewServicioDocumentoRequerido(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("TipoSociedadId")]
        [Bindable(true)]
        public int TipoSociedadId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoSociedadId");
		    }
            set 
		    {
			    SetColumnValue("TipoSociedadId", value);
            }
        }
	      
        [XmlAttribute("ServicioId")]
        [Bindable(true)]
        public int ServicioId 
	    {
		    get
		    {
			    return GetColumnValue<int>("ServicioId");
		    }
            set 
		    {
			    SetColumnValue("ServicioId", value);
            }
        }
	      
        [XmlAttribute("TipoDocumentoId")]
        [Bindable(true)]
        public int TipoDocumentoId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoDocumentoId");
		    }
            set 
		    {
			    SetColumnValue("TipoDocumentoId", value);
            }
        }
	      
        [XmlAttribute("Requerido")]
        [Bindable(true)]
        public bool Requerido 
	    {
		    get
		    {
			    return GetColumnValue<bool>("Requerido");
		    }
            set 
		    {
			    SetColumnValue("Requerido", value);
            }
        }
	      
        [XmlAttribute("DocumentoDescripcion")]
        [Bindable(true)]
        public string DocumentoDescripcion 
	    {
		    get
		    {
			    return GetColumnValue<string>("DocumentoDescripcion");
		    }
            set 
		    {
			    SetColumnValue("DocumentoDescripcion", value);
            }
        }
	      
        [XmlAttribute("TipoSociedadDescripcion")]
        [Bindable(true)]
        public string TipoSociedadDescripcion 
	    {
		    get
		    {
			    return GetColumnValue<string>("TipoSociedadDescripcion");
		    }
            set 
		    {
			    SetColumnValue("TipoSociedadDescripcion", value);
            }
        }
	      
        [XmlAttribute("Registrable")]
        [Bindable(true)]
        public bool Registrable 
	    {
		    get
		    {
			    return GetColumnValue<bool>("Registrable");
		    }
            set 
		    {
			    SetColumnValue("Registrable", value);
            }
        }
	      
        [XmlAttribute("CostoOriginal")]
        [Bindable(true)]
        public decimal CostoOriginal 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("CostoOriginal");
		    }
            set 
		    {
			    SetColumnValue("CostoOriginal", value);
            }
        }
	      
        [XmlAttribute("CostoCopia")]
        [Bindable(true)]
        public decimal CostoCopia 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("CostoCopia");
		    }
            set 
		    {
			    SetColumnValue("CostoCopia", value);
            }
        }
	      
        [XmlAttribute("Visible")]
        [Bindable(true)]
        public bool Visible 
	    {
		    get
		    {
			    return GetColumnValue<bool>("Visible");
		    }
            set 
		    {
			    SetColumnValue("Visible", value);
            }
        }
	      
        [XmlAttribute("FechaModificacion")]
        [Bindable(true)]
        public DateTime FechaModificacion 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("FechaModificacion");
		    }
            set 
		    {
			    SetColumnValue("FechaModificacion", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string TipoSociedadId = @"TipoSociedadId";
            
            public static string ServicioId = @"ServicioId";
            
            public static string TipoDocumentoId = @"TipoDocumentoId";
            
            public static string Requerido = @"Requerido";
            
            public static string DocumentoDescripcion = @"DocumentoDescripcion";
            
            public static string TipoSociedadDescripcion = @"TipoSociedadDescripcion";
            
            public static string Registrable = @"Registrable";
            
            public static string CostoOriginal = @"CostoOriginal";
            
            public static string CostoCopia = @"CostoCopia";
            
            public static string Visible = @"Visible";
            
            public static string FechaModificacion = @"FechaModificacion";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
