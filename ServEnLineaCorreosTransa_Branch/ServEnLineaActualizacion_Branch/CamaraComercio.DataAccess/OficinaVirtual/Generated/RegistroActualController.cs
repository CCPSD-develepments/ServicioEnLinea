using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.OficinaVirtual
{
    /// <summary>
    /// Controller class for RegistroActual
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class RegistroActualController
    {
        // Preload our schema..
        RegistroActual thisSchemaLoad = new RegistroActual();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public RegistroActualCollection FetchAll()
        {
            RegistroActualCollection coll = new RegistroActualCollection();
            Query qry = new Query(RegistroActual.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public RegistroActualCollection FetchByID(object RegistroId)
        {
            RegistroActualCollection coll = new RegistroActualCollection().Where("RegistroId", RegistroId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public RegistroActualCollection FetchByQuery(Query qry)
        {
            RegistroActualCollection coll = new RegistroActualCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object RegistroId)
        {
            return (RegistroActual.Delete(RegistroId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object RegistroId)
        {
            return (RegistroActual.Destroy(RegistroId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(double RegistroId,string EmpresaId,double? NumeroRegistro,int? TipoSociedadId,string TipoSociedad,DateTime? FechaEmision,DateTime? FechaVencimiento,DateTime? FechaConstitucion,DateTime? FechaInicioOperaciones,string NombreEstablecimiento,string RazonSocial,double? CapitalGeneral,double? CapitalAutorizado,double? CapitalPagado,double? Activos,double? BienesRaices,bool? IsZonaFranca,string Rnc)
	    {
		    RegistroActual item = new RegistroActual();
		    
            item.RegistroId = RegistroId;
            
            item.EmpresaId = EmpresaId;
            
            item.NumeroRegistro = NumeroRegistro;
            
            item.TipoSociedadId = TipoSociedadId;
            
            item.TipoSociedad = TipoSociedad;
            
            item.FechaEmision = FechaEmision;
            
            item.FechaVencimiento = FechaVencimiento;
            
            item.FechaConstitucion = FechaConstitucion;
            
            item.FechaInicioOperaciones = FechaInicioOperaciones;
            
            item.NombreEstablecimiento = NombreEstablecimiento;
            
            item.RazonSocial = RazonSocial;
            
            item.CapitalGeneral = CapitalGeneral;
            
            item.CapitalAutorizado = CapitalAutorizado;
            
            item.CapitalPagado = CapitalPagado;
            
            item.Activos = Activos;
            
            item.BienesRaices = BienesRaices;
            
            item.IsZonaFranca = IsZonaFranca;
            
            item.Rnc = Rnc;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(double RegistroId,string EmpresaId,double? NumeroRegistro,int? TipoSociedadId,string TipoSociedad,DateTime? FechaEmision,DateTime? FechaVencimiento,DateTime? FechaConstitucion,DateTime? FechaInicioOperaciones,string NombreEstablecimiento,string RazonSocial,double? CapitalGeneral,double? CapitalAutorizado,double? CapitalPagado,double? Activos,double? BienesRaices,bool? IsZonaFranca,string Rnc)
	    {
		    RegistroActual item = new RegistroActual();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.RegistroId = RegistroId;
				
			item.EmpresaId = EmpresaId;
				
			item.NumeroRegistro = NumeroRegistro;
				
			item.TipoSociedadId = TipoSociedadId;
				
			item.TipoSociedad = TipoSociedad;
				
			item.FechaEmision = FechaEmision;
				
			item.FechaVencimiento = FechaVencimiento;
				
			item.FechaConstitucion = FechaConstitucion;
				
			item.FechaInicioOperaciones = FechaInicioOperaciones;
				
			item.NombreEstablecimiento = NombreEstablecimiento;
				
			item.RazonSocial = RazonSocial;
				
			item.CapitalGeneral = CapitalGeneral;
				
			item.CapitalAutorizado = CapitalAutorizado;
				
			item.CapitalPagado = CapitalPagado;
				
			item.Activos = Activos;
				
			item.BienesRaices = BienesRaices;
				
			item.IsZonaFranca = IsZonaFranca;
				
			item.Rnc = Rnc;
				
	        item.Save(UserName);
	    }
    }
}
