using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.OficinaVirtual
{
	/// <summary>
	/// Strongly-typed collection for the Registro class.
	/// </summary>
    [Serializable]
	public partial class RegistroCollection : ActiveList<Registro, RegistroCollection>
	{	   
		public RegistroCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>RegistroCollection</returns>
		public RegistroCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Registro o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Registros table.
	/// </summary>
	[Serializable]
	public partial class Registro : ActiveRecord<Registro>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Registro()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Registro(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Registro(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Registro(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Registros", TableType.Table, DataService.GetInstance("OficinaVirtualProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"WebSRM";
				//columns
				
				TableSchema.TableColumn colvarRegistroId = new TableSchema.TableColumn(schema);
				colvarRegistroId.ColumnName = "RegistroId";
				colvarRegistroId.DataType = DbType.Int32;
				colvarRegistroId.MaxLength = 0;
				colvarRegistroId.AutoIncrement = true;
				colvarRegistroId.IsNullable = false;
				colvarRegistroId.IsPrimaryKey = true;
				colvarRegistroId.IsForeignKey = false;
				colvarRegistroId.IsReadOnly = false;
				colvarRegistroId.DefaultSetting = @"";
				colvarRegistroId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroId);
				
				TableSchema.TableColumn colvarRegistroMercantil = new TableSchema.TableColumn(schema);
				colvarRegistroMercantil.ColumnName = "RegistroMercantil";
				colvarRegistroMercantil.DataType = DbType.Int32;
				colvarRegistroMercantil.MaxLength = 0;
				colvarRegistroMercantil.AutoIncrement = false;
				colvarRegistroMercantil.IsNullable = true;
				colvarRegistroMercantil.IsPrimaryKey = false;
				colvarRegistroMercantil.IsForeignKey = false;
				colvarRegistroMercantil.IsReadOnly = false;
				colvarRegistroMercantil.DefaultSetting = @"";
				colvarRegistroMercantil.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroMercantil);
				
				TableSchema.TableColumn colvarFechaEmision = new TableSchema.TableColumn(schema);
				colvarFechaEmision.ColumnName = "FechaEmision";
				colvarFechaEmision.DataType = DbType.DateTime;
				colvarFechaEmision.MaxLength = 0;
				colvarFechaEmision.AutoIncrement = false;
				colvarFechaEmision.IsNullable = true;
				colvarFechaEmision.IsPrimaryKey = false;
				colvarFechaEmision.IsForeignKey = false;
				colvarFechaEmision.IsReadOnly = false;
				colvarFechaEmision.DefaultSetting = @"";
				colvarFechaEmision.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaEmision);
				
				TableSchema.TableColumn colvarFechaVencimiento = new TableSchema.TableColumn(schema);
				colvarFechaVencimiento.ColumnName = "FechaVencimiento";
				colvarFechaVencimiento.DataType = DbType.DateTime;
				colvarFechaVencimiento.MaxLength = 0;
				colvarFechaVencimiento.AutoIncrement = false;
				colvarFechaVencimiento.IsNullable = true;
				colvarFechaVencimiento.IsPrimaryKey = false;
				colvarFechaVencimiento.IsForeignKey = false;
				colvarFechaVencimiento.IsReadOnly = false;
				colvarFechaVencimiento.DefaultSetting = @"";
				colvarFechaVencimiento.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaVencimiento);
				
				TableSchema.TableColumn colvarCapitalSocial = new TableSchema.TableColumn(schema);
				colvarCapitalSocial.ColumnName = "CapitalSocial";
				colvarCapitalSocial.DataType = DbType.Currency;
				colvarCapitalSocial.MaxLength = 0;
				colvarCapitalSocial.AutoIncrement = false;
				colvarCapitalSocial.IsNullable = true;
				colvarCapitalSocial.IsPrimaryKey = false;
				colvarCapitalSocial.IsForeignKey = false;
				colvarCapitalSocial.IsReadOnly = false;
				colvarCapitalSocial.DefaultSetting = @"";
				colvarCapitalSocial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCapitalSocial);
				
				TableSchema.TableColumn colvarCapitalAutorizado = new TableSchema.TableColumn(schema);
				colvarCapitalAutorizado.ColumnName = "CapitalAutorizado";
				colvarCapitalAutorizado.DataType = DbType.Currency;
				colvarCapitalAutorizado.MaxLength = 0;
				colvarCapitalAutorizado.AutoIncrement = false;
				colvarCapitalAutorizado.IsNullable = true;
				colvarCapitalAutorizado.IsPrimaryKey = false;
				colvarCapitalAutorizado.IsForeignKey = false;
				colvarCapitalAutorizado.IsReadOnly = false;
				colvarCapitalAutorizado.DefaultSetting = @"";
				colvarCapitalAutorizado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCapitalAutorizado);
				
				TableSchema.TableColumn colvarCapitalPagado = new TableSchema.TableColumn(schema);
				colvarCapitalPagado.ColumnName = "CapitalPagado";
				colvarCapitalPagado.DataType = DbType.Currency;
				colvarCapitalPagado.MaxLength = 0;
				colvarCapitalPagado.AutoIncrement = false;
				colvarCapitalPagado.IsNullable = true;
				colvarCapitalPagado.IsPrimaryKey = false;
				colvarCapitalPagado.IsForeignKey = false;
				colvarCapitalPagado.IsReadOnly = false;
				colvarCapitalPagado.DefaultSetting = @"";
				colvarCapitalPagado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCapitalPagado);
				
				TableSchema.TableColumn colvarActivos = new TableSchema.TableColumn(schema);
				colvarActivos.ColumnName = "Activos";
				colvarActivos.DataType = DbType.Currency;
				colvarActivos.MaxLength = 0;
				colvarActivos.AutoIncrement = false;
				colvarActivos.IsNullable = true;
				colvarActivos.IsPrimaryKey = false;
				colvarActivos.IsForeignKey = false;
				colvarActivos.IsReadOnly = false;
				colvarActivos.DefaultSetting = @"";
				colvarActivos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarActivos);
				
				TableSchema.TableColumn colvarBienesRaices = new TableSchema.TableColumn(schema);
				colvarBienesRaices.ColumnName = "BienesRaices";
				colvarBienesRaices.DataType = DbType.Currency;
				colvarBienesRaices.MaxLength = 0;
				colvarBienesRaices.AutoIncrement = false;
				colvarBienesRaices.IsNullable = true;
				colvarBienesRaices.IsPrimaryKey = false;
				colvarBienesRaices.IsForeignKey = false;
				colvarBienesRaices.IsReadOnly = false;
				colvarBienesRaices.DefaultSetting = @"";
				colvarBienesRaices.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBienesRaices);
				
				TableSchema.TableColumn colvarFechaInicioOperacion = new TableSchema.TableColumn(schema);
				colvarFechaInicioOperacion.ColumnName = "FechaInicioOperacion";
				colvarFechaInicioOperacion.DataType = DbType.DateTime;
				colvarFechaInicioOperacion.MaxLength = 0;
				colvarFechaInicioOperacion.AutoIncrement = false;
				colvarFechaInicioOperacion.IsNullable = true;
				colvarFechaInicioOperacion.IsPrimaryKey = false;
				colvarFechaInicioOperacion.IsForeignKey = false;
				colvarFechaInicioOperacion.IsReadOnly = false;
				colvarFechaInicioOperacion.DefaultSetting = @"";
				colvarFechaInicioOperacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaInicioOperacion);
				
				TableSchema.TableColumn colvarEmpleadosMasculinos = new TableSchema.TableColumn(schema);
				colvarEmpleadosMasculinos.ColumnName = "EmpleadosMasculinos";
				colvarEmpleadosMasculinos.DataType = DbType.Int32;
				colvarEmpleadosMasculinos.MaxLength = 0;
				colvarEmpleadosMasculinos.AutoIncrement = false;
				colvarEmpleadosMasculinos.IsNullable = true;
				colvarEmpleadosMasculinos.IsPrimaryKey = false;
				colvarEmpleadosMasculinos.IsForeignKey = false;
				colvarEmpleadosMasculinos.IsReadOnly = false;
				
						colvarEmpleadosMasculinos.DefaultSetting = @"((0))";
				colvarEmpleadosMasculinos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmpleadosMasculinos);
				
				TableSchema.TableColumn colvarEmpleadosFemeninos = new TableSchema.TableColumn(schema);
				colvarEmpleadosFemeninos.ColumnName = "EmpleadosFemeninos";
				colvarEmpleadosFemeninos.DataType = DbType.Int32;
				colvarEmpleadosFemeninos.MaxLength = 0;
				colvarEmpleadosFemeninos.AutoIncrement = false;
				colvarEmpleadosFemeninos.IsNullable = true;
				colvarEmpleadosFemeninos.IsPrimaryKey = false;
				colvarEmpleadosFemeninos.IsForeignKey = false;
				colvarEmpleadosFemeninos.IsReadOnly = false;
				
						colvarEmpleadosFemeninos.DefaultSetting = @"((0))";
				colvarEmpleadosFemeninos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmpleadosFemeninos);
				
				TableSchema.TableColumn colvarEmpleadosTotal = new TableSchema.TableColumn(schema);
				colvarEmpleadosTotal.ColumnName = "EmpleadosTotal";
				colvarEmpleadosTotal.DataType = DbType.Int32;
				colvarEmpleadosTotal.MaxLength = 0;
				colvarEmpleadosTotal.AutoIncrement = false;
				colvarEmpleadosTotal.IsNullable = true;
				colvarEmpleadosTotal.IsPrimaryKey = false;
				colvarEmpleadosTotal.IsForeignKey = false;
				colvarEmpleadosTotal.IsReadOnly = true;
				colvarEmpleadosTotal.DefaultSetting = @"";
				colvarEmpleadosTotal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmpleadosTotal);
				
				TableSchema.TableColumn colvarNombreComercial = new TableSchema.TableColumn(schema);
				colvarNombreComercial.ColumnName = "NombreComercial";
				colvarNombreComercial.DataType = DbType.String;
				colvarNombreComercial.MaxLength = 150;
				colvarNombreComercial.AutoIncrement = false;
				colvarNombreComercial.IsNullable = true;
				colvarNombreComercial.IsPrimaryKey = false;
				colvarNombreComercial.IsForeignKey = false;
				colvarNombreComercial.IsReadOnly = false;
				colvarNombreComercial.DefaultSetting = @"";
				colvarNombreComercial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreComercial);
				
				TableSchema.TableColumn colvarRegistroNombreComercial = new TableSchema.TableColumn(schema);
				colvarRegistroNombreComercial.ColumnName = "RegistroNombreComercial";
				colvarRegistroNombreComercial.DataType = DbType.String;
				colvarRegistroNombreComercial.MaxLength = 15;
				colvarRegistroNombreComercial.AutoIncrement = false;
				colvarRegistroNombreComercial.IsNullable = true;
				colvarRegistroNombreComercial.IsPrimaryKey = false;
				colvarRegistroNombreComercial.IsForeignKey = false;
				colvarRegistroNombreComercial.IsReadOnly = false;
				colvarRegistroNombreComercial.DefaultSetting = @"";
				colvarRegistroNombreComercial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroNombreComercial);
				
				TableSchema.TableColumn colvarMarcaFabrica = new TableSchema.TableColumn(schema);
				colvarMarcaFabrica.ColumnName = "MarcaFabrica";
				colvarMarcaFabrica.DataType = DbType.String;
				colvarMarcaFabrica.MaxLength = 150;
				colvarMarcaFabrica.AutoIncrement = false;
				colvarMarcaFabrica.IsNullable = true;
				colvarMarcaFabrica.IsPrimaryKey = false;
				colvarMarcaFabrica.IsForeignKey = false;
				colvarMarcaFabrica.IsReadOnly = false;
				colvarMarcaFabrica.DefaultSetting = @"";
				colvarMarcaFabrica.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMarcaFabrica);
				
				TableSchema.TableColumn colvarRegistroMarcaFabrica = new TableSchema.TableColumn(schema);
				colvarRegistroMarcaFabrica.ColumnName = "RegistroMarcaFabrica";
				colvarRegistroMarcaFabrica.DataType = DbType.String;
				colvarRegistroMarcaFabrica.MaxLength = 15;
				colvarRegistroMarcaFabrica.AutoIncrement = false;
				colvarRegistroMarcaFabrica.IsNullable = true;
				colvarRegistroMarcaFabrica.IsPrimaryKey = false;
				colvarRegistroMarcaFabrica.IsForeignKey = false;
				colvarRegistroMarcaFabrica.IsReadOnly = false;
				colvarRegistroMarcaFabrica.DefaultSetting = @"";
				colvarRegistroMarcaFabrica.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroMarcaFabrica);
				
				TableSchema.TableColumn colvarPatenteInvencion = new TableSchema.TableColumn(schema);
				colvarPatenteInvencion.ColumnName = "PatenteInvencion";
				colvarPatenteInvencion.DataType = DbType.String;
				colvarPatenteInvencion.MaxLength = 50;
				colvarPatenteInvencion.AutoIncrement = false;
				colvarPatenteInvencion.IsNullable = true;
				colvarPatenteInvencion.IsPrimaryKey = false;
				colvarPatenteInvencion.IsForeignKey = false;
				colvarPatenteInvencion.IsReadOnly = false;
				colvarPatenteInvencion.DefaultSetting = @"";
				colvarPatenteInvencion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatenteInvencion);
				
				TableSchema.TableColumn colvarRegistroPatenteInvencion = new TableSchema.TableColumn(schema);
				colvarRegistroPatenteInvencion.ColumnName = "RegistroPatenteInvencion";
				colvarRegistroPatenteInvencion.DataType = DbType.String;
				colvarRegistroPatenteInvencion.MaxLength = 15;
				colvarRegistroPatenteInvencion.AutoIncrement = false;
				colvarRegistroPatenteInvencion.IsNullable = true;
				colvarRegistroPatenteInvencion.IsPrimaryKey = false;
				colvarRegistroPatenteInvencion.IsForeignKey = false;
				colvarRegistroPatenteInvencion.IsReadOnly = false;
				colvarRegistroPatenteInvencion.DefaultSetting = @"";
				colvarRegistroPatenteInvencion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroPatenteInvencion);
				
				TableSchema.TableColumn colvarNombreOperador = new TableSchema.TableColumn(schema);
				colvarNombreOperador.ColumnName = "NombreOperador";
				colvarNombreOperador.DataType = DbType.String;
				colvarNombreOperador.MaxLength = 50;
				colvarNombreOperador.AutoIncrement = false;
				colvarNombreOperador.IsNullable = true;
				colvarNombreOperador.IsPrimaryKey = false;
				colvarNombreOperador.IsForeignKey = false;
				colvarNombreOperador.IsReadOnly = false;
				colvarNombreOperador.DefaultSetting = @"";
				colvarNombreOperador.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreOperador);
				
				TableSchema.TableColumn colvarActividadNegocio = new TableSchema.TableColumn(schema);
				colvarActividadNegocio.ColumnName = "ActividadNegocio";
				colvarActividadNegocio.DataType = DbType.AnsiString;
				colvarActividadNegocio.MaxLength = 2147483647;
				colvarActividadNegocio.AutoIncrement = false;
				colvarActividadNegocio.IsNullable = true;
				colvarActividadNegocio.IsPrimaryKey = false;
				colvarActividadNegocio.IsForeignKey = false;
				colvarActividadNegocio.IsReadOnly = false;
				colvarActividadNegocio.DefaultSetting = @"";
				colvarActividadNegocio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarActividadNegocio);
				
				TableSchema.TableColumn colvarNumeroSocio = new TableSchema.TableColumn(schema);
				colvarNumeroSocio.ColumnName = "NumeroSocios";
				colvarNumeroSocio.DataType = DbType.Int32;
				colvarNumeroSocio.MaxLength = 0;
				colvarNumeroSocio.AutoIncrement = false;
				colvarNumeroSocio.IsNullable = true;
				colvarNumeroSocio.IsPrimaryKey = false;
				colvarNumeroSocio.IsForeignKey = false;
				colvarNumeroSocio.IsReadOnly = false;
				colvarNumeroSocio.DefaultSetting = @"";
				colvarNumeroSocio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNumeroSocio);
				
				TableSchema.TableColumn colvarTotalAcciones = new TableSchema.TableColumn(schema);
				colvarTotalAcciones.ColumnName = "TotalAcciones";
				colvarTotalAcciones.DataType = DbType.Int32;
				colvarTotalAcciones.MaxLength = 0;
				colvarTotalAcciones.AutoIncrement = false;
				colvarTotalAcciones.IsNullable = true;
				colvarTotalAcciones.IsPrimaryKey = false;
				colvarTotalAcciones.IsForeignKey = false;
				colvarTotalAcciones.IsReadOnly = false;
				colvarTotalAcciones.DefaultSetting = @"";
				colvarTotalAcciones.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTotalAcciones);
				
				TableSchema.TableColumn colvarEsNuevoRegistro = new TableSchema.TableColumn(schema);
				colvarEsNuevoRegistro.ColumnName = "EsNuevoRegistro";
				colvarEsNuevoRegistro.DataType = DbType.Boolean;
				colvarEsNuevoRegistro.MaxLength = 0;
				colvarEsNuevoRegistro.AutoIncrement = false;
				colvarEsNuevoRegistro.IsNullable = false;
				colvarEsNuevoRegistro.IsPrimaryKey = false;
				colvarEsNuevoRegistro.IsForeignKey = false;
				colvarEsNuevoRegistro.IsReadOnly = false;
				
						colvarEsNuevoRegistro.DefaultSetting = @"((0))";
				colvarEsNuevoRegistro.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEsNuevoRegistro);
				
				TableSchema.TableColumn colvarDireccionCalle = new TableSchema.TableColumn(schema);
				colvarDireccionCalle.ColumnName = "DireccionCalle";
				colvarDireccionCalle.DataType = DbType.String;
				colvarDireccionCalle.MaxLength = 256;
				colvarDireccionCalle.AutoIncrement = false;
				colvarDireccionCalle.IsNullable = true;
				colvarDireccionCalle.IsPrimaryKey = false;
				colvarDireccionCalle.IsForeignKey = false;
				colvarDireccionCalle.IsReadOnly = false;
				colvarDireccionCalle.DefaultSetting = @"";
				colvarDireccionCalle.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionCalle);
				
				TableSchema.TableColumn colvarDireccionNumero = new TableSchema.TableColumn(schema);
				colvarDireccionNumero.ColumnName = "DireccionNumero";
				colvarDireccionNumero.DataType = DbType.String;
				colvarDireccionNumero.MaxLength = 6;
				colvarDireccionNumero.AutoIncrement = false;
				colvarDireccionNumero.IsNullable = true;
				colvarDireccionNumero.IsPrimaryKey = false;
				colvarDireccionNumero.IsForeignKey = false;
				colvarDireccionNumero.IsReadOnly = false;
				colvarDireccionNumero.DefaultSetting = @"";
				colvarDireccionNumero.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionNumero);
				
				TableSchema.TableColumn colvarDireccionCiudadId = new TableSchema.TableColumn(schema);
				colvarDireccionCiudadId.ColumnName = "DireccionCiudadId";
				colvarDireccionCiudadId.DataType = DbType.Int32;
				colvarDireccionCiudadId.MaxLength = 0;
				colvarDireccionCiudadId.AutoIncrement = false;
				colvarDireccionCiudadId.IsNullable = true;
				colvarDireccionCiudadId.IsPrimaryKey = false;
				colvarDireccionCiudadId.IsForeignKey = false;
				colvarDireccionCiudadId.IsReadOnly = false;
				colvarDireccionCiudadId.DefaultSetting = @"";
				colvarDireccionCiudadId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionCiudadId);
				
				TableSchema.TableColumn colvarDireccionSectorId = new TableSchema.TableColumn(schema);
				colvarDireccionSectorId.ColumnName = "DireccionSectorId";
				colvarDireccionSectorId.DataType = DbType.Int32;
				colvarDireccionSectorId.MaxLength = 0;
				colvarDireccionSectorId.AutoIncrement = false;
				colvarDireccionSectorId.IsNullable = true;
				colvarDireccionSectorId.IsPrimaryKey = false;
				colvarDireccionSectorId.IsForeignKey = false;
				colvarDireccionSectorId.IsReadOnly = false;
				colvarDireccionSectorId.DefaultSetting = @"";
				colvarDireccionSectorId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionSectorId);
				
				TableSchema.TableColumn colvarDireccionApartadoPostal = new TableSchema.TableColumn(schema);
				colvarDireccionApartadoPostal.ColumnName = "DireccionApartadoPostal";
				colvarDireccionApartadoPostal.DataType = DbType.String;
				colvarDireccionApartadoPostal.MaxLength = 20;
				colvarDireccionApartadoPostal.AutoIncrement = false;
				colvarDireccionApartadoPostal.IsNullable = true;
				colvarDireccionApartadoPostal.IsPrimaryKey = false;
				colvarDireccionApartadoPostal.IsForeignKey = false;
				colvarDireccionApartadoPostal.IsReadOnly = false;
				colvarDireccionApartadoPostal.DefaultSetting = @"";
				colvarDireccionApartadoPostal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionApartadoPostal);
				
				TableSchema.TableColumn colvarDireccionTelefonoCasa = new TableSchema.TableColumn(schema);
				colvarDireccionTelefonoCasa.ColumnName = "DireccionTelefonoCasa";
				colvarDireccionTelefonoCasa.DataType = DbType.String;
				colvarDireccionTelefonoCasa.MaxLength = 15;
				colvarDireccionTelefonoCasa.AutoIncrement = false;
				colvarDireccionTelefonoCasa.IsNullable = true;
				colvarDireccionTelefonoCasa.IsPrimaryKey = false;
				colvarDireccionTelefonoCasa.IsForeignKey = false;
				colvarDireccionTelefonoCasa.IsReadOnly = false;
				colvarDireccionTelefonoCasa.DefaultSetting = @"";
				colvarDireccionTelefonoCasa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionTelefonoCasa);
				
				TableSchema.TableColumn colvarDireccionTelefonoOficina = new TableSchema.TableColumn(schema);
				colvarDireccionTelefonoOficina.ColumnName = "DireccionTelefonoOficina";
				colvarDireccionTelefonoOficina.DataType = DbType.String;
				colvarDireccionTelefonoOficina.MaxLength = 15;
				colvarDireccionTelefonoOficina.AutoIncrement = false;
				colvarDireccionTelefonoOficina.IsNullable = true;
				colvarDireccionTelefonoOficina.IsPrimaryKey = false;
				colvarDireccionTelefonoOficina.IsForeignKey = false;
				colvarDireccionTelefonoOficina.IsReadOnly = false;
				colvarDireccionTelefonoOficina.DefaultSetting = @"";
				colvarDireccionTelefonoOficina.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionTelefonoOficina);
				
				TableSchema.TableColumn colvarDireccionExtension = new TableSchema.TableColumn(schema);
				colvarDireccionExtension.ColumnName = "DireccionExtension";
				colvarDireccionExtension.DataType = DbType.Int32;
				colvarDireccionExtension.MaxLength = 0;
				colvarDireccionExtension.AutoIncrement = false;
				colvarDireccionExtension.IsNullable = true;
				colvarDireccionExtension.IsPrimaryKey = false;
				colvarDireccionExtension.IsForeignKey = false;
				colvarDireccionExtension.IsReadOnly = false;
				colvarDireccionExtension.DefaultSetting = @"";
				colvarDireccionExtension.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionExtension);
				
				TableSchema.TableColumn colvarDireccionFax = new TableSchema.TableColumn(schema);
				colvarDireccionFax.ColumnName = "DireccionFax";
				colvarDireccionFax.DataType = DbType.String;
				colvarDireccionFax.MaxLength = 15;
				colvarDireccionFax.AutoIncrement = false;
				colvarDireccionFax.IsNullable = true;
				colvarDireccionFax.IsPrimaryKey = false;
				colvarDireccionFax.IsForeignKey = false;
				colvarDireccionFax.IsReadOnly = false;
				colvarDireccionFax.DefaultSetting = @"";
				colvarDireccionFax.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionFax);
				
				TableSchema.TableColumn colvarDireccionEmail = new TableSchema.TableColumn(schema);
				colvarDireccionEmail.ColumnName = "DireccionEmail";
				colvarDireccionEmail.DataType = DbType.String;
				colvarDireccionEmail.MaxLength = 256;
				colvarDireccionEmail.AutoIncrement = false;
				colvarDireccionEmail.IsNullable = true;
				colvarDireccionEmail.IsPrimaryKey = false;
				colvarDireccionEmail.IsForeignKey = false;
				colvarDireccionEmail.IsReadOnly = false;
				colvarDireccionEmail.DefaultSetting = @"";
				colvarDireccionEmail.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionEmail);
				
				TableSchema.TableColumn colvarDireccionSitioWeb = new TableSchema.TableColumn(schema);
				colvarDireccionSitioWeb.ColumnName = "DireccionSitioWeb";
				colvarDireccionSitioWeb.DataType = DbType.String;
				colvarDireccionSitioWeb.MaxLength = 256;
				colvarDireccionSitioWeb.AutoIncrement = false;
				colvarDireccionSitioWeb.IsNullable = true;
				colvarDireccionSitioWeb.IsPrimaryKey = false;
				colvarDireccionSitioWeb.IsForeignKey = false;
				colvarDireccionSitioWeb.IsReadOnly = false;
				colvarDireccionSitioWeb.DefaultSetting = @"";
				colvarDireccionSitioWeb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionSitioWeb);
				
				TableSchema.TableColumn colvarNombreSolicitante = new TableSchema.TableColumn(schema);
				colvarNombreSolicitante.ColumnName = "NombreSolicitante";
				colvarNombreSolicitante.DataType = DbType.String;
				colvarNombreSolicitante.MaxLength = 80;
				colvarNombreSolicitante.AutoIncrement = false;
				colvarNombreSolicitante.IsNullable = true;
				colvarNombreSolicitante.IsPrimaryKey = false;
				colvarNombreSolicitante.IsForeignKey = false;
				colvarNombreSolicitante.IsReadOnly = false;
				colvarNombreSolicitante.DefaultSetting = @"";
				colvarNombreSolicitante.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreSolicitante);
				
				TableSchema.TableColumn colvarCargoSolicitante = new TableSchema.TableColumn(schema);
				colvarCargoSolicitante.ColumnName = "CargoSolicitante";
				colvarCargoSolicitante.DataType = DbType.String;
				colvarCargoSolicitante.MaxLength = 80;
				colvarCargoSolicitante.AutoIncrement = false;
				colvarCargoSolicitante.IsNullable = true;
				colvarCargoSolicitante.IsPrimaryKey = false;
				colvarCargoSolicitante.IsForeignKey = false;
				colvarCargoSolicitante.IsReadOnly = false;
				colvarCargoSolicitante.DefaultSetting = @"";
				colvarCargoSolicitante.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCargoSolicitante);
				
				TableSchema.TableColumn colvarGestorUsername = new TableSchema.TableColumn(schema);
				colvarGestorUsername.ColumnName = "GestorUsername";
				colvarGestorUsername.DataType = DbType.String;
				colvarGestorUsername.MaxLength = 150;
				colvarGestorUsername.AutoIncrement = false;
				colvarGestorUsername.IsNullable = true;
				colvarGestorUsername.IsPrimaryKey = false;
				colvarGestorUsername.IsForeignKey = false;
				colvarGestorUsername.IsReadOnly = false;
				colvarGestorUsername.DefaultSetting = @"";
				colvarGestorUsername.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGestorUsername);
				
				TableSchema.TableColumn colvarFechaSolicitud = new TableSchema.TableColumn(schema);
				colvarFechaSolicitud.ColumnName = "FechaSolicitud";
				colvarFechaSolicitud.DataType = DbType.DateTime;
				colvarFechaSolicitud.MaxLength = 0;
				colvarFechaSolicitud.AutoIncrement = false;
				colvarFechaSolicitud.IsNullable = true;
				colvarFechaSolicitud.IsPrimaryKey = false;
				colvarFechaSolicitud.IsForeignKey = false;
				colvarFechaSolicitud.IsReadOnly = false;
				colvarFechaSolicitud.DefaultSetting = @"";
				colvarFechaSolicitud.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaSolicitud);
				
				TableSchema.TableColumn colvarEntidadActiva = new TableSchema.TableColumn(schema);
				colvarEntidadActiva.ColumnName = "EntidadActiva";
				colvarEntidadActiva.DataType = DbType.Boolean;
				colvarEntidadActiva.MaxLength = 0;
				colvarEntidadActiva.AutoIncrement = false;
				colvarEntidadActiva.IsNullable = true;
				colvarEntidadActiva.IsPrimaryKey = false;
				colvarEntidadActiva.IsForeignKey = false;
				colvarEntidadActiva.IsReadOnly = false;
				
						colvarEntidadActiva.DefaultSetting = @"((1))";
				colvarEntidadActiva.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEntidadActiva);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["OficinaVirtualProvider"].AddSchema("Registros",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("RegistroId")]
		[Bindable(true)]
		public int RegistroId 
		{
			get { return GetColumnValue<int>(Columns.RegistroId); }
			set { SetColumnValue(Columns.RegistroId, value); }
		}
		  
		[XmlAttribute("RegistroMercantil")]
		[Bindable(true)]
		public int? RegistroMercantil 
		{
			get { return GetColumnValue<int?>(Columns.RegistroMercantil); }
			set { SetColumnValue(Columns.RegistroMercantil, value); }
		}
		  
		[XmlAttribute("FechaEmision")]
		[Bindable(true)]
		public DateTime? FechaEmision 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaEmision); }
			set { SetColumnValue(Columns.FechaEmision, value); }
		}
		  
		[XmlAttribute("FechaVencimiento")]
		[Bindable(true)]
		public DateTime? FechaVencimiento 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaVencimiento); }
			set { SetColumnValue(Columns.FechaVencimiento, value); }
		}
		  
		[XmlAttribute("CapitalSocial")]
		[Bindable(true)]
		public decimal? CapitalSocial 
		{
			get { return GetColumnValue<decimal?>(Columns.CapitalSocial); }
			set { SetColumnValue(Columns.CapitalSocial, value); }
		}
		  
		[XmlAttribute("CapitalAutorizado")]
		[Bindable(true)]
		public decimal? CapitalAutorizado 
		{
			get { return GetColumnValue<decimal?>(Columns.CapitalAutorizado); }
			set { SetColumnValue(Columns.CapitalAutorizado, value); }
		}
		  
		[XmlAttribute("CapitalPagado")]
		[Bindable(true)]
		public decimal? CapitalPagado 
		{
			get { return GetColumnValue<decimal?>(Columns.CapitalPagado); }
			set { SetColumnValue(Columns.CapitalPagado, value); }
		}
		  
		[XmlAttribute("Activos")]
		[Bindable(true)]
		public decimal? Activos 
		{
			get { return GetColumnValue<decimal?>(Columns.Activos); }
			set { SetColumnValue(Columns.Activos, value); }
		}
		  
		[XmlAttribute("BienesRaices")]
		[Bindable(true)]
		public decimal? BienesRaices 
		{
			get { return GetColumnValue<decimal?>(Columns.BienesRaices); }
			set { SetColumnValue(Columns.BienesRaices, value); }
		}
		  
		[XmlAttribute("FechaInicioOperacion")]
		[Bindable(true)]
		public DateTime? FechaInicioOperacion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaInicioOperacion); }
			set { SetColumnValue(Columns.FechaInicioOperacion, value); }
		}
		  
		[XmlAttribute("EmpleadosMasculinos")]
		[Bindable(true)]
		public int? EmpleadosMasculinos 
		{
			get { return GetColumnValue<int?>(Columns.EmpleadosMasculinos); }
			set { SetColumnValue(Columns.EmpleadosMasculinos, value); }
		}
		  
		[XmlAttribute("EmpleadosFemeninos")]
		[Bindable(true)]
		public int? EmpleadosFemeninos 
		{
			get { return GetColumnValue<int?>(Columns.EmpleadosFemeninos); }
			set { SetColumnValue(Columns.EmpleadosFemeninos, value); }
		}
		  
		[XmlAttribute("EmpleadosTotal")]
		[Bindable(true)]
		public int? EmpleadosTotal 
		{
			get { return GetColumnValue<int?>(Columns.EmpleadosTotal); }
			set { SetColumnValue(Columns.EmpleadosTotal, value); }
		}
		  
		[XmlAttribute("NombreComercial")]
		[Bindable(true)]
		public string NombreComercial 
		{
			get { return GetColumnValue<string>(Columns.NombreComercial); }
			set { SetColumnValue(Columns.NombreComercial, value); }
		}
		  
		[XmlAttribute("RegistroNombreComercial")]
		[Bindable(true)]
		public string RegistroNombreComercial 
		{
			get { return GetColumnValue<string>(Columns.RegistroNombreComercial); }
			set { SetColumnValue(Columns.RegistroNombreComercial, value); }
		}
		  
		[XmlAttribute("MarcaFabrica")]
		[Bindable(true)]
		public string MarcaFabrica 
		{
			get { return GetColumnValue<string>(Columns.MarcaFabrica); }
			set { SetColumnValue(Columns.MarcaFabrica, value); }
		}
		  
		[XmlAttribute("RegistroMarcaFabrica")]
		[Bindable(true)]
		public string RegistroMarcaFabrica 
		{
			get { return GetColumnValue<string>(Columns.RegistroMarcaFabrica); }
			set { SetColumnValue(Columns.RegistroMarcaFabrica, value); }
		}
		  
		[XmlAttribute("PatenteInvencion")]
		[Bindable(true)]
		public string PatenteInvencion 
		{
			get { return GetColumnValue<string>(Columns.PatenteInvencion); }
			set { SetColumnValue(Columns.PatenteInvencion, value); }
		}
		  
		[XmlAttribute("RegistroPatenteInvencion")]
		[Bindable(true)]
		public string RegistroPatenteInvencion 
		{
			get { return GetColumnValue<string>(Columns.RegistroPatenteInvencion); }
			set { SetColumnValue(Columns.RegistroPatenteInvencion, value); }
		}
		  
		[XmlAttribute("NombreOperador")]
		[Bindable(true)]
		public string NombreOperador 
		{
			get { return GetColumnValue<string>(Columns.NombreOperador); }
			set { SetColumnValue(Columns.NombreOperador, value); }
		}
		  
		[XmlAttribute("ActividadNegocio")]
		[Bindable(true)]
		public string ActividadNegocio 
		{
			get { return GetColumnValue<string>(Columns.ActividadNegocio); }
			set { SetColumnValue(Columns.ActividadNegocio, value); }
		}
		  
		[XmlAttribute("NumeroSocio")]
		[Bindable(true)]
		public int? NumeroSocio 
		{
			get { return GetColumnValue<int?>(Columns.NumeroSocio); }
			set { SetColumnValue(Columns.NumeroSocio, value); }
		}
		  
		[XmlAttribute("TotalAcciones")]
		[Bindable(true)]
		public int? TotalAcciones 
		{
			get { return GetColumnValue<int?>(Columns.TotalAcciones); }
			set { SetColumnValue(Columns.TotalAcciones, value); }
		}
		  
		[XmlAttribute("EsNuevoRegistro")]
		[Bindable(true)]
		public bool EsNuevoRegistro 
		{
			get { return GetColumnValue<bool>(Columns.EsNuevoRegistro); }
			set { SetColumnValue(Columns.EsNuevoRegistro, value); }
		}
		  
		[XmlAttribute("DireccionCalle")]
		[Bindable(true)]
		public string DireccionCalle 
		{
			get { return GetColumnValue<string>(Columns.DireccionCalle); }
			set { SetColumnValue(Columns.DireccionCalle, value); }
		}
		  
		[XmlAttribute("DireccionNumero")]
		[Bindable(true)]
		public string DireccionNumero 
		{
			get { return GetColumnValue<string>(Columns.DireccionNumero); }
			set { SetColumnValue(Columns.DireccionNumero, value); }
		}
		  
		[XmlAttribute("DireccionCiudadId")]
		[Bindable(true)]
		public int? DireccionCiudadId 
		{
			get { return GetColumnValue<int?>(Columns.DireccionCiudadId); }
			set { SetColumnValue(Columns.DireccionCiudadId, value); }
		}
		  
		[XmlAttribute("DireccionSectorId")]
		[Bindable(true)]
		public int? DireccionSectorId 
		{
			get { return GetColumnValue<int?>(Columns.DireccionSectorId); }
			set { SetColumnValue(Columns.DireccionSectorId, value); }
		}
		  
		[XmlAttribute("DireccionApartadoPostal")]
		[Bindable(true)]
		public string DireccionApartadoPostal 
		{
			get { return GetColumnValue<string>(Columns.DireccionApartadoPostal); }
			set { SetColumnValue(Columns.DireccionApartadoPostal, value); }
		}
		  
		[XmlAttribute("DireccionTelefonoCasa")]
		[Bindable(true)]
		public string DireccionTelefonoCasa 
		{
			get { return GetColumnValue<string>(Columns.DireccionTelefonoCasa); }
			set { SetColumnValue(Columns.DireccionTelefonoCasa, value); }
		}
		  
		[XmlAttribute("DireccionTelefonoOficina")]
		[Bindable(true)]
		public string DireccionTelefonoOficina 
		{
			get { return GetColumnValue<string>(Columns.DireccionTelefonoOficina); }
			set { SetColumnValue(Columns.DireccionTelefonoOficina, value); }
		}
		  
		[XmlAttribute("DireccionExtension")]
		[Bindable(true)]
		public int? DireccionExtension 
		{
			get { return GetColumnValue<int?>(Columns.DireccionExtension); }
			set { SetColumnValue(Columns.DireccionExtension, value); }
		}
		  
		[XmlAttribute("DireccionFax")]
		[Bindable(true)]
		public string DireccionFax 
		{
			get { return GetColumnValue<string>(Columns.DireccionFax); }
			set { SetColumnValue(Columns.DireccionFax, value); }
		}
		  
		[XmlAttribute("DireccionEmail")]
		[Bindable(true)]
		public string DireccionEmail 
		{
			get { return GetColumnValue<string>(Columns.DireccionEmail); }
			set { SetColumnValue(Columns.DireccionEmail, value); }
		}
		  
		[XmlAttribute("DireccionSitioWeb")]
		[Bindable(true)]
		public string DireccionSitioWeb 
		{
			get { return GetColumnValue<string>(Columns.DireccionSitioWeb); }
			set { SetColumnValue(Columns.DireccionSitioWeb, value); }
		}
		  
		[XmlAttribute("NombreSolicitante")]
		[Bindable(true)]
		public string NombreSolicitante 
		{
			get { return GetColumnValue<string>(Columns.NombreSolicitante); }
			set { SetColumnValue(Columns.NombreSolicitante, value); }
		}
		  
		[XmlAttribute("CargoSolicitante")]
		[Bindable(true)]
		public string CargoSolicitante 
		{
			get { return GetColumnValue<string>(Columns.CargoSolicitante); }
			set { SetColumnValue(Columns.CargoSolicitante, value); }
		}
		  
		[XmlAttribute("GestorUsername")]
		[Bindable(true)]
		public string GestorUsername 
		{
			get { return GetColumnValue<string>(Columns.GestorUsername); }
			set { SetColumnValue(Columns.GestorUsername, value); }
		}
		  
		[XmlAttribute("FechaSolicitud")]
		[Bindable(true)]
		public DateTime? FechaSolicitud 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaSolicitud); }
			set { SetColumnValue(Columns.FechaSolicitud, value); }
		}
		  
		[XmlAttribute("EntidadActiva")]
		[Bindable(true)]
		public bool? EntidadActiva 
		{
			get { return GetColumnValue<bool?>(Columns.EntidadActiva); }
			set { SetColumnValue(Columns.EntidadActiva, value); }
		}
		
		#endregion
		
		
		#region PrimaryKey Methods		
		
        protected override void SetPrimaryKey(object oValue)
        {
            base.SetPrimaryKey(oValue);
            
            SetPKValues();
        }
        
		
		public CamaraComercio.DataAccess.OficinaVirtual.ProductoCollection ProductoRecords()
		{
			return new CamaraComercio.DataAccess.OficinaVirtual.ProductoCollection().Where(Producto.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.OficinaVirtual.ReferenciaBancariaCollection ReferenciaBancariaRecords()
		{
			return new CamaraComercio.DataAccess.OficinaVirtual.ReferenciaBancariaCollection().Where(ReferenciaBancaria.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.OficinaVirtual.ReferenciaComercialCollection ReferenciaComercialRecords()
		{
			return new CamaraComercio.DataAccess.OficinaVirtual.ReferenciaComercialCollection().Where(ReferenciaComercial.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.OficinaVirtual.RegistroActividadesCollection RegistroActividadesRecords()
		{
			return new CamaraComercio.DataAccess.OficinaVirtual.RegistroActividadesCollection().Where(RegistroActividades.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.OficinaVirtual.RegistroActividadesEspecificasCollection RegistroActividadesEspecificasRecords()
		{
			return new CamaraComercio.DataAccess.OficinaVirtual.RegistroActividadesEspecificasCollection().Where(RegistroActividadesEspecificas.Columns.RegistroId, RegistroId).Load();
		}
		#endregion
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varRegistroMercantil,DateTime? varFechaEmision,DateTime? varFechaVencimiento,decimal? varCapitalSocial,decimal? varCapitalAutorizado,decimal? varCapitalPagado,decimal? varActivos,decimal? varBienesRaices,DateTime? varFechaInicioOperacion,int? varEmpleadosMasculinos,int? varEmpleadosFemeninos,int? varEmpleadosTotal,string varNombreComercial,string varRegistroNombreComercial,string varMarcaFabrica,string varRegistroMarcaFabrica,string varPatenteInvencion,string varRegistroPatenteInvencion,string varNombreOperador,string varActividadNegocio,int? varNumeroSocio,int? varTotalAcciones,bool varEsNuevoRegistro,string varDireccionCalle,string varDireccionNumero,int? varDireccionCiudadId,int? varDireccionSectorId,string varDireccionApartadoPostal,string varDireccionTelefonoCasa,string varDireccionTelefonoOficina,int? varDireccionExtension,string varDireccionFax,string varDireccionEmail,string varDireccionSitioWeb,string varNombreSolicitante,string varCargoSolicitante,string varGestorUsername,DateTime? varFechaSolicitud,bool? varEntidadActiva)
		{
			Registro item = new Registro();
			
			item.RegistroMercantil = varRegistroMercantil;
			
			item.FechaEmision = varFechaEmision;
			
			item.FechaVencimiento = varFechaVencimiento;
			
			item.CapitalSocial = varCapitalSocial;
			
			item.CapitalAutorizado = varCapitalAutorizado;
			
			item.CapitalPagado = varCapitalPagado;
			
			item.Activos = varActivos;
			
			item.BienesRaices = varBienesRaices;
			
			item.FechaInicioOperacion = varFechaInicioOperacion;
			
			item.EmpleadosMasculinos = varEmpleadosMasculinos;
			
			item.EmpleadosFemeninos = varEmpleadosFemeninos;
			
			item.EmpleadosTotal = varEmpleadosTotal;
			
			item.NombreComercial = varNombreComercial;
			
			item.RegistroNombreComercial = varRegistroNombreComercial;
			
			item.MarcaFabrica = varMarcaFabrica;
			
			item.RegistroMarcaFabrica = varRegistroMarcaFabrica;
			
			item.PatenteInvencion = varPatenteInvencion;
			
			item.RegistroPatenteInvencion = varRegistroPatenteInvencion;
			
			item.NombreOperador = varNombreOperador;
			
			item.ActividadNegocio = varActividadNegocio;
			
			item.NumeroSocio = varNumeroSocio;
			
			item.TotalAcciones = varTotalAcciones;
			
			item.EsNuevoRegistro = varEsNuevoRegistro;
			
			item.DireccionCalle = varDireccionCalle;
			
			item.DireccionNumero = varDireccionNumero;
			
			item.DireccionCiudadId = varDireccionCiudadId;
			
			item.DireccionSectorId = varDireccionSectorId;
			
			item.DireccionApartadoPostal = varDireccionApartadoPostal;
			
			item.DireccionTelefonoCasa = varDireccionTelefonoCasa;
			
			item.DireccionTelefonoOficina = varDireccionTelefonoOficina;
			
			item.DireccionExtension = varDireccionExtension;
			
			item.DireccionFax = varDireccionFax;
			
			item.DireccionEmail = varDireccionEmail;
			
			item.DireccionSitioWeb = varDireccionSitioWeb;
			
			item.NombreSolicitante = varNombreSolicitante;
			
			item.CargoSolicitante = varCargoSolicitante;
			
			item.GestorUsername = varGestorUsername;
			
			item.FechaSolicitud = varFechaSolicitud;
			
			item.EntidadActiva = varEntidadActiva;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varRegistroId,int? varRegistroMercantil,DateTime? varFechaEmision,DateTime? varFechaVencimiento,decimal? varCapitalSocial,decimal? varCapitalAutorizado,decimal? varCapitalPagado,decimal? varActivos,decimal? varBienesRaices,DateTime? varFechaInicioOperacion,int? varEmpleadosMasculinos,int? varEmpleadosFemeninos,int? varEmpleadosTotal,string varNombreComercial,string varRegistroNombreComercial,string varMarcaFabrica,string varRegistroMarcaFabrica,string varPatenteInvencion,string varRegistroPatenteInvencion,string varNombreOperador,string varActividadNegocio,int? varNumeroSocio,int? varTotalAcciones,bool varEsNuevoRegistro,string varDireccionCalle,string varDireccionNumero,int? varDireccionCiudadId,int? varDireccionSectorId,string varDireccionApartadoPostal,string varDireccionTelefonoCasa,string varDireccionTelefonoOficina,int? varDireccionExtension,string varDireccionFax,string varDireccionEmail,string varDireccionSitioWeb,string varNombreSolicitante,string varCargoSolicitante,string varGestorUsername,DateTime? varFechaSolicitud,bool? varEntidadActiva)
		{
			Registro item = new Registro();
			
				item.RegistroId = varRegistroId;
			
				item.RegistroMercantil = varRegistroMercantil;
			
				item.FechaEmision = varFechaEmision;
			
				item.FechaVencimiento = varFechaVencimiento;
			
				item.CapitalSocial = varCapitalSocial;
			
				item.CapitalAutorizado = varCapitalAutorizado;
			
				item.CapitalPagado = varCapitalPagado;
			
				item.Activos = varActivos;
			
				item.BienesRaices = varBienesRaices;
			
				item.FechaInicioOperacion = varFechaInicioOperacion;
			
				item.EmpleadosMasculinos = varEmpleadosMasculinos;
			
				item.EmpleadosFemeninos = varEmpleadosFemeninos;
			
				item.EmpleadosTotal = varEmpleadosTotal;
			
				item.NombreComercial = varNombreComercial;
			
				item.RegistroNombreComercial = varRegistroNombreComercial;
			
				item.MarcaFabrica = varMarcaFabrica;
			
				item.RegistroMarcaFabrica = varRegistroMarcaFabrica;
			
				item.PatenteInvencion = varPatenteInvencion;
			
				item.RegistroPatenteInvencion = varRegistroPatenteInvencion;
			
				item.NombreOperador = varNombreOperador;
			
				item.ActividadNegocio = varActividadNegocio;
			
				item.NumeroSocio = varNumeroSocio;
			
				item.TotalAcciones = varTotalAcciones;
			
				item.EsNuevoRegistro = varEsNuevoRegistro;
			
				item.DireccionCalle = varDireccionCalle;
			
				item.DireccionNumero = varDireccionNumero;
			
				item.DireccionCiudadId = varDireccionCiudadId;
			
				item.DireccionSectorId = varDireccionSectorId;
			
				item.DireccionApartadoPostal = varDireccionApartadoPostal;
			
				item.DireccionTelefonoCasa = varDireccionTelefonoCasa;
			
				item.DireccionTelefonoOficina = varDireccionTelefonoOficina;
			
				item.DireccionExtension = varDireccionExtension;
			
				item.DireccionFax = varDireccionFax;
			
				item.DireccionEmail = varDireccionEmail;
			
				item.DireccionSitioWeb = varDireccionSitioWeb;
			
				item.NombreSolicitante = varNombreSolicitante;
			
				item.CargoSolicitante = varCargoSolicitante;
			
				item.GestorUsername = varGestorUsername;
			
				item.FechaSolicitud = varFechaSolicitud;
			
				item.EntidadActiva = varEntidadActiva;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn RegistroIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroMercantilColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaEmisionColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaVencimientoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CapitalSocialColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn CapitalAutorizadoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn CapitalPagadoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ActivosColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn BienesRaicesColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaInicioOperacionColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn EmpleadosMasculinosColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn EmpleadosFemeninosColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn EmpleadosTotalColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreComercialColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroNombreComercialColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn MarcaFabricaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroMarcaFabricaColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn PatenteInvencionColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroPatenteInvencionColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreOperadorColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn ActividadNegocioColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn NumeroSocioColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn TotalAccionesColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn EsNuevoRegistroColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionCalleColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionNumeroColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionCiudadIdColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionSectorIdColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionApartadoPostalColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionTelefonoCasaColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionTelefonoOficinaColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionExtensionColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionFaxColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionEmailColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionSitioWebColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreSolicitanteColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn CargoSolicitanteColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn GestorUsernameColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaSolicitudColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn EntidadActivaColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string RegistroId = @"RegistroId";
			 public static string RegistroMercantil = @"RegistroMercantil";
			 public static string FechaEmision = @"FechaEmision";
			 public static string FechaVencimiento = @"FechaVencimiento";
			 public static string CapitalSocial = @"CapitalSocial";
			 public static string CapitalAutorizado = @"CapitalAutorizado";
			 public static string CapitalPagado = @"CapitalPagado";
			 public static string Activos = @"Activos";
			 public static string BienesRaices = @"BienesRaices";
			 public static string FechaInicioOperacion = @"FechaInicioOperacion";
			 public static string EmpleadosMasculinos = @"EmpleadosMasculinos";
			 public static string EmpleadosFemeninos = @"EmpleadosFemeninos";
			 public static string EmpleadosTotal = @"EmpleadosTotal";
			 public static string NombreComercial = @"NombreComercial";
			 public static string RegistroNombreComercial = @"RegistroNombreComercial";
			 public static string MarcaFabrica = @"MarcaFabrica";
			 public static string RegistroMarcaFabrica = @"RegistroMarcaFabrica";
			 public static string PatenteInvencion = @"PatenteInvencion";
			 public static string RegistroPatenteInvencion = @"RegistroPatenteInvencion";
			 public static string NombreOperador = @"NombreOperador";
			 public static string ActividadNegocio = @"ActividadNegocio";
			 public static string NumeroSocio = @"NumeroSocios";
			 public static string TotalAcciones = @"TotalAcciones";
			 public static string EsNuevoRegistro = @"EsNuevoRegistro";
			 public static string DireccionCalle = @"DireccionCalle";
			 public static string DireccionNumero = @"DireccionNumero";
			 public static string DireccionCiudadId = @"DireccionCiudadId";
			 public static string DireccionSectorId = @"DireccionSectorId";
			 public static string DireccionApartadoPostal = @"DireccionApartadoPostal";
			 public static string DireccionTelefonoCasa = @"DireccionTelefonoCasa";
			 public static string DireccionTelefonoOficina = @"DireccionTelefonoOficina";
			 public static string DireccionExtension = @"DireccionExtension";
			 public static string DireccionFax = @"DireccionFax";
			 public static string DireccionEmail = @"DireccionEmail";
			 public static string DireccionSitioWeb = @"DireccionSitioWeb";
			 public static string NombreSolicitante = @"NombreSolicitante";
			 public static string CargoSolicitante = @"CargoSolicitante";
			 public static string GestorUsername = @"GestorUsername";
			 public static string FechaSolicitud = @"FechaSolicitud";
			 public static string EntidadActiva = @"EntidadActiva";
						
		}
		#endregion
		
		#region Update PK Collections
		
        public void SetPKValues()
        {
}
        #endregion
    
        #region Deep Save
		
        public void DeepSave()
        {
            Save();
            
}
        #endregion
	}
}
