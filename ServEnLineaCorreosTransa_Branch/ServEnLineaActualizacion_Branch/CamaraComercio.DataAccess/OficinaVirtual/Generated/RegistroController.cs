using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.OficinaVirtual
{
    /// <summary>
    /// Controller class for Registros
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class RegistroController
    {
        // Preload our schema..
        Registro thisSchemaLoad = new Registro();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public RegistroCollection FetchAll()
        {
            RegistroCollection coll = new RegistroCollection();
            Query qry = new Query(Registro.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public RegistroCollection FetchByID(object RegistroId)
        {
            RegistroCollection coll = new RegistroCollection().Where("RegistroId", RegistroId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public RegistroCollection FetchByQuery(Query qry)
        {
            RegistroCollection coll = new RegistroCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object RegistroId)
        {
            return (Registro.Delete(RegistroId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object RegistroId)
        {
            return (Registro.Destroy(RegistroId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? RegistroMercantil,DateTime? FechaEmision,DateTime? FechaVencimiento,decimal? CapitalSocial,decimal? CapitalAutorizado,decimal? CapitalPagado,decimal? Activos,decimal? BienesRaices,DateTime? FechaInicioOperacion,int? EmpleadosMasculinos,int? EmpleadosFemeninos,int? EmpleadosTotal,string NombreComercial,string RegistroNombreComercial,string MarcaFabrica,string RegistroMarcaFabrica,string PatenteInvencion,string RegistroPatenteInvencion,string NombreOperador,string ActividadNegocio,int? NumeroSocio,int? TotalAcciones,bool EsNuevoRegistro,string DireccionCalle,string DireccionNumero,int? DireccionCiudadId,int? DireccionSectorId,string DireccionApartadoPostal,string DireccionTelefonoCasa,string DireccionTelefonoOficina,int? DireccionExtension,string DireccionFax,string DireccionEmail,string DireccionSitioWeb,string NombreSolicitante,string CargoSolicitante,string GestorUsername,DateTime? FechaSolicitud,bool? EntidadActiva)
	    {
		    Registro item = new Registro();
		    
            item.RegistroMercantil = RegistroMercantil;
            
            item.FechaEmision = FechaEmision;
            
            item.FechaVencimiento = FechaVencimiento;
            
            item.CapitalSocial = CapitalSocial;
            
            item.CapitalAutorizado = CapitalAutorizado;
            
            item.CapitalPagado = CapitalPagado;
            
            item.Activos = Activos;
            
            item.BienesRaices = BienesRaices;
            
            item.FechaInicioOperacion = FechaInicioOperacion;
            
            item.EmpleadosMasculinos = EmpleadosMasculinos;
            
            item.EmpleadosFemeninos = EmpleadosFemeninos;
            
            item.EmpleadosTotal = EmpleadosTotal;
            
            item.NombreComercial = NombreComercial;
            
            item.RegistroNombreComercial = RegistroNombreComercial;
            
            item.MarcaFabrica = MarcaFabrica;
            
            item.RegistroMarcaFabrica = RegistroMarcaFabrica;
            
            item.PatenteInvencion = PatenteInvencion;
            
            item.RegistroPatenteInvencion = RegistroPatenteInvencion;
            
            item.NombreOperador = NombreOperador;
            
            item.ActividadNegocio = ActividadNegocio;
            
            item.NumeroSocio = NumeroSocio;
            
            item.TotalAcciones = TotalAcciones;
            
            item.EsNuevoRegistro = EsNuevoRegistro;
            
            item.DireccionCalle = DireccionCalle;
            
            item.DireccionNumero = DireccionNumero;
            
            item.DireccionCiudadId = DireccionCiudadId;
            
            item.DireccionSectorId = DireccionSectorId;
            
            item.DireccionApartadoPostal = DireccionApartadoPostal;
            
            item.DireccionTelefonoCasa = DireccionTelefonoCasa;
            
            item.DireccionTelefonoOficina = DireccionTelefonoOficina;
            
            item.DireccionExtension = DireccionExtension;
            
            item.DireccionFax = DireccionFax;
            
            item.DireccionEmail = DireccionEmail;
            
            item.DireccionSitioWeb = DireccionSitioWeb;
            
            item.NombreSolicitante = NombreSolicitante;
            
            item.CargoSolicitante = CargoSolicitante;
            
            item.GestorUsername = GestorUsername;
            
            item.FechaSolicitud = FechaSolicitud;
            
            item.EntidadActiva = EntidadActiva;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int RegistroId,int? RegistroMercantil,DateTime? FechaEmision,DateTime? FechaVencimiento,decimal? CapitalSocial,decimal? CapitalAutorizado,decimal? CapitalPagado,decimal? Activos,decimal? BienesRaices,DateTime? FechaInicioOperacion,int? EmpleadosMasculinos,int? EmpleadosFemeninos,int? EmpleadosTotal,string NombreComercial,string RegistroNombreComercial,string MarcaFabrica,string RegistroMarcaFabrica,string PatenteInvencion,string RegistroPatenteInvencion,string NombreOperador,string ActividadNegocio,int? NumeroSocio,int? TotalAcciones,bool EsNuevoRegistro,string DireccionCalle,string DireccionNumero,int? DireccionCiudadId,int? DireccionSectorId,string DireccionApartadoPostal,string DireccionTelefonoCasa,string DireccionTelefonoOficina,int? DireccionExtension,string DireccionFax,string DireccionEmail,string DireccionSitioWeb,string NombreSolicitante,string CargoSolicitante,string GestorUsername,DateTime? FechaSolicitud,bool? EntidadActiva)
	    {
		    Registro item = new Registro();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.RegistroId = RegistroId;
				
			item.RegistroMercantil = RegistroMercantil;
				
			item.FechaEmision = FechaEmision;
				
			item.FechaVencimiento = FechaVencimiento;
				
			item.CapitalSocial = CapitalSocial;
				
			item.CapitalAutorizado = CapitalAutorizado;
				
			item.CapitalPagado = CapitalPagado;
				
			item.Activos = Activos;
				
			item.BienesRaices = BienesRaices;
				
			item.FechaInicioOperacion = FechaInicioOperacion;
				
			item.EmpleadosMasculinos = EmpleadosMasculinos;
				
			item.EmpleadosFemeninos = EmpleadosFemeninos;
				
			item.EmpleadosTotal = EmpleadosTotal;
				
			item.NombreComercial = NombreComercial;
				
			item.RegistroNombreComercial = RegistroNombreComercial;
				
			item.MarcaFabrica = MarcaFabrica;
				
			item.RegistroMarcaFabrica = RegistroMarcaFabrica;
				
			item.PatenteInvencion = PatenteInvencion;
				
			item.RegistroPatenteInvencion = RegistroPatenteInvencion;
				
			item.NombreOperador = NombreOperador;
				
			item.ActividadNegocio = ActividadNegocio;
				
			item.NumeroSocio = NumeroSocio;
				
			item.TotalAcciones = TotalAcciones;
				
			item.EsNuevoRegistro = EsNuevoRegistro;
				
			item.DireccionCalle = DireccionCalle;
				
			item.DireccionNumero = DireccionNumero;
				
			item.DireccionCiudadId = DireccionCiudadId;
				
			item.DireccionSectorId = DireccionSectorId;
				
			item.DireccionApartadoPostal = DireccionApartadoPostal;
				
			item.DireccionTelefonoCasa = DireccionTelefonoCasa;
				
			item.DireccionTelefonoOficina = DireccionTelefonoOficina;
				
			item.DireccionExtension = DireccionExtension;
				
			item.DireccionFax = DireccionFax;
				
			item.DireccionEmail = DireccionEmail;
				
			item.DireccionSitioWeb = DireccionSitioWeb;
				
			item.NombreSolicitante = NombreSolicitante;
				
			item.CargoSolicitante = CargoSolicitante;
				
			item.GestorUsername = GestorUsername;
				
			item.FechaSolicitud = FechaSolicitud;
				
			item.EntidadActiva = EntidadActiva;
				
	        item.Save(UserName);
	    }
    }
}
