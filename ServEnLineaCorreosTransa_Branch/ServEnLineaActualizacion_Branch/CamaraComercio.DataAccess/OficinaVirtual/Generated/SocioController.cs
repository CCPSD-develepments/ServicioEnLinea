using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.OficinaVirtual
{
    /// <summary>
    /// Controller class for Socios
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SocioController
    {
        // Preload our schema..
        Socio thisSchemaLoad = new Socio();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SocioCollection FetchAll()
        {
            SocioCollection coll = new SocioCollection();
            Query qry = new Query(Socio.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SocioCollection FetchByID(object Id)
        {
            SocioCollection coll = new SocioCollection().Where("Id", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SocioCollection FetchByQuery(Query qry)
        {
            SocioCollection coll = new SocioCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (Socio.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (Socio.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int RegistroId,string TipoSocio,string TipoRelacion,int? CargoId,string TipoDocumento,string Documento,int? NacionalidadId,string RegistroMercantil,int Orden,string SociedadNombreSocial,string PersonaPrimerNombre,string PersonaSegundoNombre,string PersonaPrimerApellido,string PersonaSegundoApellido,string PersonaEstadoCivil,int? PersonaProfesionId,string DireccionCalle,string DireccionNumero,int? DireccionCiudadId,int? DireccionSectorId,string DireccionApartadoPostal)
	    {
		    Socio item = new Socio();
		    
            item.RegistroId = RegistroId;
            
            item.TipoSocio = TipoSocio;
            
            item.TipoRelacion = TipoRelacion;
            
            item.CargoId = CargoId;
            
            item.TipoDocumento = TipoDocumento;
            
            item.Documento = Documento;
            
            item.NacionalidadId = NacionalidadId;
            
            item.RegistroMercantil = RegistroMercantil;
            
            item.Orden = Orden;
            
            item.SociedadNombreSocial = SociedadNombreSocial;
            
            item.PersonaPrimerNombre = PersonaPrimerNombre;
            
            item.PersonaSegundoNombre = PersonaSegundoNombre;
            
            item.PersonaPrimerApellido = PersonaPrimerApellido;
            
            item.PersonaSegundoApellido = PersonaSegundoApellido;
            
            item.PersonaEstadoCivil = PersonaEstadoCivil;
            
            item.PersonaProfesionId = PersonaProfesionId;
            
            item.DireccionCalle = DireccionCalle;
            
            item.DireccionNumero = DireccionNumero;
            
            item.DireccionCiudadId = DireccionCiudadId;
            
            item.DireccionSectorId = DireccionSectorId;
            
            item.DireccionApartadoPostal = DireccionApartadoPostal;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,int RegistroId,string TipoSocio,string TipoRelacion,int? CargoId,string TipoDocumento,string Documento,int? NacionalidadId,string RegistroMercantil,int Orden,string SociedadNombreSocial,string PersonaPrimerNombre,string PersonaSegundoNombre,string PersonaPrimerApellido,string PersonaSegundoApellido,string PersonaEstadoCivil,int? PersonaProfesionId,string DireccionCalle,string DireccionNumero,int? DireccionCiudadId,int? DireccionSectorId,string DireccionApartadoPostal)
	    {
		    Socio item = new Socio();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.RegistroId = RegistroId;
				
			item.TipoSocio = TipoSocio;
				
			item.TipoRelacion = TipoRelacion;
				
			item.CargoId = CargoId;
				
			item.TipoDocumento = TipoDocumento;
				
			item.Documento = Documento;
				
			item.NacionalidadId = NacionalidadId;
				
			item.RegistroMercantil = RegistroMercantil;
				
			item.Orden = Orden;
				
			item.SociedadNombreSocial = SociedadNombreSocial;
				
			item.PersonaPrimerNombre = PersonaPrimerNombre;
				
			item.PersonaSegundoNombre = PersonaSegundoNombre;
				
			item.PersonaPrimerApellido = PersonaPrimerApellido;
				
			item.PersonaSegundoApellido = PersonaSegundoApellido;
				
			item.PersonaEstadoCivil = PersonaEstadoCivil;
				
			item.PersonaProfesionId = PersonaProfesionId;
				
			item.DireccionCalle = DireccionCalle;
				
			item.DireccionNumero = DireccionNumero;
				
			item.DireccionCiudadId = DireccionCiudadId;
				
			item.DireccionSectorId = DireccionSectorId;
				
			item.DireccionApartadoPostal = DireccionApartadoPostal;
				
	        item.Save(UserName);
	    }
    }
}
