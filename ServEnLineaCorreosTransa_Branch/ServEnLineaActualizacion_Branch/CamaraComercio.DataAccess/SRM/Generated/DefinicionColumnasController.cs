using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
    /// <summary>
    /// Controller class for DEFINICION_COLUMNAS
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DefinicionColumnasController
    {
        // Preload our schema..
        DefinicionColumnas thisSchemaLoad = new DefinicionColumnas();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DefinicionColumnasCollection FetchAll()
        {
            DefinicionColumnasCollection coll = new DefinicionColumnasCollection();
            Query qry = new Query(DefinicionColumnas.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DefinicionColumnasCollection FetchByID(object ColumnaId)
        {
            DefinicionColumnasCollection coll = new DefinicionColumnasCollection().Where("COLUMNA_ID", ColumnaId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DefinicionColumnasCollection FetchByQuery(Query qry)
        {
            DefinicionColumnasCollection coll = new DefinicionColumnasCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object ColumnaId)
        {
            return (DefinicionColumnas.Delete(ColumnaId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object ColumnaId)
        {
            return (DefinicionColumnas.Destroy(ColumnaId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string NombreTabla,string NombreEsquema,string NombreTablaCorto,string NombreColumna,bool AceptaNulo,string TipoDatos,int? Longitud,bool Visible,string TablaEnlace,string ColumnaEnlace,int? TipoEnlace,string Consulta,string Descripcion,bool TablaDefault)
	    {
		    DefinicionColumnas item = new DefinicionColumnas();
		    
            item.NombreTabla = NombreTabla;
            
            item.NombreEsquema = NombreEsquema;
            
            item.NombreTablaCorto = NombreTablaCorto;
            
            item.NombreColumna = NombreColumna;
            
            item.AceptaNulo = AceptaNulo;
            
            item.TipoDatos = TipoDatos;
            
            item.Longitud = Longitud;
            
            item.Visible = Visible;
            
            item.TablaEnlace = TablaEnlace;
            
            item.ColumnaEnlace = ColumnaEnlace;
            
            item.TipoEnlace = TipoEnlace;
            
            item.Consulta = Consulta;
            
            item.Descripcion = Descripcion;
            
            item.TablaDefault = TablaDefault;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int ColumnaId,string NombreTabla,string NombreEsquema,string NombreTablaCorto,string NombreColumna,bool AceptaNulo,string TipoDatos,int? Longitud,bool Visible,string TablaEnlace,string ColumnaEnlace,int? TipoEnlace,string Consulta,string Descripcion,bool TablaDefault)
	    {
		    DefinicionColumnas item = new DefinicionColumnas();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.ColumnaId = ColumnaId;
				
			item.NombreTabla = NombreTabla;
				
			item.NombreEsquema = NombreEsquema;
				
			item.NombreTablaCorto = NombreTablaCorto;
				
			item.NombreColumna = NombreColumna;
				
			item.AceptaNulo = AceptaNulo;
				
			item.TipoDatos = TipoDatos;
				
			item.Longitud = Longitud;
				
			item.Visible = Visible;
				
			item.TablaEnlace = TablaEnlace;
				
			item.ColumnaEnlace = ColumnaEnlace;
				
			item.TipoEnlace = TipoEnlace;
				
			item.Consulta = Consulta;
				
			item.Descripcion = Descripcion;
				
			item.TablaDefault = TablaDefault;
				
	        item.Save(UserName);
	    }
    }
}
