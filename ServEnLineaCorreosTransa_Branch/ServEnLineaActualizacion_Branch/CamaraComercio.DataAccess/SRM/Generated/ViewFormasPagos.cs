using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewFormasPagos class.
    /// </summary>
    [Serializable]
    public partial class ViewFormasPagosCollection : ReadOnlyList<ViewFormasPagos, ViewFormasPagosCollection>
    {        
        public ViewFormasPagosCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_FormasPagos view.
    /// </summary>
    [Serializable]
    public partial class ViewFormasPagos : ReadOnlyRecord<ViewFormasPagos>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_FormasPagos", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"Transaccion";
                //columns
                
                TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
                colvarId.ColumnName = "Id";
                colvarId.DataType = DbType.Int32;
                colvarId.MaxLength = 0;
                colvarId.AutoIncrement = false;
                colvarId.IsNullable = false;
                colvarId.IsPrimaryKey = false;
                colvarId.IsForeignKey = false;
                colvarId.IsReadOnly = false;
                
                schema.Columns.Add(colvarId);
                
                TableSchema.TableColumn colvarFormaPago = new TableSchema.TableColumn(schema);
                colvarFormaPago.ColumnName = "FormaPago";
                colvarFormaPago.DataType = DbType.AnsiStringFixedLength;
                colvarFormaPago.MaxLength = 1;
                colvarFormaPago.AutoIncrement = false;
                colvarFormaPago.IsNullable = false;
                colvarFormaPago.IsPrimaryKey = false;
                colvarFormaPago.IsForeignKey = false;
                colvarFormaPago.IsReadOnly = false;
                
                schema.Columns.Add(colvarFormaPago);
                
                TableSchema.TableColumn colvarValor = new TableSchema.TableColumn(schema);
                colvarValor.ColumnName = "Valor";
                colvarValor.DataType = DbType.Currency;
                colvarValor.MaxLength = 0;
                colvarValor.AutoIncrement = false;
                colvarValor.IsNullable = false;
                colvarValor.IsPrimaryKey = false;
                colvarValor.IsForeignKey = false;
                colvarValor.IsReadOnly = false;
                
                schema.Columns.Add(colvarValor);
                
                TableSchema.TableColumn colvarTasa = new TableSchema.TableColumn(schema);
                colvarTasa.ColumnName = "Tasa";
                colvarTasa.DataType = DbType.Currency;
                colvarTasa.MaxLength = 0;
                colvarTasa.AutoIncrement = false;
                colvarTasa.IsNullable = false;
                colvarTasa.IsPrimaryKey = false;
                colvarTasa.IsForeignKey = false;
                colvarTasa.IsReadOnly = false;
                
                schema.Columns.Add(colvarTasa);
                
                TableSchema.TableColumn colvarReferencia = new TableSchema.TableColumn(schema);
                colvarReferencia.ColumnName = "Referencia";
                colvarReferencia.DataType = DbType.AnsiString;
                colvarReferencia.MaxLength = 150;
                colvarReferencia.AutoIncrement = false;
                colvarReferencia.IsNullable = false;
                colvarReferencia.IsPrimaryKey = false;
                colvarReferencia.IsForeignKey = false;
                colvarReferencia.IsReadOnly = false;
                
                schema.Columns.Add(colvarReferencia);
                
                TableSchema.TableColumn colvarNoTarjeta = new TableSchema.TableColumn(schema);
                colvarNoTarjeta.ColumnName = "NoTarjeta";
                colvarNoTarjeta.DataType = DbType.AnsiString;
                colvarNoTarjeta.MaxLength = 50;
                colvarNoTarjeta.AutoIncrement = false;
                colvarNoTarjeta.IsNullable = false;
                colvarNoTarjeta.IsPrimaryKey = false;
                colvarNoTarjeta.IsForeignKey = false;
                colvarNoTarjeta.IsReadOnly = false;
                
                schema.Columns.Add(colvarNoTarjeta);
                
                TableSchema.TableColumn colvarDivisa = new TableSchema.TableColumn(schema);
                colvarDivisa.ColumnName = "Divisa";
                colvarDivisa.DataType = DbType.Currency;
                colvarDivisa.MaxLength = 0;
                colvarDivisa.AutoIncrement = false;
                colvarDivisa.IsNullable = false;
                colvarDivisa.IsPrimaryKey = false;
                colvarDivisa.IsForeignKey = false;
                colvarDivisa.IsReadOnly = false;
                
                schema.Columns.Add(colvarDivisa);
                
                TableSchema.TableColumn colvarFechaCuadre = new TableSchema.TableColumn(schema);
                colvarFechaCuadre.ColumnName = "FechaCuadre";
                colvarFechaCuadre.DataType = DbType.AnsiString;
                colvarFechaCuadre.MaxLength = 0;
                colvarFechaCuadre.AutoIncrement = false;
                colvarFechaCuadre.IsNullable = false;
                colvarFechaCuadre.IsPrimaryKey = false;
                colvarFechaCuadre.IsForeignKey = false;
                colvarFechaCuadre.IsReadOnly = false;
                
                schema.Columns.Add(colvarFechaCuadre);
                
                TableSchema.TableColumn colvarValorEntregado = new TableSchema.TableColumn(schema);
                colvarValorEntregado.ColumnName = "ValorEntregado";
                colvarValorEntregado.DataType = DbType.Currency;
                colvarValorEntregado.MaxLength = 0;
                colvarValorEntregado.AutoIncrement = false;
                colvarValorEntregado.IsNullable = false;
                colvarValorEntregado.IsPrimaryKey = false;
                colvarValorEntregado.IsForeignKey = false;
                colvarValorEntregado.IsReadOnly = false;
                
                schema.Columns.Add(colvarValorEntregado);
                
                TableSchema.TableColumn colvarValorDevuelto = new TableSchema.TableColumn(schema);
                colvarValorDevuelto.ColumnName = "ValorDevuelto";
                colvarValorDevuelto.DataType = DbType.Currency;
                colvarValorDevuelto.MaxLength = 0;
                colvarValorDevuelto.AutoIncrement = false;
                colvarValorDevuelto.IsNullable = false;
                colvarValorDevuelto.IsPrimaryKey = false;
                colvarValorDevuelto.IsForeignKey = false;
                colvarValorDevuelto.IsReadOnly = false;
                
                schema.Columns.Add(colvarValorDevuelto);
                
                TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
                colvarTransaccionId.ColumnName = "TransaccionId";
                colvarTransaccionId.DataType = DbType.Int32;
                colvarTransaccionId.MaxLength = 0;
                colvarTransaccionId.AutoIncrement = false;
                colvarTransaccionId.IsNullable = false;
                colvarTransaccionId.IsPrimaryKey = false;
                colvarTransaccionId.IsForeignKey = false;
                colvarTransaccionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTransaccionId);
                
                TableSchema.TableColumn colvarNota = new TableSchema.TableColumn(schema);
                colvarNota.ColumnName = "Nota";
                colvarNota.DataType = DbType.String;
                colvarNota.MaxLength = -1;
                colvarNota.AutoIncrement = false;
                colvarNota.IsNullable = true;
                colvarNota.IsPrimaryKey = false;
                colvarNota.IsForeignKey = false;
                colvarNota.IsReadOnly = false;
                
                schema.Columns.Add(colvarNota);
                
                TableSchema.TableColumn colvarDescripcion = new TableSchema.TableColumn(schema);
                colvarDescripcion.ColumnName = "Descripcion";
                colvarDescripcion.DataType = DbType.AnsiString;
                colvarDescripcion.MaxLength = 150;
                colvarDescripcion.AutoIncrement = false;
                colvarDescripcion.IsNullable = false;
                colvarDescripcion.IsPrimaryKey = false;
                colvarDescripcion.IsForeignKey = false;
                colvarDescripcion.IsReadOnly = false;
                
                schema.Columns.Add(colvarDescripcion);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_FormasPagos",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewFormasPagos()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewFormasPagos(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewFormasPagos(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewFormasPagos(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Id")]
        [Bindable(true)]
        public int Id 
	    {
		    get
		    {
			    return GetColumnValue<int>("Id");
		    }
            set 
		    {
			    SetColumnValue("Id", value);
            }
        }
	      
        [XmlAttribute("FormaPago")]
        [Bindable(true)]
        public string FormaPago 
	    {
		    get
		    {
			    return GetColumnValue<string>("FormaPago");
		    }
            set 
		    {
			    SetColumnValue("FormaPago", value);
            }
        }
	      
        [XmlAttribute("Valor")]
        [Bindable(true)]
        public decimal Valor 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Valor");
		    }
            set 
		    {
			    SetColumnValue("Valor", value);
            }
        }
	      
        [XmlAttribute("Tasa")]
        [Bindable(true)]
        public decimal Tasa 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Tasa");
		    }
            set 
		    {
			    SetColumnValue("Tasa", value);
            }
        }
	      
        [XmlAttribute("Referencia")]
        [Bindable(true)]
        public string Referencia 
	    {
		    get
		    {
			    return GetColumnValue<string>("Referencia");
		    }
            set 
		    {
			    SetColumnValue("Referencia", value);
            }
        }
	      
        [XmlAttribute("NoTarjeta")]
        [Bindable(true)]
        public string NoTarjeta 
	    {
		    get
		    {
			    return GetColumnValue<string>("NoTarjeta");
		    }
            set 
		    {
			    SetColumnValue("NoTarjeta", value);
            }
        }
	      
        [XmlAttribute("Divisa")]
        [Bindable(true)]
        public decimal Divisa 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("Divisa");
		    }
            set 
		    {
			    SetColumnValue("Divisa", value);
            }
        }
	      
        [XmlAttribute("FechaCuadre")]
        [Bindable(true)]
        public string FechaCuadre 
	    {
		    get
		    {
			    return GetColumnValue<string>("FechaCuadre");
		    }
            set 
		    {
			    SetColumnValue("FechaCuadre", value);
            }
        }
	      
        [XmlAttribute("ValorEntregado")]
        [Bindable(true)]
        public decimal ValorEntregado 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("ValorEntregado");
		    }
            set 
		    {
			    SetColumnValue("ValorEntregado", value);
            }
        }
	      
        [XmlAttribute("ValorDevuelto")]
        [Bindable(true)]
        public decimal ValorDevuelto 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("ValorDevuelto");
		    }
            set 
		    {
			    SetColumnValue("ValorDevuelto", value);
            }
        }
	      
        [XmlAttribute("TransaccionId")]
        [Bindable(true)]
        public int TransaccionId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TransaccionId");
		    }
            set 
		    {
			    SetColumnValue("TransaccionId", value);
            }
        }
	      
        [XmlAttribute("Nota")]
        [Bindable(true)]
        public string Nota 
	    {
		    get
		    {
			    return GetColumnValue<string>("Nota");
		    }
            set 
		    {
			    SetColumnValue("Nota", value);
            }
        }
	      
        [XmlAttribute("Descripcion")]
        [Bindable(true)]
        public string Descripcion 
	    {
		    get
		    {
			    return GetColumnValue<string>("Descripcion");
		    }
            set 
		    {
			    SetColumnValue("Descripcion", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Id = @"Id";
            
            public static string FormaPago = @"FormaPago";
            
            public static string Valor = @"Valor";
            
            public static string Tasa = @"Tasa";
            
            public static string Referencia = @"Referencia";
            
            public static string NoTarjeta = @"NoTarjeta";
            
            public static string Divisa = @"Divisa";
            
            public static string FechaCuadre = @"FechaCuadre";
            
            public static string ValorEntregado = @"ValorEntregado";
            
            public static string ValorDevuelto = @"ValorDevuelto";
            
            public static string TransaccionId = @"TransaccionId";
            
            public static string Nota = @"Nota";
            
            public static string Descripcion = @"Descripcion";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
