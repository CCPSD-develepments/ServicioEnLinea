using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
    /// <summary>
    /// Controller class for DocumentosTransacciones
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DocumentosTransaccionesController
    {
        // Preload our schema..
        DocumentosTransacciones thisSchemaLoad = new DocumentosTransacciones();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DocumentosTransaccionesCollection FetchAll()
        {
            DocumentosTransaccionesCollection coll = new DocumentosTransaccionesCollection();
            Query qry = new Query(DocumentosTransacciones.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DocumentosTransaccionesCollection FetchByID(object DocumentoTransaccionId)
        {
            DocumentosTransaccionesCollection coll = new DocumentosTransaccionesCollection().Where("DocumentoTransaccionId", DocumentoTransaccionId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DocumentosTransaccionesCollection FetchByQuery(Query qry)
        {
            DocumentosTransaccionesCollection coll = new DocumentosTransaccionesCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object DocumentoTransaccionId)
        {
            return (DocumentosTransacciones.Delete(DocumentoTransaccionId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object DocumentoTransaccionId)
        {
            return (DocumentosTransacciones.Destroy(DocumentoTransaccionId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int TransaccionId,int? SubTransaccionId,int DocumentoId,DateTime? FechaDocumento,int? NoDocumento,int NoOriginales,int NoCopias,int? Libro,int? Folio,string Comentario,bool? AlertaPago,bool CheckValidated,bool Deleted,int? NumeroPaginas,bool? Digitalizado,DateTime? FechaDigitalizacion,bool? Analizado,string Sufijo,DateTime FechaModificacion,Guid Rowguid,string Documento,bool? Registrable,decimal? CostoOriginal,decimal? CostoCopia)
	    {
		    DocumentosTransacciones item = new DocumentosTransacciones();
		    
            item.TransaccionId = TransaccionId;
            
            item.SubTransaccionId = SubTransaccionId;
            
            item.DocumentoId = DocumentoId;
            
            item.FechaDocumento = FechaDocumento;
            
            item.NoDocumento = NoDocumento;
            
            item.NoOriginales = NoOriginales;
            
            item.NoCopias = NoCopias;
            
            item.Libro = Libro;
            
            item.Folio = Folio;
            
            item.Comentario = Comentario;
            
            item.AlertaPago = AlertaPago;
            
            item.CheckValidated = CheckValidated;
            
            item.Deleted = Deleted;
            
            item.NumeroPaginas = NumeroPaginas;
            
            item.Digitalizado = Digitalizado;
            
            item.FechaDigitalizacion = FechaDigitalizacion;
            
            item.Analizado = Analizado;
            
            item.Sufijo = Sufijo;
            
            item.FechaModificacion = FechaModificacion;
            
            item.Rowguid = Rowguid;
            
            item.Documento = Documento;
            
            item.Registrable = Registrable;
            
            item.CostoOriginal = CostoOriginal;
            
            item.CostoCopia = CostoCopia;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int DocumentoTransaccionId,int TransaccionId,int? SubTransaccionId,int DocumentoId,DateTime? FechaDocumento,int? NoDocumento,int NoOriginales,int NoCopias,int? Libro,int? Folio,string Comentario,bool? AlertaPago,bool CheckValidated,bool Deleted,int? NumeroPaginas,bool? Digitalizado,DateTime? FechaDigitalizacion,bool? Analizado,string Sufijo,DateTime FechaModificacion,Guid Rowguid,string Documento,bool? Registrable,decimal? CostoOriginal,decimal? CostoCopia)
	    {
		    DocumentosTransacciones item = new DocumentosTransacciones();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.DocumentoTransaccionId = DocumentoTransaccionId;
				
			item.TransaccionId = TransaccionId;
				
			item.SubTransaccionId = SubTransaccionId;
				
			item.DocumentoId = DocumentoId;
				
			item.FechaDocumento = FechaDocumento;
				
			item.NoDocumento = NoDocumento;
				
			item.NoOriginales = NoOriginales;
				
			item.NoCopias = NoCopias;
				
			item.Libro = Libro;
				
			item.Folio = Folio;
				
			item.Comentario = Comentario;
				
			item.AlertaPago = AlertaPago;
				
			item.CheckValidated = CheckValidated;
				
			item.Deleted = Deleted;
				
			item.NumeroPaginas = NumeroPaginas;
				
			item.Digitalizado = Digitalizado;
				
			item.FechaDigitalizacion = FechaDigitalizacion;
				
			item.Analizado = Analizado;
				
			item.Sufijo = Sufijo;
				
			item.FechaModificacion = FechaModificacion;
				
			item.Rowguid = Rowguid;
				
			item.Documento = Documento;
				
			item.Registrable = Registrable;
				
			item.CostoOriginal = CostoOriginal;
				
			item.CostoCopia = CostoCopia;
				
	        item.Save(UserName);
	    }
    }
}
