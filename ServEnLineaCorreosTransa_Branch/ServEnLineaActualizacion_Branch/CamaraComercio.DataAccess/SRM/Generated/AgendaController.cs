using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
    /// <summary>
    /// Controller class for Agenda
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class AgendaController
    {
        // Preload our schema..
        Agenda thisSchemaLoad = new Agenda();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public AgendaCollection FetchAll()
        {
            AgendaCollection coll = new AgendaCollection();
            Query qry = new Query(Agenda.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public AgendaCollection FetchByID(object AgendaId)
        {
            AgendaCollection coll = new AgendaCollection().Where("AgendaId", AgendaId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public AgendaCollection FetchByQuery(Query qry)
        {
            AgendaCollection coll = new AgendaCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object AgendaId)
        {
            return (Agenda.Delete(AgendaId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object AgendaId)
        {
            return (Agenda.Destroy(AgendaId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int TipoTareaId,DateTime FechaInicio,DateTime? FechaOcuInicial,DateTime? FechaOcuFinal,string Estatus,DateTime? UltimaAlaarma,string TipoTarea)
	    {
		    Agenda item = new Agenda();
		    
            item.TipoTareaId = TipoTareaId;
            
            item.FechaInicio = FechaInicio;
            
            item.FechaOcuInicial = FechaOcuInicial;
            
            item.FechaOcuFinal = FechaOcuFinal;
            
            item.Estatus = Estatus;
            
            item.UltimaAlaarma = UltimaAlaarma;
            
            item.TipoTarea = TipoTarea;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int AgendaId,int TipoTareaId,DateTime FechaInicio,DateTime? FechaOcuInicial,DateTime? FechaOcuFinal,string Estatus,DateTime? UltimaAlaarma,string TipoTarea)
	    {
		    Agenda item = new Agenda();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.AgendaId = AgendaId;
				
			item.TipoTareaId = TipoTareaId;
				
			item.FechaInicio = FechaInicio;
				
			item.FechaOcuInicial = FechaOcuInicial;
				
			item.FechaOcuFinal = FechaOcuFinal;
				
			item.Estatus = Estatus;
				
			item.UltimaAlaarma = UltimaAlaarma;
				
			item.TipoTarea = TipoTarea;
				
	        item.Save(UserName);
	    }
    }
}
