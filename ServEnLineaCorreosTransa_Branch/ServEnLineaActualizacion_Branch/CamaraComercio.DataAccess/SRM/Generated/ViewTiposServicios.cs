using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewTiposServicios class.
    /// </summary>
    [Serializable]
    public partial class ViewTiposServiciosCollection : ReadOnlyList<ViewTiposServicios, ViewTiposServiciosCollection>
    {        
        public ViewTiposServiciosCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_TiposServicios view.
    /// </summary>
    [Serializable]
    public partial class ViewTiposServicios : ReadOnlyRecord<ViewTiposServicios>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_TiposServicios", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"Transaccion";
                //columns
                
                TableSchema.TableColumn colvarTipoServicioId = new TableSchema.TableColumn(schema);
                colvarTipoServicioId.ColumnName = "TipoServicioId";
                colvarTipoServicioId.DataType = DbType.Int32;
                colvarTipoServicioId.MaxLength = 0;
                colvarTipoServicioId.AutoIncrement = false;
                colvarTipoServicioId.IsNullable = false;
                colvarTipoServicioId.IsPrimaryKey = false;
                colvarTipoServicioId.IsForeignKey = false;
                colvarTipoServicioId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoServicioId);
                
                TableSchema.TableColumn colvarDescripcion = new TableSchema.TableColumn(schema);
                colvarDescripcion.ColumnName = "Descripcion";
                colvarDescripcion.DataType = DbType.AnsiString;
                colvarDescripcion.MaxLength = -1;
                colvarDescripcion.AutoIncrement = false;
                colvarDescripcion.IsNullable = false;
                colvarDescripcion.IsPrimaryKey = false;
                colvarDescripcion.IsForeignKey = false;
                colvarDescripcion.IsReadOnly = false;
                
                schema.Columns.Add(colvarDescripcion);
                
                TableSchema.TableColumn colvarTipoTransaccionId = new TableSchema.TableColumn(schema);
                colvarTipoTransaccionId.ColumnName = "TipoTransaccionId";
                colvarTipoTransaccionId.DataType = DbType.Int32;
                colvarTipoTransaccionId.MaxLength = 0;
                colvarTipoTransaccionId.AutoIncrement = false;
                colvarTipoTransaccionId.IsNullable = true;
                colvarTipoTransaccionId.IsPrimaryKey = false;
                colvarTipoTransaccionId.IsForeignKey = false;
                colvarTipoTransaccionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoTransaccionId);
                
                TableSchema.TableColumn colvarCostoServicio = new TableSchema.TableColumn(schema);
                colvarCostoServicio.ColumnName = "CostoServicio";
                colvarCostoServicio.DataType = DbType.Currency;
                colvarCostoServicio.MaxLength = 0;
                colvarCostoServicio.AutoIncrement = false;
                colvarCostoServicio.IsNullable = false;
                colvarCostoServicio.IsPrimaryKey = false;
                colvarCostoServicio.IsForeignKey = false;
                colvarCostoServicio.IsReadOnly = false;
                
                schema.Columns.Add(colvarCostoServicio);
                
                TableSchema.TableColumn colvarCalculoBaseCapital = new TableSchema.TableColumn(schema);
                colvarCalculoBaseCapital.ColumnName = "CalculoBaseCapital";
                colvarCalculoBaseCapital.DataType = DbType.Boolean;
                colvarCalculoBaseCapital.MaxLength = 0;
                colvarCalculoBaseCapital.AutoIncrement = false;
                colvarCalculoBaseCapital.IsNullable = true;
                colvarCalculoBaseCapital.IsPrimaryKey = false;
                colvarCalculoBaseCapital.IsForeignKey = false;
                colvarCalculoBaseCapital.IsReadOnly = false;
                
                schema.Columns.Add(colvarCalculoBaseCapital);
                
                TableSchema.TableColumn colvarTipoCalculoBaseCapital = new TableSchema.TableColumn(schema);
                colvarTipoCalculoBaseCapital.ColumnName = "TipoCalculoBaseCapital";
                colvarTipoCalculoBaseCapital.DataType = DbType.Int32;
                colvarTipoCalculoBaseCapital.MaxLength = 0;
                colvarTipoCalculoBaseCapital.AutoIncrement = false;
                colvarTipoCalculoBaseCapital.IsNullable = true;
                colvarTipoCalculoBaseCapital.IsPrimaryKey = false;
                colvarTipoCalculoBaseCapital.IsForeignKey = false;
                colvarTipoCalculoBaseCapital.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoCalculoBaseCapital);
                
                TableSchema.TableColumn colvarServicioParalelo = new TableSchema.TableColumn(schema);
                colvarServicioParalelo.ColumnName = "ServicioParalelo";
                colvarServicioParalelo.DataType = DbType.Boolean;
                colvarServicioParalelo.MaxLength = 0;
                colvarServicioParalelo.AutoIncrement = false;
                colvarServicioParalelo.IsNullable = true;
                colvarServicioParalelo.IsPrimaryKey = false;
                colvarServicioParalelo.IsForeignKey = false;
                colvarServicioParalelo.IsReadOnly = false;
                
                schema.Columns.Add(colvarServicioParalelo);
                
                TableSchema.TableColumn colvarServicioFlowId = new TableSchema.TableColumn(schema);
                colvarServicioFlowId.ColumnName = "ServicioFlowId";
                colvarServicioFlowId.DataType = DbType.Int32;
                colvarServicioFlowId.MaxLength = 0;
                colvarServicioFlowId.AutoIncrement = false;
                colvarServicioFlowId.IsNullable = true;
                colvarServicioFlowId.IsPrimaryKey = false;
                colvarServicioFlowId.IsForeignKey = false;
                colvarServicioFlowId.IsReadOnly = false;
                
                schema.Columns.Add(colvarServicioFlowId);
                
                TableSchema.TableColumn colvarCuenta = new TableSchema.TableColumn(schema);
                colvarCuenta.ColumnName = "Cuenta";
                colvarCuenta.DataType = DbType.AnsiString;
                colvarCuenta.MaxLength = 25;
                colvarCuenta.AutoIncrement = false;
                colvarCuenta.IsNullable = true;
                colvarCuenta.IsPrimaryKey = false;
                colvarCuenta.IsForeignKey = false;
                colvarCuenta.IsReadOnly = false;
                
                schema.Columns.Add(colvarCuenta);
                
                TableSchema.TableColumn colvarSeCobra = new TableSchema.TableColumn(schema);
                colvarSeCobra.ColumnName = "SeCobra";
                colvarSeCobra.DataType = DbType.Boolean;
                colvarSeCobra.MaxLength = 0;
                colvarSeCobra.AutoIncrement = false;
                colvarSeCobra.IsNullable = true;
                colvarSeCobra.IsPrimaryKey = false;
                colvarSeCobra.IsForeignKey = false;
                colvarSeCobra.IsReadOnly = false;
                
                schema.Columns.Add(colvarSeCobra);
                
                TableSchema.TableColumn colvarSinDocumento = new TableSchema.TableColumn(schema);
                colvarSinDocumento.ColumnName = "SinDocumento";
                colvarSinDocumento.DataType = DbType.Boolean;
                colvarSinDocumento.MaxLength = 0;
                colvarSinDocumento.AutoIncrement = false;
                colvarSinDocumento.IsNullable = true;
                colvarSinDocumento.IsPrimaryKey = false;
                colvarSinDocumento.IsForeignKey = false;
                colvarSinDocumento.IsReadOnly = false;
                
                schema.Columns.Add(colvarSinDocumento);
                
                TableSchema.TableColumn colvarSubTransaccional = new TableSchema.TableColumn(schema);
                colvarSubTransaccional.ColumnName = "SubTransaccional";
                colvarSubTransaccional.DataType = DbType.Boolean;
                colvarSubTransaccional.MaxLength = 0;
                colvarSubTransaccional.AutoIncrement = false;
                colvarSubTransaccional.IsNullable = true;
                colvarSubTransaccional.IsPrimaryKey = false;
                colvarSubTransaccional.IsForeignKey = false;
                colvarSubTransaccional.IsReadOnly = false;
                
                schema.Columns.Add(colvarSubTransaccional);
                
                TableSchema.TableColumn colvarAfectaOtraCompania = new TableSchema.TableColumn(schema);
                colvarAfectaOtraCompania.ColumnName = "AfectaOtraCompania";
                colvarAfectaOtraCompania.DataType = DbType.Boolean;
                colvarAfectaOtraCompania.MaxLength = 0;
                colvarAfectaOtraCompania.AutoIncrement = false;
                colvarAfectaOtraCompania.IsNullable = true;
                colvarAfectaOtraCompania.IsPrimaryKey = false;
                colvarAfectaOtraCompania.IsForeignKey = false;
                colvarAfectaOtraCompania.IsReadOnly = false;
                
                schema.Columns.Add(colvarAfectaOtraCompania);
                
                TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
                colvarFechaModificacion.ColumnName = "FechaModificacion";
                colvarFechaModificacion.DataType = DbType.DateTime;
                colvarFechaModificacion.MaxLength = 0;
                colvarFechaModificacion.AutoIncrement = false;
                colvarFechaModificacion.IsNullable = false;
                colvarFechaModificacion.IsPrimaryKey = false;
                colvarFechaModificacion.IsForeignKey = false;
                colvarFechaModificacion.IsReadOnly = false;
                
                schema.Columns.Add(colvarFechaModificacion);
                
                TableSchema.TableColumn colvarRowguid = new TableSchema.TableColumn(schema);
                colvarRowguid.ColumnName = "rowguid";
                colvarRowguid.DataType = DbType.Guid;
                colvarRowguid.MaxLength = 0;
                colvarRowguid.AutoIncrement = false;
                colvarRowguid.IsNullable = false;
                colvarRowguid.IsPrimaryKey = false;
                colvarRowguid.IsForeignKey = false;
                colvarRowguid.IsReadOnly = false;
                
                schema.Columns.Add(colvarRowguid);
                
                TableSchema.TableColumn colvarValidarRenovacion = new TableSchema.TableColumn(schema);
                colvarValidarRenovacion.ColumnName = "ValidarRenovacion";
                colvarValidarRenovacion.DataType = DbType.Boolean;
                colvarValidarRenovacion.MaxLength = 0;
                colvarValidarRenovacion.AutoIncrement = false;
                colvarValidarRenovacion.IsNullable = true;
                colvarValidarRenovacion.IsPrimaryKey = false;
                colvarValidarRenovacion.IsForeignKey = false;
                colvarValidarRenovacion.IsReadOnly = false;
                
                schema.Columns.Add(colvarValidarRenovacion);
                
                TableSchema.TableColumn colvarTipoIdentificador = new TableSchema.TableColumn(schema);
                colvarTipoIdentificador.ColumnName = "TipoIdentificador";
                colvarTipoIdentificador.DataType = DbType.Int32;
                colvarTipoIdentificador.MaxLength = 0;
                colvarTipoIdentificador.AutoIncrement = false;
                colvarTipoIdentificador.IsNullable = true;
                colvarTipoIdentificador.IsPrimaryKey = false;
                colvarTipoIdentificador.IsForeignKey = false;
                colvarTipoIdentificador.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoIdentificador);
                
                TableSchema.TableColumn colvarTipoTransaccion = new TableSchema.TableColumn(schema);
                colvarTipoTransaccion.ColumnName = "TipoTransaccion";
                colvarTipoTransaccion.DataType = DbType.AnsiString;
                colvarTipoTransaccion.MaxLength = 50;
                colvarTipoTransaccion.AutoIncrement = false;
                colvarTipoTransaccion.IsNullable = false;
                colvarTipoTransaccion.IsPrimaryKey = false;
                colvarTipoTransaccion.IsForeignKey = false;
                colvarTipoTransaccion.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoTransaccion);
                
                TableSchema.TableColumn colvarSufijoTipoTransaccion = new TableSchema.TableColumn(schema);
                colvarSufijoTipoTransaccion.ColumnName = "SufijoTipoTransaccion";
                colvarSufijoTipoTransaccion.DataType = DbType.AnsiString;
                colvarSufijoTipoTransaccion.MaxLength = 2;
                colvarSufijoTipoTransaccion.AutoIncrement = false;
                colvarSufijoTipoTransaccion.IsNullable = false;
                colvarSufijoTipoTransaccion.IsPrimaryKey = false;
                colvarSufijoTipoTransaccion.IsForeignKey = false;
                colvarSufijoTipoTransaccion.IsReadOnly = false;
                
                schema.Columns.Add(colvarSufijoTipoTransaccion);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_TiposServicios",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewTiposServicios()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewTiposServicios(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewTiposServicios(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewTiposServicios(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("TipoServicioId")]
        [Bindable(true)]
        public int TipoServicioId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoServicioId");
		    }
            set 
		    {
			    SetColumnValue("TipoServicioId", value);
            }
        }
	      
        [XmlAttribute("Descripcion")]
        [Bindable(true)]
        public string Descripcion 
	    {
		    get
		    {
			    return GetColumnValue<string>("Descripcion");
		    }
            set 
		    {
			    SetColumnValue("Descripcion", value);
            }
        }
	      
        [XmlAttribute("TipoTransaccionId")]
        [Bindable(true)]
        public int? TipoTransaccionId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TipoTransaccionId");
		    }
            set 
		    {
			    SetColumnValue("TipoTransaccionId", value);
            }
        }
	      
        [XmlAttribute("CostoServicio")]
        [Bindable(true)]
        public decimal CostoServicio 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("CostoServicio");
		    }
            set 
		    {
			    SetColumnValue("CostoServicio", value);
            }
        }
	      
        [XmlAttribute("CalculoBaseCapital")]
        [Bindable(true)]
        public bool? CalculoBaseCapital 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("CalculoBaseCapital");
		    }
            set 
		    {
			    SetColumnValue("CalculoBaseCapital", value);
            }
        }
	      
        [XmlAttribute("TipoCalculoBaseCapital")]
        [Bindable(true)]
        public int? TipoCalculoBaseCapital 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TipoCalculoBaseCapital");
		    }
            set 
		    {
			    SetColumnValue("TipoCalculoBaseCapital", value);
            }
        }
	      
        [XmlAttribute("ServicioParalelo")]
        [Bindable(true)]
        public bool? ServicioParalelo 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("ServicioParalelo");
		    }
            set 
		    {
			    SetColumnValue("ServicioParalelo", value);
            }
        }
	      
        [XmlAttribute("ServicioFlowId")]
        [Bindable(true)]
        public int? ServicioFlowId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ServicioFlowId");
		    }
            set 
		    {
			    SetColumnValue("ServicioFlowId", value);
            }
        }
	      
        [XmlAttribute("Cuenta")]
        [Bindable(true)]
        public string Cuenta 
	    {
		    get
		    {
			    return GetColumnValue<string>("Cuenta");
		    }
            set 
		    {
			    SetColumnValue("Cuenta", value);
            }
        }
	      
        [XmlAttribute("SeCobra")]
        [Bindable(true)]
        public bool? SeCobra 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("SeCobra");
		    }
            set 
		    {
			    SetColumnValue("SeCobra", value);
            }
        }
	      
        [XmlAttribute("SinDocumento")]
        [Bindable(true)]
        public bool? SinDocumento 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("SinDocumento");
		    }
            set 
		    {
			    SetColumnValue("SinDocumento", value);
            }
        }
	      
        [XmlAttribute("SubTransaccional")]
        [Bindable(true)]
        public bool? SubTransaccional 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("SubTransaccional");
		    }
            set 
		    {
			    SetColumnValue("SubTransaccional", value);
            }
        }
	      
        [XmlAttribute("AfectaOtraCompania")]
        [Bindable(true)]
        public bool? AfectaOtraCompania 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("AfectaOtraCompania");
		    }
            set 
		    {
			    SetColumnValue("AfectaOtraCompania", value);
            }
        }
	      
        [XmlAttribute("FechaModificacion")]
        [Bindable(true)]
        public DateTime FechaModificacion 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("FechaModificacion");
		    }
            set 
		    {
			    SetColumnValue("FechaModificacion", value);
            }
        }
	      
        [XmlAttribute("Rowguid")]
        [Bindable(true)]
        public Guid Rowguid 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("rowguid");
		    }
            set 
		    {
			    SetColumnValue("rowguid", value);
            }
        }
	      
        [XmlAttribute("ValidarRenovacion")]
        [Bindable(true)]
        public bool? ValidarRenovacion 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("ValidarRenovacion");
		    }
            set 
		    {
			    SetColumnValue("ValidarRenovacion", value);
            }
        }
	      
        [XmlAttribute("TipoIdentificador")]
        [Bindable(true)]
        public int? TipoIdentificador 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TipoIdentificador");
		    }
            set 
		    {
			    SetColumnValue("TipoIdentificador", value);
            }
        }
	      
        [XmlAttribute("TipoTransaccion")]
        [Bindable(true)]
        public string TipoTransaccion 
	    {
		    get
		    {
			    return GetColumnValue<string>("TipoTransaccion");
		    }
            set 
		    {
			    SetColumnValue("TipoTransaccion", value);
            }
        }
	      
        [XmlAttribute("SufijoTipoTransaccion")]
        [Bindable(true)]
        public string SufijoTipoTransaccion 
	    {
		    get
		    {
			    return GetColumnValue<string>("SufijoTipoTransaccion");
		    }
            set 
		    {
			    SetColumnValue("SufijoTipoTransaccion", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string TipoServicioId = @"TipoServicioId";
            
            public static string Descripcion = @"Descripcion";
            
            public static string TipoTransaccionId = @"TipoTransaccionId";
            
            public static string CostoServicio = @"CostoServicio";
            
            public static string CalculoBaseCapital = @"CalculoBaseCapital";
            
            public static string TipoCalculoBaseCapital = @"TipoCalculoBaseCapital";
            
            public static string ServicioParalelo = @"ServicioParalelo";
            
            public static string ServicioFlowId = @"ServicioFlowId";
            
            public static string Cuenta = @"Cuenta";
            
            public static string SeCobra = @"SeCobra";
            
            public static string SinDocumento = @"SinDocumento";
            
            public static string SubTransaccional = @"SubTransaccional";
            
            public static string AfectaOtraCompania = @"AfectaOtraCompania";
            
            public static string FechaModificacion = @"FechaModificacion";
            
            public static string Rowguid = @"rowguid";
            
            public static string ValidarRenovacion = @"ValidarRenovacion";
            
            public static string TipoIdentificador = @"TipoIdentificador";
            
            public static string TipoTransaccion = @"TipoTransaccion";
            
            public static string SufijoTipoTransaccion = @"SufijoTipoTransaccion";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
