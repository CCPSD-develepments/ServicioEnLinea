using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewUsuarios class.
    /// </summary>
    [Serializable]
    public partial class ViewUsuariosCollection : ReadOnlyList<ViewUsuarios, ViewUsuariosCollection>
    {        
        public ViewUsuariosCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_Usuarios view.
    /// </summary>
    [Serializable]
    public partial class ViewUsuarios : ReadOnlyRecord<ViewUsuarios>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_Usuarios", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarUsuarioId = new TableSchema.TableColumn(schema);
                colvarUsuarioId.ColumnName = "UsuarioId";
                colvarUsuarioId.DataType = DbType.Int32;
                colvarUsuarioId.MaxLength = 0;
                colvarUsuarioId.AutoIncrement = false;
                colvarUsuarioId.IsNullable = false;
                colvarUsuarioId.IsPrimaryKey = false;
                colvarUsuarioId.IsForeignKey = false;
                colvarUsuarioId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUsuarioId);
                
                TableSchema.TableColumn colvarNombreUsuario = new TableSchema.TableColumn(schema);
                colvarNombreUsuario.ColumnName = "NombreUsuario";
                colvarNombreUsuario.DataType = DbType.String;
                colvarNombreUsuario.MaxLength = 30;
                colvarNombreUsuario.AutoIncrement = false;
                colvarNombreUsuario.IsNullable = false;
                colvarNombreUsuario.IsPrimaryKey = false;
                colvarNombreUsuario.IsForeignKey = false;
                colvarNombreUsuario.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreUsuario);
                
                TableSchema.TableColumn colvarNombreCompleto = new TableSchema.TableColumn(schema);
                colvarNombreCompleto.ColumnName = "NombreCompleto";
                colvarNombreCompleto.DataType = DbType.String;
                colvarNombreCompleto.MaxLength = 100;
                colvarNombreCompleto.AutoIncrement = false;
                colvarNombreCompleto.IsNullable = true;
                colvarNombreCompleto.IsPrimaryKey = false;
                colvarNombreCompleto.IsForeignKey = false;
                colvarNombreCompleto.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreCompleto);
                
                TableSchema.TableColumn colvarDominio = new TableSchema.TableColumn(schema);
                colvarDominio.ColumnName = "Dominio";
                colvarDominio.DataType = DbType.String;
                colvarDominio.MaxLength = 100;
                colvarDominio.AutoIncrement = false;
                colvarDominio.IsNullable = true;
                colvarDominio.IsPrimaryKey = false;
                colvarDominio.IsForeignKey = false;
                colvarDominio.IsReadOnly = false;
                
                schema.Columns.Add(colvarDominio);
                
                TableSchema.TableColumn colvarAdministrador = new TableSchema.TableColumn(schema);
                colvarAdministrador.ColumnName = "Administrador";
                colvarAdministrador.DataType = DbType.Boolean;
                colvarAdministrador.MaxLength = 0;
                colvarAdministrador.AutoIncrement = false;
                colvarAdministrador.IsNullable = false;
                colvarAdministrador.IsPrimaryKey = false;
                colvarAdministrador.IsForeignKey = false;
                colvarAdministrador.IsReadOnly = false;
                
                schema.Columns.Add(colvarAdministrador);
                
                TableSchema.TableColumn colvarEmail = new TableSchema.TableColumn(schema);
                colvarEmail.ColumnName = "Email";
                colvarEmail.DataType = DbType.String;
                colvarEmail.MaxLength = 100;
                colvarEmail.AutoIncrement = false;
                colvarEmail.IsNullable = true;
                colvarEmail.IsPrimaryKey = false;
                colvarEmail.IsForeignKey = false;
                colvarEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmail);
                
                TableSchema.TableColumn colvarUsuarioActivo = new TableSchema.TableColumn(schema);
                colvarUsuarioActivo.ColumnName = "UsuarioActivo";
                colvarUsuarioActivo.DataType = DbType.Boolean;
                colvarUsuarioActivo.MaxLength = 0;
                colvarUsuarioActivo.AutoIncrement = false;
                colvarUsuarioActivo.IsNullable = false;
                colvarUsuarioActivo.IsPrimaryKey = false;
                colvarUsuarioActivo.IsForeignKey = false;
                colvarUsuarioActivo.IsReadOnly = false;
                
                schema.Columns.Add(colvarUsuarioActivo);
                
                TableSchema.TableColumn colvarAutentificacionId = new TableSchema.TableColumn(schema);
                colvarAutentificacionId.ColumnName = "AutentificacionId";
                colvarAutentificacionId.DataType = DbType.Binary;
                colvarAutentificacionId.MaxLength = 20;
                colvarAutentificacionId.AutoIncrement = false;
                colvarAutentificacionId.IsNullable = true;
                colvarAutentificacionId.IsPrimaryKey = false;
                colvarAutentificacionId.IsForeignKey = false;
                colvarAutentificacionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarAutentificacionId);
                
                TableSchema.TableColumn colvarContadorAsignaciones = new TableSchema.TableColumn(schema);
                colvarContadorAsignaciones.ColumnName = "ContadorAsignaciones";
                colvarContadorAsignaciones.DataType = DbType.Int32;
                colvarContadorAsignaciones.MaxLength = 0;
                colvarContadorAsignaciones.AutoIncrement = false;
                colvarContadorAsignaciones.IsNullable = false;
                colvarContadorAsignaciones.IsPrimaryKey = false;
                colvarContadorAsignaciones.IsForeignKey = false;
                colvarContadorAsignaciones.IsReadOnly = false;
                
                schema.Columns.Add(colvarContadorAsignaciones);
                
                TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
                colvarFechaModificacion.ColumnName = "FechaModificacion";
                colvarFechaModificacion.DataType = DbType.DateTime;
                colvarFechaModificacion.MaxLength = 0;
                colvarFechaModificacion.AutoIncrement = false;
                colvarFechaModificacion.IsNullable = false;
                colvarFechaModificacion.IsPrimaryKey = false;
                colvarFechaModificacion.IsForeignKey = false;
                colvarFechaModificacion.IsReadOnly = false;
                
                schema.Columns.Add(colvarFechaModificacion);
                
                TableSchema.TableColumn colvarIniciales = new TableSchema.TableColumn(schema);
                colvarIniciales.ColumnName = "Iniciales";
                colvarIniciales.DataType = DbType.AnsiString;
                colvarIniciales.MaxLength = 5;
                colvarIniciales.AutoIncrement = false;
                colvarIniciales.IsNullable = false;
                colvarIniciales.IsPrimaryKey = false;
                colvarIniciales.IsForeignKey = false;
                colvarIniciales.IsReadOnly = false;
                
                schema.Columns.Add(colvarIniciales);
                
                TableSchema.TableColumn colvarNombreUsuarioReferencia = new TableSchema.TableColumn(schema);
                colvarNombreUsuarioReferencia.ColumnName = "NombreUsuarioReferencia";
                colvarNombreUsuarioReferencia.DataType = DbType.String;
                colvarNombreUsuarioReferencia.MaxLength = 30;
                colvarNombreUsuarioReferencia.AutoIncrement = false;
                colvarNombreUsuarioReferencia.IsNullable = false;
                colvarNombreUsuarioReferencia.IsPrimaryKey = false;
                colvarNombreUsuarioReferencia.IsForeignKey = false;
                colvarNombreUsuarioReferencia.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreUsuarioReferencia);
                
                TableSchema.TableColumn colvarReceptor = new TableSchema.TableColumn(schema);
                colvarReceptor.ColumnName = "Receptor";
                colvarReceptor.DataType = DbType.Boolean;
                colvarReceptor.MaxLength = 0;
                colvarReceptor.AutoIncrement = false;
                colvarReceptor.IsNullable = true;
                colvarReceptor.IsPrimaryKey = false;
                colvarReceptor.IsForeignKey = false;
                colvarReceptor.IsReadOnly = false;
                
                schema.Columns.Add(colvarReceptor);
                
                TableSchema.TableColumn colvarContadorRecibo = new TableSchema.TableColumn(schema);
                colvarContadorRecibo.ColumnName = "ContadorRecibo";
                colvarContadorRecibo.DataType = DbType.Int32;
                colvarContadorRecibo.MaxLength = 0;
                colvarContadorRecibo.AutoIncrement = false;
                colvarContadorRecibo.IsNullable = true;
                colvarContadorRecibo.IsPrimaryKey = false;
                colvarContadorRecibo.IsForeignKey = false;
                colvarContadorRecibo.IsReadOnly = false;
                
                schema.Columns.Add(colvarContadorRecibo);
                
                TableSchema.TableColumn colvarRowguid = new TableSchema.TableColumn(schema);
                colvarRowguid.ColumnName = "rowguid";
                colvarRowguid.DataType = DbType.Guid;
                colvarRowguid.MaxLength = 0;
                colvarRowguid.AutoIncrement = false;
                colvarRowguid.IsNullable = false;
                colvarRowguid.IsPrimaryKey = false;
                colvarRowguid.IsForeignKey = false;
                colvarRowguid.IsReadOnly = false;
                
                schema.Columns.Add(colvarRowguid);
                
                TableSchema.TableColumn colvarRolId = new TableSchema.TableColumn(schema);
                colvarRolId.ColumnName = "RolId";
                colvarRolId.DataType = DbType.Int32;
                colvarRolId.MaxLength = 0;
                colvarRolId.AutoIncrement = false;
                colvarRolId.IsNullable = false;
                colvarRolId.IsPrimaryKey = false;
                colvarRolId.IsForeignKey = false;
                colvarRolId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRolId);
                
                TableSchema.TableColumn colvarDescripcion = new TableSchema.TableColumn(schema);
                colvarDescripcion.ColumnName = "Descripcion";
                colvarDescripcion.DataType = DbType.String;
                colvarDescripcion.MaxLength = 30;
                colvarDescripcion.AutoIncrement = false;
                colvarDescripcion.IsNullable = false;
                colvarDescripcion.IsPrimaryKey = false;
                colvarDescripcion.IsForeignKey = false;
                colvarDescripcion.IsReadOnly = false;
                
                schema.Columns.Add(colvarDescripcion);
                
                TableSchema.TableColumn colvarUsuariosRolesId = new TableSchema.TableColumn(schema);
                colvarUsuariosRolesId.ColumnName = "UsuariosRolesId";
                colvarUsuariosRolesId.DataType = DbType.Int32;
                colvarUsuariosRolesId.MaxLength = 0;
                colvarUsuariosRolesId.AutoIncrement = false;
                colvarUsuariosRolesId.IsNullable = false;
                colvarUsuariosRolesId.IsPrimaryKey = false;
                colvarUsuariosRolesId.IsForeignKey = false;
                colvarUsuariosRolesId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUsuariosRolesId);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_Usuarios",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewUsuarios()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewUsuarios(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewUsuarios(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewUsuarios(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("UsuarioId")]
        [Bindable(true)]
        public int UsuarioId 
	    {
		    get
		    {
			    return GetColumnValue<int>("UsuarioId");
		    }
            set 
		    {
			    SetColumnValue("UsuarioId", value);
            }
        }
	      
        [XmlAttribute("NombreUsuario")]
        [Bindable(true)]
        public string NombreUsuario 
	    {
		    get
		    {
			    return GetColumnValue<string>("NombreUsuario");
		    }
            set 
		    {
			    SetColumnValue("NombreUsuario", value);
            }
        }
	      
        [XmlAttribute("NombreCompleto")]
        [Bindable(true)]
        public string NombreCompleto 
	    {
		    get
		    {
			    return GetColumnValue<string>("NombreCompleto");
		    }
            set 
		    {
			    SetColumnValue("NombreCompleto", value);
            }
        }
	      
        [XmlAttribute("Dominio")]
        [Bindable(true)]
        public string Dominio 
	    {
		    get
		    {
			    return GetColumnValue<string>("Dominio");
		    }
            set 
		    {
			    SetColumnValue("Dominio", value);
            }
        }
	      
        [XmlAttribute("Administrador")]
        [Bindable(true)]
        public bool Administrador 
	    {
		    get
		    {
			    return GetColumnValue<bool>("Administrador");
		    }
            set 
		    {
			    SetColumnValue("Administrador", value);
            }
        }
	      
        [XmlAttribute("Email")]
        [Bindable(true)]
        public string Email 
	    {
		    get
		    {
			    return GetColumnValue<string>("Email");
		    }
            set 
		    {
			    SetColumnValue("Email", value);
            }
        }
	      
        [XmlAttribute("UsuarioActivo")]
        [Bindable(true)]
        public bool UsuarioActivo 
	    {
		    get
		    {
			    return GetColumnValue<bool>("UsuarioActivo");
		    }
            set 
		    {
			    SetColumnValue("UsuarioActivo", value);
            }
        }
	      
        [XmlAttribute("AutentificacionId")]
        [Bindable(true)]
        public byte[] AutentificacionId 
	    {
		    get
		    {
			    return GetColumnValue<byte[]>("AutentificacionId");
		    }
            set 
		    {
			    SetColumnValue("AutentificacionId", value);
            }
        }
	      
        [XmlAttribute("ContadorAsignaciones")]
        [Bindable(true)]
        public int ContadorAsignaciones 
	    {
		    get
		    {
			    return GetColumnValue<int>("ContadorAsignaciones");
		    }
            set 
		    {
			    SetColumnValue("ContadorAsignaciones", value);
            }
        }
	      
        [XmlAttribute("FechaModificacion")]
        [Bindable(true)]
        public DateTime FechaModificacion 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("FechaModificacion");
		    }
            set 
		    {
			    SetColumnValue("FechaModificacion", value);
            }
        }
	      
        [XmlAttribute("Iniciales")]
        [Bindable(true)]
        public string Iniciales 
	    {
		    get
		    {
			    return GetColumnValue<string>("Iniciales");
		    }
            set 
		    {
			    SetColumnValue("Iniciales", value);
            }
        }
	      
        [XmlAttribute("NombreUsuarioReferencia")]
        [Bindable(true)]
        public string NombreUsuarioReferencia 
	    {
		    get
		    {
			    return GetColumnValue<string>("NombreUsuarioReferencia");
		    }
            set 
		    {
			    SetColumnValue("NombreUsuarioReferencia", value);
            }
        }
	      
        [XmlAttribute("Receptor")]
        [Bindable(true)]
        public bool? Receptor 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("Receptor");
		    }
            set 
		    {
			    SetColumnValue("Receptor", value);
            }
        }
	      
        [XmlAttribute("ContadorRecibo")]
        [Bindable(true)]
        public int? ContadorRecibo 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ContadorRecibo");
		    }
            set 
		    {
			    SetColumnValue("ContadorRecibo", value);
            }
        }
	      
        [XmlAttribute("Rowguid")]
        [Bindable(true)]
        public Guid Rowguid 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("rowguid");
		    }
            set 
		    {
			    SetColumnValue("rowguid", value);
            }
        }
	      
        [XmlAttribute("RolId")]
        [Bindable(true)]
        public int RolId 
	    {
		    get
		    {
			    return GetColumnValue<int>("RolId");
		    }
            set 
		    {
			    SetColumnValue("RolId", value);
            }
        }
	      
        [XmlAttribute("Descripcion")]
        [Bindable(true)]
        public string Descripcion 
	    {
		    get
		    {
			    return GetColumnValue<string>("Descripcion");
		    }
            set 
		    {
			    SetColumnValue("Descripcion", value);
            }
        }
	      
        [XmlAttribute("UsuariosRolesId")]
        [Bindable(true)]
        public int UsuariosRolesId 
	    {
		    get
		    {
			    return GetColumnValue<int>("UsuariosRolesId");
		    }
            set 
		    {
			    SetColumnValue("UsuariosRolesId", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string UsuarioId = @"UsuarioId";
            
            public static string NombreUsuario = @"NombreUsuario";
            
            public static string NombreCompleto = @"NombreCompleto";
            
            public static string Dominio = @"Dominio";
            
            public static string Administrador = @"Administrador";
            
            public static string Email = @"Email";
            
            public static string UsuarioActivo = @"UsuarioActivo";
            
            public static string AutentificacionId = @"AutentificacionId";
            
            public static string ContadorAsignaciones = @"ContadorAsignaciones";
            
            public static string FechaModificacion = @"FechaModificacion";
            
            public static string Iniciales = @"Iniciales";
            
            public static string NombreUsuarioReferencia = @"NombreUsuarioReferencia";
            
            public static string Receptor = @"Receptor";
            
            public static string ContadorRecibo = @"ContadorRecibo";
            
            public static string Rowguid = @"rowguid";
            
            public static string RolId = @"RolId";
            
            public static string Descripcion = @"Descripcion";
            
            public static string UsuariosRolesId = @"UsuariosRolesId";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
