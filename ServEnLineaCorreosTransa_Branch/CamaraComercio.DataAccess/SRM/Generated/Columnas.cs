using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the Columnas class.
    /// </summary>
    [Serializable]
    public partial class ColumnasCollection : ReadOnlyList<Columnas, ColumnasCollection>
    {        
        public ColumnasCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the COLUMNAS view.
    /// </summary>
    [Serializable]
    public partial class Columnas : ReadOnlyRecord<Columnas>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("COLUMNAS", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"SRM_INFORMATION_SCHEMA";
                //columns
                
                TableSchema.TableColumn colvarColumnaId = new TableSchema.TableColumn(schema);
                colvarColumnaId.ColumnName = "COLUMNA_ID";
                colvarColumnaId.DataType = DbType.Int32;
                colvarColumnaId.MaxLength = 0;
                colvarColumnaId.AutoIncrement = false;
                colvarColumnaId.IsNullable = false;
                colvarColumnaId.IsPrimaryKey = false;
                colvarColumnaId.IsForeignKey = false;
                colvarColumnaId.IsReadOnly = false;
                
                schema.Columns.Add(colvarColumnaId);
                
                TableSchema.TableColumn colvarNombreTabla = new TableSchema.TableColumn(schema);
                colvarNombreTabla.ColumnName = "NOMBRE_TABLA";
                colvarNombreTabla.DataType = DbType.String;
                colvarNombreTabla.MaxLength = -1;
                colvarNombreTabla.AutoIncrement = false;
                colvarNombreTabla.IsNullable = false;
                colvarNombreTabla.IsPrimaryKey = false;
                colvarNombreTabla.IsForeignKey = false;
                colvarNombreTabla.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreTabla);
                
                TableSchema.TableColumn colvarNombreEsquema = new TableSchema.TableColumn(schema);
                colvarNombreEsquema.ColumnName = "NOMBRE_ESQUEMA";
                colvarNombreEsquema.DataType = DbType.String;
                colvarNombreEsquema.MaxLength = -1;
                colvarNombreEsquema.AutoIncrement = false;
                colvarNombreEsquema.IsNullable = false;
                colvarNombreEsquema.IsPrimaryKey = false;
                colvarNombreEsquema.IsForeignKey = false;
                colvarNombreEsquema.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreEsquema);
                
                TableSchema.TableColumn colvarNombreTablaCorto = new TableSchema.TableColumn(schema);
                colvarNombreTablaCorto.ColumnName = "NOMBRE_TABLA_CORTO";
                colvarNombreTablaCorto.DataType = DbType.String;
                colvarNombreTablaCorto.MaxLength = 50;
                colvarNombreTablaCorto.AutoIncrement = false;
                colvarNombreTablaCorto.IsNullable = false;
                colvarNombreTablaCorto.IsPrimaryKey = false;
                colvarNombreTablaCorto.IsForeignKey = false;
                colvarNombreTablaCorto.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreTablaCorto);
                
                TableSchema.TableColumn colvarNombreColumna = new TableSchema.TableColumn(schema);
                colvarNombreColumna.ColumnName = "NOMBRE_COLUMNA";
                colvarNombreColumna.DataType = DbType.String;
                colvarNombreColumna.MaxLength = -1;
                colvarNombreColumna.AutoIncrement = false;
                colvarNombreColumna.IsNullable = false;
                colvarNombreColumna.IsPrimaryKey = false;
                colvarNombreColumna.IsForeignKey = false;
                colvarNombreColumna.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreColumna);
                
                TableSchema.TableColumn colvarAceptaNulo = new TableSchema.TableColumn(schema);
                colvarAceptaNulo.ColumnName = "ACEPTA_NULO";
                colvarAceptaNulo.DataType = DbType.Boolean;
                colvarAceptaNulo.MaxLength = 0;
                colvarAceptaNulo.AutoIncrement = false;
                colvarAceptaNulo.IsNullable = false;
                colvarAceptaNulo.IsPrimaryKey = false;
                colvarAceptaNulo.IsForeignKey = false;
                colvarAceptaNulo.IsReadOnly = false;
                
                schema.Columns.Add(colvarAceptaNulo);
                
                TableSchema.TableColumn colvarTipoDatos = new TableSchema.TableColumn(schema);
                colvarTipoDatos.ColumnName = "TIPO_DATOS";
                colvarTipoDatos.DataType = DbType.String;
                colvarTipoDatos.MaxLength = 128;
                colvarTipoDatos.AutoIncrement = false;
                colvarTipoDatos.IsNullable = false;
                colvarTipoDatos.IsPrimaryKey = false;
                colvarTipoDatos.IsForeignKey = false;
                colvarTipoDatos.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoDatos);
                
                TableSchema.TableColumn colvarLongitud = new TableSchema.TableColumn(schema);
                colvarLongitud.ColumnName = "LONGITUD";
                colvarLongitud.DataType = DbType.Int32;
                colvarLongitud.MaxLength = 0;
                colvarLongitud.AutoIncrement = false;
                colvarLongitud.IsNullable = true;
                colvarLongitud.IsPrimaryKey = false;
                colvarLongitud.IsForeignKey = false;
                colvarLongitud.IsReadOnly = false;
                
                schema.Columns.Add(colvarLongitud);
                
                TableSchema.TableColumn colvarVisible = new TableSchema.TableColumn(schema);
                colvarVisible.ColumnName = "VISIBLE";
                colvarVisible.DataType = DbType.Boolean;
                colvarVisible.MaxLength = 0;
                colvarVisible.AutoIncrement = false;
                colvarVisible.IsNullable = false;
                colvarVisible.IsPrimaryKey = false;
                colvarVisible.IsForeignKey = false;
                colvarVisible.IsReadOnly = false;
                
                schema.Columns.Add(colvarVisible);
                
                TableSchema.TableColumn colvarTablaEnlace = new TableSchema.TableColumn(schema);
                colvarTablaEnlace.ColumnName = "TABLA_ENLACE";
                colvarTablaEnlace.DataType = DbType.String;
                colvarTablaEnlace.MaxLength = -1;
                colvarTablaEnlace.AutoIncrement = false;
                colvarTablaEnlace.IsNullable = true;
                colvarTablaEnlace.IsPrimaryKey = false;
                colvarTablaEnlace.IsForeignKey = false;
                colvarTablaEnlace.IsReadOnly = false;
                
                schema.Columns.Add(colvarTablaEnlace);
                
                TableSchema.TableColumn colvarColumnaEnlace = new TableSchema.TableColumn(schema);
                colvarColumnaEnlace.ColumnName = "COLUMNA_ENLACE";
                colvarColumnaEnlace.DataType = DbType.String;
                colvarColumnaEnlace.MaxLength = -1;
                colvarColumnaEnlace.AutoIncrement = false;
                colvarColumnaEnlace.IsNullable = true;
                colvarColumnaEnlace.IsPrimaryKey = false;
                colvarColumnaEnlace.IsForeignKey = false;
                colvarColumnaEnlace.IsReadOnly = false;
                
                schema.Columns.Add(colvarColumnaEnlace);
                
                TableSchema.TableColumn colvarTipoEnlace = new TableSchema.TableColumn(schema);
                colvarTipoEnlace.ColumnName = "TIPO_ENLACE";
                colvarTipoEnlace.DataType = DbType.Int32;
                colvarTipoEnlace.MaxLength = 0;
                colvarTipoEnlace.AutoIncrement = false;
                colvarTipoEnlace.IsNullable = true;
                colvarTipoEnlace.IsPrimaryKey = false;
                colvarTipoEnlace.IsForeignKey = false;
                colvarTipoEnlace.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoEnlace);
                
                TableSchema.TableColumn colvarConsulta = new TableSchema.TableColumn(schema);
                colvarConsulta.ColumnName = "CONSULTA";
                colvarConsulta.DataType = DbType.String;
                colvarConsulta.MaxLength = -1;
                colvarConsulta.AutoIncrement = false;
                colvarConsulta.IsNullable = true;
                colvarConsulta.IsPrimaryKey = false;
                colvarConsulta.IsForeignKey = false;
                colvarConsulta.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsulta);
                
                TableSchema.TableColumn colvarDescripcion = new TableSchema.TableColumn(schema);
                colvarDescripcion.ColumnName = "DESCRIPCION";
                colvarDescripcion.DataType = DbType.String;
                colvarDescripcion.MaxLength = -1;
                colvarDescripcion.AutoIncrement = false;
                colvarDescripcion.IsNullable = true;
                colvarDescripcion.IsPrimaryKey = false;
                colvarDescripcion.IsForeignKey = false;
                colvarDescripcion.IsReadOnly = false;
                
                schema.Columns.Add(colvarDescripcion);
                
                TableSchema.TableColumn colvarTablaDefault = new TableSchema.TableColumn(schema);
                colvarTablaDefault.ColumnName = "TABLA_DEFAULT";
                colvarTablaDefault.DataType = DbType.Boolean;
                colvarTablaDefault.MaxLength = 0;
                colvarTablaDefault.AutoIncrement = false;
                colvarTablaDefault.IsNullable = false;
                colvarTablaDefault.IsPrimaryKey = false;
                colvarTablaDefault.IsForeignKey = false;
                colvarTablaDefault.IsReadOnly = false;
                
                schema.Columns.Add(colvarTablaDefault);
                
                TableSchema.TableColumn colvarFromTabla = new TableSchema.TableColumn(schema);
                colvarFromTabla.ColumnName = "FROM_TABLA";
                colvarFromTabla.DataType = DbType.String;
                colvarFromTabla.MaxLength = -1;
                colvarFromTabla.AutoIncrement = false;
                colvarFromTabla.IsNullable = false;
                colvarFromTabla.IsPrimaryKey = false;
                colvarFromTabla.IsForeignKey = false;
                colvarFromTabla.IsReadOnly = false;
                
                schema.Columns.Add(colvarFromTabla);
                
                TableSchema.TableColumn colvarDisplayNombre = new TableSchema.TableColumn(schema);
                colvarDisplayNombre.ColumnName = "DISPLAY_NOMBRE";
                colvarDisplayNombre.DataType = DbType.String;
                colvarDisplayNombre.MaxLength = -1;
                colvarDisplayNombre.AutoIncrement = false;
                colvarDisplayNombre.IsNullable = false;
                colvarDisplayNombre.IsPrimaryKey = false;
                colvarDisplayNombre.IsForeignKey = false;
                colvarDisplayNombre.IsReadOnly = false;
                
                schema.Columns.Add(colvarDisplayNombre);
                
                TableSchema.TableColumn colvarSelectColumna = new TableSchema.TableColumn(schema);
                colvarSelectColumna.ColumnName = "SELECT_COLUMNA";
                colvarSelectColumna.DataType = DbType.String;
                colvarSelectColumna.MaxLength = -1;
                colvarSelectColumna.AutoIncrement = false;
                colvarSelectColumna.IsNullable = false;
                colvarSelectColumna.IsPrimaryKey = false;
                colvarSelectColumna.IsForeignKey = false;
                colvarSelectColumna.IsReadOnly = false;
                
                schema.Columns.Add(colvarSelectColumna);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("COLUMNAS",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public Columnas()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public Columnas(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public Columnas(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public Columnas(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ColumnaId")]
        [Bindable(true)]
        public int ColumnaId 
	    {
		    get
		    {
			    return GetColumnValue<int>("COLUMNA_ID");
		    }
            set 
		    {
			    SetColumnValue("COLUMNA_ID", value);
            }
        }
	      
        [XmlAttribute("NombreTabla")]
        [Bindable(true)]
        public string NombreTabla 
	    {
		    get
		    {
			    return GetColumnValue<string>("NOMBRE_TABLA");
		    }
            set 
		    {
			    SetColumnValue("NOMBRE_TABLA", value);
            }
        }
	      
        [XmlAttribute("NombreEsquema")]
        [Bindable(true)]
        public string NombreEsquema 
	    {
		    get
		    {
			    return GetColumnValue<string>("NOMBRE_ESQUEMA");
		    }
            set 
		    {
			    SetColumnValue("NOMBRE_ESQUEMA", value);
            }
        }
	      
        [XmlAttribute("NombreTablaCorto")]
        [Bindable(true)]
        public string NombreTablaCorto 
	    {
		    get
		    {
			    return GetColumnValue<string>("NOMBRE_TABLA_CORTO");
		    }
            set 
		    {
			    SetColumnValue("NOMBRE_TABLA_CORTO", value);
            }
        }
	      
        [XmlAttribute("NombreColumna")]
        [Bindable(true)]
        public string NombreColumna 
	    {
		    get
		    {
			    return GetColumnValue<string>("NOMBRE_COLUMNA");
		    }
            set 
		    {
			    SetColumnValue("NOMBRE_COLUMNA", value);
            }
        }
	      
        [XmlAttribute("AceptaNulo")]
        [Bindable(true)]
        public bool AceptaNulo 
	    {
		    get
		    {
			    return GetColumnValue<bool>("ACEPTA_NULO");
		    }
            set 
		    {
			    SetColumnValue("ACEPTA_NULO", value);
            }
        }
	      
        [XmlAttribute("TipoDatos")]
        [Bindable(true)]
        public string TipoDatos 
	    {
		    get
		    {
			    return GetColumnValue<string>("TIPO_DATOS");
		    }
            set 
		    {
			    SetColumnValue("TIPO_DATOS", value);
            }
        }
	      
        [XmlAttribute("Longitud")]
        [Bindable(true)]
        public int? Longitud 
	    {
		    get
		    {
			    return GetColumnValue<int?>("LONGITUD");
		    }
            set 
		    {
			    SetColumnValue("LONGITUD", value);
            }
        }
	      
        [XmlAttribute("Visible")]
        [Bindable(true)]
        public bool Visible 
	    {
		    get
		    {
			    return GetColumnValue<bool>("VISIBLE");
		    }
            set 
		    {
			    SetColumnValue("VISIBLE", value);
            }
        }
	      
        [XmlAttribute("TablaEnlace")]
        [Bindable(true)]
        public string TablaEnlace 
	    {
		    get
		    {
			    return GetColumnValue<string>("TABLA_ENLACE");
		    }
            set 
		    {
			    SetColumnValue("TABLA_ENLACE", value);
            }
        }
	      
        [XmlAttribute("ColumnaEnlace")]
        [Bindable(true)]
        public string ColumnaEnlace 
	    {
		    get
		    {
			    return GetColumnValue<string>("COLUMNA_ENLACE");
		    }
            set 
		    {
			    SetColumnValue("COLUMNA_ENLACE", value);
            }
        }
	      
        [XmlAttribute("TipoEnlace")]
        [Bindable(true)]
        public int? TipoEnlace 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TIPO_ENLACE");
		    }
            set 
		    {
			    SetColumnValue("TIPO_ENLACE", value);
            }
        }
	      
        [XmlAttribute("Consulta")]
        [Bindable(true)]
        public string Consulta 
	    {
		    get
		    {
			    return GetColumnValue<string>("CONSULTA");
		    }
            set 
		    {
			    SetColumnValue("CONSULTA", value);
            }
        }
	      
        [XmlAttribute("Descripcion")]
        [Bindable(true)]
        public string Descripcion 
	    {
		    get
		    {
			    return GetColumnValue<string>("DESCRIPCION");
		    }
            set 
		    {
			    SetColumnValue("DESCRIPCION", value);
            }
        }
	      
        [XmlAttribute("TablaDefault")]
        [Bindable(true)]
        public bool TablaDefault 
	    {
		    get
		    {
			    return GetColumnValue<bool>("TABLA_DEFAULT");
		    }
            set 
		    {
			    SetColumnValue("TABLA_DEFAULT", value);
            }
        }
	      
        [XmlAttribute("FromTabla")]
        [Bindable(true)]
        public string FromTabla 
	    {
		    get
		    {
			    return GetColumnValue<string>("FROM_TABLA");
		    }
            set 
		    {
			    SetColumnValue("FROM_TABLA", value);
            }
        }
	      
        [XmlAttribute("DisplayNombre")]
        [Bindable(true)]
        public string DisplayNombre 
	    {
		    get
		    {
			    return GetColumnValue<string>("DISPLAY_NOMBRE");
		    }
            set 
		    {
			    SetColumnValue("DISPLAY_NOMBRE", value);
            }
        }
	      
        [XmlAttribute("SelectColumna")]
        [Bindable(true)]
        public string SelectColumna 
	    {
		    get
		    {
			    return GetColumnValue<string>("SELECT_COLUMNA");
		    }
            set 
		    {
			    SetColumnValue("SELECT_COLUMNA", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ColumnaId = @"COLUMNA_ID";
            
            public static string NombreTabla = @"NOMBRE_TABLA";
            
            public static string NombreEsquema = @"NOMBRE_ESQUEMA";
            
            public static string NombreTablaCorto = @"NOMBRE_TABLA_CORTO";
            
            public static string NombreColumna = @"NOMBRE_COLUMNA";
            
            public static string AceptaNulo = @"ACEPTA_NULO";
            
            public static string TipoDatos = @"TIPO_DATOS";
            
            public static string Longitud = @"LONGITUD";
            
            public static string Visible = @"VISIBLE";
            
            public static string TablaEnlace = @"TABLA_ENLACE";
            
            public static string ColumnaEnlace = @"COLUMNA_ENLACE";
            
            public static string TipoEnlace = @"TIPO_ENLACE";
            
            public static string Consulta = @"CONSULTA";
            
            public static string Descripcion = @"DESCRIPCION";
            
            public static string TablaDefault = @"TABLA_DEFAULT";
            
            public static string FromTabla = @"FROM_TABLA";
            
            public static string DisplayNombre = @"DISPLAY_NOMBRE";
            
            public static string SelectColumna = @"SELECT_COLUMNA";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
