using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewUsuariosContadores class.
    /// </summary>
    [Serializable]
    public partial class ViewUsuariosContadoresCollection : ReadOnlyList<ViewUsuariosContadores, ViewUsuariosContadoresCollection>
    {        
        public ViewUsuariosContadoresCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_UsuariosContadores view.
    /// </summary>
    [Serializable]
    public partial class ViewUsuariosContadores : ReadOnlyRecord<ViewUsuariosContadores>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_UsuariosContadores", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarUsuarioContadorId = new TableSchema.TableColumn(schema);
                colvarUsuarioContadorId.ColumnName = "UsuarioContadorId";
                colvarUsuarioContadorId.DataType = DbType.Int32;
                colvarUsuarioContadorId.MaxLength = 0;
                colvarUsuarioContadorId.AutoIncrement = false;
                colvarUsuarioContadorId.IsNullable = false;
                colvarUsuarioContadorId.IsPrimaryKey = false;
                colvarUsuarioContadorId.IsForeignKey = false;
                colvarUsuarioContadorId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUsuarioContadorId);
                
                TableSchema.TableColumn colvarUsuarioId = new TableSchema.TableColumn(schema);
                colvarUsuarioId.ColumnName = "UsuarioId";
                colvarUsuarioId.DataType = DbType.Int32;
                colvarUsuarioId.MaxLength = 0;
                colvarUsuarioId.AutoIncrement = false;
                colvarUsuarioId.IsNullable = false;
                colvarUsuarioId.IsPrimaryKey = false;
                colvarUsuarioId.IsForeignKey = false;
                colvarUsuarioId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUsuarioId);
                
                TableSchema.TableColumn colvarTipoTransacion = new TableSchema.TableColumn(schema);
                colvarTipoTransacion.ColumnName = "TipoTransacion";
                colvarTipoTransacion.DataType = DbType.AnsiStringFixedLength;
                colvarTipoTransacion.MaxLength = 2;
                colvarTipoTransacion.AutoIncrement = false;
                colvarTipoTransacion.IsNullable = false;
                colvarTipoTransacion.IsPrimaryKey = false;
                colvarTipoTransacion.IsForeignKey = false;
                colvarTipoTransacion.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoTransacion);
                
                TableSchema.TableColumn colvarPrioridad = new TableSchema.TableColumn(schema);
                colvarPrioridad.ColumnName = "Prioridad";
                colvarPrioridad.DataType = DbType.Int32;
                colvarPrioridad.MaxLength = 0;
                colvarPrioridad.AutoIncrement = false;
                colvarPrioridad.IsNullable = false;
                colvarPrioridad.IsPrimaryKey = false;
                colvarPrioridad.IsForeignKey = false;
                colvarPrioridad.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrioridad);
                
                TableSchema.TableColumn colvarContador = new TableSchema.TableColumn(schema);
                colvarContador.ColumnName = "Contador";
                colvarContador.DataType = DbType.Int32;
                colvarContador.MaxLength = 0;
                colvarContador.AutoIncrement = false;
                colvarContador.IsNullable = false;
                colvarContador.IsPrimaryKey = false;
                colvarContador.IsForeignKey = false;
                colvarContador.IsReadOnly = false;
                
                schema.Columns.Add(colvarContador);
                
                TableSchema.TableColumn colvarActivo = new TableSchema.TableColumn(schema);
                colvarActivo.ColumnName = "Activo";
                colvarActivo.DataType = DbType.Boolean;
                colvarActivo.MaxLength = 0;
                colvarActivo.AutoIncrement = false;
                colvarActivo.IsNullable = false;
                colvarActivo.IsPrimaryKey = false;
                colvarActivo.IsForeignKey = false;
                colvarActivo.IsReadOnly = false;
                
                schema.Columns.Add(colvarActivo);
                
                TableSchema.TableColumn colvarNombreUsuario = new TableSchema.TableColumn(schema);
                colvarNombreUsuario.ColumnName = "NombreUsuario";
                colvarNombreUsuario.DataType = DbType.String;
                colvarNombreUsuario.MaxLength = 30;
                colvarNombreUsuario.AutoIncrement = false;
                colvarNombreUsuario.IsNullable = false;
                colvarNombreUsuario.IsPrimaryKey = false;
                colvarNombreUsuario.IsForeignKey = false;
                colvarNombreUsuario.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreUsuario);
                
                TableSchema.TableColumn colvarNombreCompleto = new TableSchema.TableColumn(schema);
                colvarNombreCompleto.ColumnName = "NombreCompleto";
                colvarNombreCompleto.DataType = DbType.String;
                colvarNombreCompleto.MaxLength = 100;
                colvarNombreCompleto.AutoIncrement = false;
                colvarNombreCompleto.IsNullable = true;
                colvarNombreCompleto.IsPrimaryKey = false;
                colvarNombreCompleto.IsForeignKey = false;
                colvarNombreCompleto.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreCompleto);
                
                TableSchema.TableColumn colvarContadorAsignaciones = new TableSchema.TableColumn(schema);
                colvarContadorAsignaciones.ColumnName = "ContadorAsignaciones";
                colvarContadorAsignaciones.DataType = DbType.Int32;
                colvarContadorAsignaciones.MaxLength = 0;
                colvarContadorAsignaciones.AutoIncrement = false;
                colvarContadorAsignaciones.IsNullable = false;
                colvarContadorAsignaciones.IsPrimaryKey = false;
                colvarContadorAsignaciones.IsForeignKey = false;
                colvarContadorAsignaciones.IsReadOnly = false;
                
                schema.Columns.Add(colvarContadorAsignaciones);
                
                TableSchema.TableColumn colvarNombreContado = new TableSchema.TableColumn(schema);
                colvarNombreContado.ColumnName = "NombreContado";
                colvarNombreContado.DataType = DbType.AnsiString;
                colvarNombreContado.MaxLength = 25;
                colvarNombreContado.AutoIncrement = false;
                colvarNombreContado.IsNullable = false;
                colvarNombreContado.IsPrimaryKey = false;
                colvarNombreContado.IsForeignKey = false;
                colvarNombreContado.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreContado);
                
                TableSchema.TableColumn colvarDescripcionPrioridad = new TableSchema.TableColumn(schema);
                colvarDescripcionPrioridad.ColumnName = "DescripcionPrioridad";
                colvarDescripcionPrioridad.DataType = DbType.AnsiString;
                colvarDescripcionPrioridad.MaxLength = 6;
                colvarDescripcionPrioridad.AutoIncrement = false;
                colvarDescripcionPrioridad.IsNullable = false;
                colvarDescripcionPrioridad.IsPrimaryKey = false;
                colvarDescripcionPrioridad.IsForeignKey = false;
                colvarDescripcionPrioridad.IsReadOnly = false;
                
                schema.Columns.Add(colvarDescripcionPrioridad);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_UsuariosContadores",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewUsuariosContadores()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewUsuariosContadores(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewUsuariosContadores(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewUsuariosContadores(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("UsuarioContadorId")]
        [Bindable(true)]
        public int UsuarioContadorId 
	    {
		    get
		    {
			    return GetColumnValue<int>("UsuarioContadorId");
		    }
            set 
		    {
			    SetColumnValue("UsuarioContadorId", value);
            }
        }
	      
        [XmlAttribute("UsuarioId")]
        [Bindable(true)]
        public int UsuarioId 
	    {
		    get
		    {
			    return GetColumnValue<int>("UsuarioId");
		    }
            set 
		    {
			    SetColumnValue("UsuarioId", value);
            }
        }
	      
        [XmlAttribute("TipoTransacion")]
        [Bindable(true)]
        public string TipoTransacion 
	    {
		    get
		    {
			    return GetColumnValue<string>("TipoTransacion");
		    }
            set 
		    {
			    SetColumnValue("TipoTransacion", value);
            }
        }
	      
        [XmlAttribute("Prioridad")]
        [Bindable(true)]
        public int Prioridad 
	    {
		    get
		    {
			    return GetColumnValue<int>("Prioridad");
		    }
            set 
		    {
			    SetColumnValue("Prioridad", value);
            }
        }
	      
        [XmlAttribute("Contador")]
        [Bindable(true)]
        public int Contador 
	    {
		    get
		    {
			    return GetColumnValue<int>("Contador");
		    }
            set 
		    {
			    SetColumnValue("Contador", value);
            }
        }
	      
        [XmlAttribute("Activo")]
        [Bindable(true)]
        public bool Activo 
	    {
		    get
		    {
			    return GetColumnValue<bool>("Activo");
		    }
            set 
		    {
			    SetColumnValue("Activo", value);
            }
        }
	      
        [XmlAttribute("NombreUsuario")]
        [Bindable(true)]
        public string NombreUsuario 
	    {
		    get
		    {
			    return GetColumnValue<string>("NombreUsuario");
		    }
            set 
		    {
			    SetColumnValue("NombreUsuario", value);
            }
        }
	      
        [XmlAttribute("NombreCompleto")]
        [Bindable(true)]
        public string NombreCompleto 
	    {
		    get
		    {
			    return GetColumnValue<string>("NombreCompleto");
		    }
            set 
		    {
			    SetColumnValue("NombreCompleto", value);
            }
        }
	      
        [XmlAttribute("ContadorAsignaciones")]
        [Bindable(true)]
        public int ContadorAsignaciones 
	    {
		    get
		    {
			    return GetColumnValue<int>("ContadorAsignaciones");
		    }
            set 
		    {
			    SetColumnValue("ContadorAsignaciones", value);
            }
        }
	      
        [XmlAttribute("NombreContado")]
        [Bindable(true)]
        public string NombreContado 
	    {
		    get
		    {
			    return GetColumnValue<string>("NombreContado");
		    }
            set 
		    {
			    SetColumnValue("NombreContado", value);
            }
        }
	      
        [XmlAttribute("DescripcionPrioridad")]
        [Bindable(true)]
        public string DescripcionPrioridad 
	    {
		    get
		    {
			    return GetColumnValue<string>("DescripcionPrioridad");
		    }
            set 
		    {
			    SetColumnValue("DescripcionPrioridad", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string UsuarioContadorId = @"UsuarioContadorId";
            
            public static string UsuarioId = @"UsuarioId";
            
            public static string TipoTransacion = @"TipoTransacion";
            
            public static string Prioridad = @"Prioridad";
            
            public static string Contador = @"Contador";
            
            public static string Activo = @"Activo";
            
            public static string NombreUsuario = @"NombreUsuario";
            
            public static string NombreCompleto = @"NombreCompleto";
            
            public static string ContadorAsignaciones = @"ContadorAsignaciones";
            
            public static string NombreContado = @"NombreContado";
            
            public static string DescripcionPrioridad = @"DescripcionPrioridad";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
