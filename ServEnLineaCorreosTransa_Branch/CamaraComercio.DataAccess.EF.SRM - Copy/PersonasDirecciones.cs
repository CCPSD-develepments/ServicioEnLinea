//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.SRM
{
    public partial class PersonasDirecciones
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    		public static string ID = @"ID";
    public static string PersonaId = @"PersonaId";
    public static string DireccionId = @"DireccionId";
    public static string FechaModificacion = @"FechaModificacion";
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual int PersonaId
        {
            get { return _personaId; }
            set
            {
                if (_personaId != value)
                {
                    if (Personas != null && Personas.PersonaId != value)
                    {
                        Personas = null;
                    }
                    _personaId = value;
                }
            }
        }
        private int _personaId;
    
        public virtual int DireccionId
        {
            get { return _direccionId; }
            set
            {
                if (_direccionId != value)
                {
                    if (Direcciones != null && Direcciones.DireccionId != value)
                    {
                        Direcciones = null;
                    }
                    _direccionId = value;
                }
            }
        }
        private int _direccionId;
    
        public virtual System.DateTime FechaModificacion
        {
            get;
            set;
        }
    
        public virtual System.Guid rowguid
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Direcciones Direcciones
        {
            get { return _direcciones; }
            set
            {
                if (!ReferenceEquals(_direcciones, value))
                {
                    var previousValue = _direcciones;
                    _direcciones = value;
                    FixupDirecciones(previousValue);
                }
            }
        }
        private Direcciones _direcciones;
    
        public virtual Personas Personas
        {
            get { return _personas; }
            set
            {
                if (!ReferenceEquals(_personas, value))
                {
                    var previousValue = _personas;
                    _personas = value;
                    FixupPersonas(previousValue);
                }
            }
        }
        private Personas _personas;

        #endregion

        #region Association Fixup
    
        private void FixupDirecciones(Direcciones previousValue)
        {
            if (previousValue != null && previousValue.PersonasDirecciones.Contains(this))
            {
                previousValue.PersonasDirecciones.Remove(this);
            }
    
            if (Direcciones != null)
            {
                if (!Direcciones.PersonasDirecciones.Contains(this))
                {
                    Direcciones.PersonasDirecciones.Add(this);
                }
                if (DireccionId != Direcciones.DireccionId)
                {
                    DireccionId = Direcciones.DireccionId;
                }
            }
        }
    
        private void FixupPersonas(Personas previousValue)
        {
            if (previousValue != null && previousValue.PersonasDirecciones.Contains(this))
            {
                previousValue.PersonasDirecciones.Remove(this);
            }
    
            if (Personas != null)
            {
                if (!Personas.PersonasDirecciones.Contains(this))
                {
                    Personas.PersonasDirecciones.Add(this);
                }
                if (PersonaId != Personas.PersonaId)
                {
                    PersonaId = Personas.PersonaId;
                }
            }
        }

        #endregion

    }
}
