
    

  

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
        <title>ui.spinner.min.js at master from jogep's jquery.ui.spinner - GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />

    <link href="https://assets1.github.com/stylesheets/bundle_common.css?9be3b31760b2ed1e0983740b292778ab7067fa37" media="screen" rel="stylesheet" type="text/css" />
<link href="https://assets0.github.com/stylesheets/bundle_github.css?9be3b31760b2ed1e0983740b292778ab7067fa37" media="screen" rel="stylesheet" type="text/css" />

    <script type="text/javascript" charset="utf-8">
      var GitHub = {}
      var github_user = null
      
    </script>
    <script src="https://assets2.github.com/javascripts/jquery/jquery-1.4.2.min.js?9be3b31760b2ed1e0983740b292778ab7067fa37" type="text/javascript"></script>
    <script src="https://assets2.github.com/javascripts/bundle_common.js?9be3b31760b2ed1e0983740b292778ab7067fa37" type="text/javascript"></script>
<script src="https://assets3.github.com/javascripts/bundle_github.js?9be3b31760b2ed1e0983740b292778ab7067fa37" type="text/javascript"></script>


        <script type="text/javascript" charset="utf-8">
      GitHub.spy({
        repo: "jogep/jquery.ui.spinner"
      })
    </script>

    
  
    
  

  <link href="https://github.com/jogep/jquery.ui.spinner/commits/master.atom" rel="alternate" title="Recent Commits to jquery.ui.spinner:master" type="application/atom+xml" />

        <meta name="description" content="jQuery.ui extension for a numeric spinner" />
    <script type="text/javascript">
      GitHub.nameWithOwner = GitHub.nameWithOwner || "jogep/jquery.ui.spinner";
      GitHub.currentRef = 'master';
      GitHub.commitSHA = "aa9bb7f680fcf62e13c78b8c5dd8f67f33244186";
      GitHub.currentPath = "ui.spinner.min.js";
      GitHub.masterBranch = "master";

      
    </script>
  

            <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-3769691-2']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script');
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        ga.setAttribute('async', 'true');
        document.documentElement.firstChild.appendChild(ga);
      })();
    </script>

  </head>

  

  <body class="logged_out ">
    

    
      <script type="text/javascript">
        var _kmq = _kmq || [];
        function _kms(u){
          var s = document.createElement('script'); var f = document.getElementsByTagName('script')[0]; s.type = 'text/javascript'; s.async = true;
          s.src = u; f.parentNode.insertBefore(s, f);
        }
        _kms('//i.kissmetrics.com/i.js');_kms('//doug1izaerwt3.cloudfront.net/406e8bf3a2b8846ead55afb3cfaf6664523e3a54.1.js');
      </script>
    

    

    

    
      <div id="site_alert">
        <form action="/translate?to=%2Fjogep%2Fjquery.ui.spinner%2Fblob%2Fmaster%2Fui.spinner.min.js" method="post"><div style="margin:0;padding:0"><input name="authenticity_token" type="hidden" value="903cd3f12456cec0471063e3849c204f69c26bef" /></div>        <p>
          Would you rather see this site in Spanish? (¿Deseas ver este sitio en Español?) &nbsp;
          <button class="minibutton" name="code" value="es"><span>Yes (Sí)</span></button> &nbsp;
          <button class="minibutton" name="code" value="en"><span>No (No)</span></button>
        </p>
        </form>      </div>
    

    <div class="subnavd" id="main">
      <div id="header" class="true">
        
          <a class="logo boring" href="https://github.com">
            <img src="/images/modules/header/logov3.png?changed" class="default" alt="github" />
            <![if !IE]>
            <img src="/images/modules/header/logov3-hover.png" class="hover" alt="github" />
            <![endif]>
          </a>
        
        
        <div class="topsearch">
  
    <ul class="nav logged_out">
      <li class="pricing"><a href="/plans">Pricing and Signup</a></li>
      <li><a href="/explore">Explore GitHub</a></li>
      <li><a href="/features">Features</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="https://github.com/login">Login</a></li>
    </ul>
  
</div>

      </div>

      
      
        
    <div class="site">
      <div class="pagehead repohead vis-public fork  ">

      

      <div class="title-actions-bar">
        <h1>
          <a href="/jogep">jogep</a> / <strong><a href="https://github.com/jogep/jquery.ui.spinner">jquery.ui.spinner</a></strong>
          
            <span class="fork-flag">
              
              <span class="text">forked from <a href="/btburnett3/jquery.ui.spinner">btburnett3/jquery.ui.spinner</a></span>
            </span>
          
          
        </h1>

        
    <ul class="actions">
      

      
        <li class="for-owner" style="display:none"><a href="https://github.com/jogep/jquery.ui.spinner/admin" class="minibutton btn-admin "><span><span class="icon"></span>Admin</span></a></li>
        <li>
          <a href="/jogep/jquery.ui.spinner/toggle_watch" class="minibutton btn-watch " id="watch_button" onclick="var f = document.createElement('form'); f.style.display = 'none'; this.parentNode.appendChild(f); f.method = 'POST'; f.action = this.href;var s = document.createElement('input'); s.setAttribute('type', 'hidden'); s.setAttribute('name', 'authenticity_token'); s.setAttribute('value', '903cd3f12456cec0471063e3849c204f69c26bef'); f.appendChild(s);f.submit();return false;" style="display:none"><span><span class="icon"></span>Watch</span></a>
          <a href="/jogep/jquery.ui.spinner/toggle_watch" class="minibutton btn-watch " id="unwatch_button" onclick="var f = document.createElement('form'); f.style.display = 'none'; this.parentNode.appendChild(f); f.method = 'POST'; f.action = this.href;var s = document.createElement('input'); s.setAttribute('type', 'hidden'); s.setAttribute('name', 'authenticity_token'); s.setAttribute('value', '903cd3f12456cec0471063e3849c204f69c26bef'); f.appendChild(s);f.submit();return false;" style="display:none"><span><span class="icon"></span>Unwatch</span></a>
        </li>
        
          
            <li class="for-notforked" style="display:none"><a href="/jogep/jquery.ui.spinner/fork" class="minibutton btn-fork " id="fork_button" onclick="var f = document.createElement('form'); f.style.display = 'none'; this.parentNode.appendChild(f); f.method = 'POST'; f.action = this.href;var s = document.createElement('input'); s.setAttribute('type', 'hidden'); s.setAttribute('name', 'authenticity_token'); s.setAttribute('value', '903cd3f12456cec0471063e3849c204f69c26bef'); f.appendChild(s);f.submit();return false;"><span><span class="icon"></span>Fork</span></a></li>
            <li class="for-hasfork" style="display:none"><a href="#" class="minibutton btn-fork " id="your_fork_button"><span><span class="icon"></span>Your Fork</span></a></li>
          

          
        
      
      
      <li class="repostats">
        <ul class="repo-stats">
          <li class="watchers"><a href="/jogep/jquery.ui.spinner/watchers" title="Watchers" class="tooltipped downwards">1</a></li>
          <li class="forks"><a href="/jogep/jquery.ui.spinner/network" title="Forks" class="tooltipped downwards">10</a></li>
        </ul>
      </li>
    </ul>

      </div>

        
  <ul class="tabs">
    <li><a href="https://github.com/jogep/jquery.ui.spinner" class="selected" highlight="repo_source">Source</a></li>
    <li><a href="https://github.com/jogep/jquery.ui.spinner/commits/master" highlight="repo_commits">Commits</a></li>
    <li><a href="/jogep/jquery.ui.spinner/network" highlight="repo_network">Network</a></li>
    <li><a href="/jogep/jquery.ui.spinner/pulls" highlight="repo_pulls">Pull Requests (0)</a></li>

    

    
      
      <li><a href="/jogep/jquery.ui.spinner/issues" highlight="issues">Issues (0)</a></li>
    

    
    <li><a href="/jogep/jquery.ui.spinner/graphs" highlight="repo_graphs">Graphs</a></li>

    <li class="contextswitch nochoices">
      <span class="toggle leftwards" >
        <em>Branch:</em>
        <code>master</code>
      </span>
    </li>
  </ul>

  <div style="display:none" id="pl-description"><p><em class="placeholder">click here to add a description</em></p></div>
  <div style="display:none" id="pl-homepage"><p><em class="placeholder">click here to add a homepage</em></p></div>

  <div class="subnav-bar">
  
  <ul>
    <li>
      <a href="#" class="dropdown">Switch Branches (3)</a>
      <ul>
        
          
          
            <li><a href="/jogep/jquery.ui.spinner/blob/UI-1.7/ui.spinner.min.js" action="show">UI-1.7</a></li>
          
        
          
          
            <li><a href="/jogep/jquery.ui.spinner/blob/dev/ui.spinner.min.js" action="show">dev</a></li>
          
        
          
            <li><strong>master &#x2713;</strong></li>
            
      </ul>
    </li>
    <li>
      <a href="#" class="dropdown ">Switch Tags (2)</a>
              <ul>
                      
              <li><a href="/jogep/jquery.ui.spinner/blob/1.20/ui.spinner.min.js">1.20</a></li>
            
                      
              <li><a href="/jogep/jquery.ui.spinner/blob/1.11/ui.spinner.min.js">1.11</a></li>
            
                  </ul>
      
    </li>
    <li>
    
    <a href="/jogep/jquery.ui.spinner/branches" class="manage">Branch List</a>
    
    </li>
  </ul>
</div>

  
  
  
  
  
  



        
    <div id="repo_details" class="metabox clearfix">
      <div id="repo_details_loader" class="metabox-loader" style="display:none">Sending Request&hellip;</div>

        <a href="/jogep/jquery.ui.spinner/downloads" class="download-source" id="download_button" title="Download source, tagged packages and binaries."><span class="icon"></span>Downloads</a>

      <div id="repository_desc_wrapper">
      <div id="repository_description" rel="repository_description_edit">
        
          <p>jQuery.ui extension for a numeric spinner
            <span id="read_more" style="display:none">&mdash; <a href="#readme">Read more</a></span>
          </p>
        
      </div>

      <div id="repository_description_edit" style="display:none;" class="inline-edit">
        <form action="/jogep/jquery.ui.spinner/admin/update" method="post"><div style="margin:0;padding:0"><input name="authenticity_token" type="hidden" value="903cd3f12456cec0471063e3849c204f69c26bef" /></div>
          <input type="hidden" name="field" value="repository_description">
          <input type="text" class="textfield" name="value" value="jQuery.ui extension for a numeric spinner">
          <div class="form-actions">
            <button class="minibutton"><span>Save</span></button> &nbsp; <a href="#" class="cancel">Cancel</a>
          </div>
        </form>
      </div>

      
      <div class="repository-homepage" id="repository_homepage" rel="repository_homepage_edit">
        <p><a href="http://www.jgeppert.com/jquery-spinner/" rel="nofollow">http://www.jgeppert.com/jquery-spinner/</a></p>
      </div>

      <div id="repository_homepage_edit" style="display:none;" class="inline-edit">
        <form action="/jogep/jquery.ui.spinner/admin/update" method="post"><div style="margin:0;padding:0"><input name="authenticity_token" type="hidden" value="903cd3f12456cec0471063e3849c204f69c26bef" /></div>
          <input type="hidden" name="field" value="repository_homepage">
          <input type="text" class="textfield" name="value" value="http://www.jgeppert.com/jquery-spinner/">
          <div class="form-actions">
            <button class="minibutton"><span>Save</span></button> &nbsp; <a href="#" class="cancel">Cancel</a>
          </div>
        </form>
      </div>
      </div>
      <div class="rule "></div>
            <div id="url_box" class="url-box">
        <ul class="clone-urls">
          
            
            <li id="http_clone_url"><a href="https://github.com/jogep/jquery.ui.spinner.git" data-permissions="Read-Only">HTTP</a></li>
            <li id="public_clone_url"><a href="git://github.com/jogep/jquery.ui.spinner.git" data-permissions="Read-Only">Git Read-Only</a></li>
          
          
        </ul>
        <input type="text" spellcheck="false" id="url_field" class="url-field" />
              <span style="display:none" id="url_box_clippy"></span>
      <span id="clippy_tooltip_url_box_clippy" class="clippy-tooltip tooltipped" title="copy to clipboard">
      <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"
              width="14"
              height="14"
              class="clippy"
              id="clippy" >
      <param name="movie" value="https://assets2.github.com/flash/clippy.swf?v5"/>
      <param name="allowScriptAccess" value="always" />
      <param name="quality" value="high" />
      <param name="scale" value="noscale" />
      <param NAME="FlashVars" value="id=url_box_clippy&amp;copied=&amp;copyto=">
      <param name="bgcolor" value="#FFFFFF">
      <param name="wmode" value="opaque">
      <embed src="https://assets2.github.com/flash/clippy.swf?v5"
             width="14"
             height="14"
             name="clippy"
             quality="high"
             allowScriptAccess="always"
             type="application/x-shockwave-flash"
             pluginspage="http://www.macromedia.com/go/getflashplayer"
             FlashVars="id=url_box_clippy&amp;copied=&amp;copyto="
             bgcolor="#FFFFFF"
             wmode="opaque"
      />
      </object>
      </span>

        <p id="url_description">This URL has <strong>Read+Write</strong> access</p>
      </div>
    </div>


        

      </div><!-- /.pagehead -->

      









<script type="text/javascript">
  GitHub.currentCommitRef = 'master'
  GitHub.currentRepoOwner = 'jogep'
  GitHub.currentRepo = "jquery.ui.spinner"
  GitHub.downloadRepo = '/jogep/jquery.ui.spinner/archives/master'
  GitHub.revType = "master"

  GitHub.controllerName = "blob"
  GitHub.actionName     = "show"
  GitHub.currentAction  = "blob#show"

  

  
</script>








  <div id="commit">
    <div class="group">
        
  <div class="envelope commit">
    <div class="human">
      
        <div class="message"><pre><a href="/jogep/jquery.ui.spinner/commit/aa9bb7f680fcf62e13c78b8c5dd8f67f33244186">fix position problems in chrome</a> </pre></div>
      

      <div class="actor">
        <div class="gravatar">
          
          <img src="https://secure.gravatar.com/avatar/9a965bb8acc85e70851e474c87a7bdfe?s=140&d=https%3A%2F%2Fgithub.com%2Fimages%2Fgravatars%2Fgravatar-140.png" alt="" width="30" height="30"  />
        </div>
        <div class="name"><a href="/jogep">jogep</a> <span>(author)</span></div>
        <div class="date">
          <abbr class="relatize" title="2010-10-22 11:46:44">Fri Oct 22 11:46:44 -0700 2010</abbr>
        </div>
      </div>

      

    </div>
    <div class="machine">
      <span>c</span>ommit&nbsp;&nbsp;<a href="/jogep/jquery.ui.spinner/commit/aa9bb7f680fcf62e13c78b8c5dd8f67f33244186" hotkey="c">aa9bb7f680fcf62e13c7</a><br />
      <span>t</span>ree&nbsp;&nbsp;&nbsp;&nbsp;<a href="/jogep/jquery.ui.spinner/tree/aa9bb7f680fcf62e13c78b8c5dd8f67f33244186" hotkey="t">3c9763b74e4232837cdf</a><br />
      
        <span>p</span>arent&nbsp;
        
        <a href="/jogep/jquery.ui.spinner/tree/abd9b3acc1ebd68dd9934d75be90351ba7aedcd4" hotkey="p">abd9b3acc1ebd68dd993</a>
      

    </div>
  </div>

    </div>
  </div>



  <div id="slider">

  
    <div class="breadcrumb" data-path="ui.spinner.min.js/">
      <b><a href="/jogep/jquery.ui.spinner/tree/aa9bb7f680fcf62e13c78b8c5dd8f67f33244186">jquery.ui.spinner</a></b> / ui.spinner.min.js       <span style="display:none" id="clippy_2120">ui.spinner.min.js</span>
      
      <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"
              width="110"
              height="14"
              class="clippy"
              id="clippy" >
      <param name="movie" value="https://assets2.github.com/flash/clippy.swf?v5"/>
      <param name="allowScriptAccess" value="always" />
      <param name="quality" value="high" />
      <param name="scale" value="noscale" />
      <param NAME="FlashVars" value="id=clippy_2120&amp;copied=copied!&amp;copyto=copy to clipboard">
      <param name="bgcolor" value="#FFFFFF">
      <param name="wmode" value="opaque">
      <embed src="https://assets2.github.com/flash/clippy.swf?v5"
             width="110"
             height="14"
             name="clippy"
             quality="high"
             allowScriptAccess="always"
             type="application/x-shockwave-flash"
             pluginspage="http://www.macromedia.com/go/getflashplayer"
             FlashVars="id=clippy_2120&amp;copied=copied!&amp;copyto=copy to clipboard"
             bgcolor="#FFFFFF"
             wmode="opaque"
      />
      </object>
      

    </div>

    <div class="frames">
      <div class="frame frame-center" data-path="ui.spinner.min.js/">
        <div id="files">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><img alt="Txt" height="16" src="https://assets3.github.com/images/icons/txt.png?9be3b31760b2ed1e0983740b292778ab7067fa37" width="16" /></span>
                <span class="mode" title="File Mode">100644</span>
                
                  <span>14 lines (14 sloc)</span>
                
                <span>8.721 kb</span>
              </div>
              <ul class="actions">
                
                  <li><a class="file-edit-link" href="#" rel="/jogep/jquery.ui.spinner/file-edit/__ref__/ui.spinner.min.js">edit</a></li>
                
                <li><a href="/jogep/jquery.ui.spinner/raw/master/ui.spinner.min.js" id="raw-url">raw</a></li>
                
                  <li><a href="/jogep/jquery.ui.spinner/blame/master/ui.spinner.min.js">blame</a></li>
                
                <li><a href="/jogep/jquery.ui.spinner/commits/master/ui.spinner.min.js">history</a></li>
              </ul>
            </div>
            
  <div class="data type-javascript">
    
      <table cellpadding="0" cellspacing="0">
        <tr>
          <td>
            <pre class="line_numbers"><span id="LID1" rel="#L1">1</span>
<span id="LID2" rel="#L2">2</span>
<span id="LID3" rel="#L3">3</span>
<span id="LID4" rel="#L4">4</span>
<span id="LID5" rel="#L5">5</span>
<span id="LID6" rel="#L6">6</span>
<span id="LID7" rel="#L7">7</span>
<span id="LID8" rel="#L8">8</span>
<span id="LID9" rel="#L9">9</span>
<span id="LID10" rel="#L10">10</span>
<span id="LID11" rel="#L11">11</span>
<span id="LID12" rel="#L12">12</span>
<span id="LID13" rel="#L13">13</span>
<span id="LID14" rel="#L14">14</span>
</pre>
          </td>
          <td width="100%">
            
              
                <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*!</span></div><div class='line' id='LC2'><span class="cm"> *jQuery UI Spinner 1.24</span></div><div class='line' id='LC3'><span class="cm"> *</span></div><div class='line' id='LC4'><span class="cm"> *Copyright (c) 2009-2010 Brant Burnett</span></div><div class='line' id='LC5'><span class="cm"> *Copyright (c) 2010 Johannes Geppert http://www.jgeppert.com</span></div><div class='line' id='LC6'><span class="cm"> *Dual licensed under the MIT or GPL Version 2 licenses.</span></div><div class='line' id='LC7'><span class="cm"> *</span></div><div class='line' id='LC8'><span class="cm"> *  Depends:</span></div><div class='line' id='LC9'><span class="cm"> *	jquery.ui.core.js</span></div><div class='line' id='LC10'><span class="cm"> *	jquery.ui.widget.js</span></div><div class='line' id='LC11'><span class="cm"> *	jquery.ui.mouse.js</span></div><div class='line' id='LC12'><span class="cm"> *	jquery.ui.position.js</span></div><div class='line' id='LC13'><span class="cm"> */</span></div><div class='line' id='LC14'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">"ui-state-active"</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="s2">"ui-state-hover"</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">"ui-state-disabled"</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">ui</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">UP</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">DOWN</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">RIGHT</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">LEFT</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">PAGE_UP</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">PAGE_DOWN</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">HOME</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">END</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">msie</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">browser</span><span class="p">.</span><span class="nx">mozilla</span><span class="o">?</span><span class="s2">"DOMMouseScroll"</span><span class="o">:</span><span class="s2">"mousewheel"</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="s2">".uispinner"</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">BACKSPACE</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">DELETE</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">TAB</span><span class="p">],</span><span class="nx">b</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">widget</span><span class="p">(</span><span class="s2">"ui.spinner"</span><span class="p">,{</span><span class="nx">options</span><span class="o">:</span><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">allowNull</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">group</span><span class="o">:</span><span class="s2">""</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="s2">"."</span><span class="p">,</span><span class="nx">prefix</span><span class="o">:</span><span class="s2">""</span><span class="p">,</span><span class="nx">suffix</span><span class="o">:</span><span class="s2">""</span><span class="p">,</span><span class="nx">places</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">defaultStep</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">largeStep</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">mouseWheel</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">increment</span><span class="o">:</span><span class="s2">"slow"</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">showOn</span><span class="o">:</span><span class="s2">"always"</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="mi">16</span><span class="p">,</span><span class="nx">upIconClass</span><span class="o">:</span><span class="s2">"ui-icon-triangle-1-n"</span><span class="p">,</span><span class="nx">downIconClass</span><span class="o">:</span><span class="s2">"ui-icon-triangle-1-s"</span><span class="p">,</span><span class="nx">format</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="sr">/(\d+)(\d{3})/</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="p">((</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">w</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">w</span><span class="p">)).</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">v</span><span class="p">))</span><span class="o">+</span><span class="s2">""</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">"."</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">point</span><span class="p">);</span><span class="nx">x</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">.</span><span class="nx">group</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="s2">"$1"</span><span class="o">+</span><span class="nx">u</span><span class="p">.</span><span class="nx">group</span><span class="o">+</span><span class="s2">"$2"</span><span class="p">)){}</span><span class="k">return</span><span class="p">(</span><span class="nx">w</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="s2">"-"</span><span class="o">:</span><span class="s2">""</span><span class="p">)</span><span class="o">+</span><span class="nx">u</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="nx">t</span><span class="o">+</span><span class="nx">u</span><span class="p">.</span><span class="nx">suffix</span><span class="p">},</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">group</span><span class="o">==</span><span class="s2">"."</span><span class="p">){</span><span class="nx">u</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">"."</span><span class="p">,</span><span class="s2">""</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">point</span><span class="o">!=</span><span class="s2">"."</span><span class="p">){</span><span class="nx">u</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">point</span><span class="p">,</span><span class="s2">"."</span><span class="p">)}</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9\-\.]/g</span><span class="p">,</span><span class="s2">""</span><span class="p">))}},</span><span class="nx">_create</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"type"</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">"input"</span><span class="p">)</span><span class="o">||</span><span class="p">((</span><span class="nx">v</span><span class="o">!=</span><span class="s2">"text"</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="o">!=</span><span class="s2">"number"</span><span class="p">))){</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">"Invalid target for ui.spinner"</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">u</span><span class="p">.</span><span class="nx">_procOptions</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="nx">u</span><span class="p">.</span><span class="nx">_createButtons</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">":enabled"</span><span class="p">)){</span><span class="nx">u</span><span class="p">.</span><span class="nx">disable</span><span class="p">()}},</span><span class="nx">_createButtons</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">W</span><span class="p">){</span><span class="k">return</span> <span class="nx">W</span><span class="o">==</span><span class="s2">"auto"</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="mi">10</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">className</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">showOn</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">boxModel</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">(),</span><span class="nx">R</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">oMargin</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">"margin-right"</span><span class="p">)),</span><span class="nx">A</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">wrapper</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">oWidth</span><span class="o">=</span><span class="p">(</span><span class="nx">C</span><span class="o">?</span><span class="nx">E</span><span class="p">.</span><span class="nx">width</span><span class="p">()</span><span class="o">:</span><span class="nx">E</span><span class="p">.</span><span class="nx">outerWidth</span><span class="p">()))</span><span class="o">-</span><span class="nx">N</span><span class="p">,</span><span class="nx">marginRight</span><span class="o">:</span><span class="nx">R</span><span class="o">+</span><span class="nx">N</span><span class="p">,</span><span class="nx">textAlign</span><span class="o">:</span><span class="s2">"right"</span><span class="p">}).</span><span class="nx">after</span><span class="p">(</span><span class="s2">"&lt;span class=&#39;ui-spinner ui-widget&#39; style=&#39;top:0;left:0;position:absolute;&#39;&gt;&lt;/span&gt;"</span><span class="p">).</span><span class="nx">next</span><span class="p">(),</span><span class="nx">L</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">btnContainer</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="s2">"&lt;div class=&#39;ui-spinner-buttons&#39;&gt;&lt;div class=&#39;ui-spinner-up ui-spinner-button ui-state-default ui-corner-tr&#39;&gt;&lt;span class=&#39;ui-icon "</span><span class="o">+</span><span class="nx">x</span><span class="p">.</span><span class="nx">upIconClass</span><span class="o">+</span><span class="s2">"&#39;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#39;ui-spinner-down ui-spinner-button ui-state-default ui-corner-br&#39;&gt;&lt;span class=&#39;ui-icon "</span><span class="o">+</span><span class="nx">x</span><span class="p">.</span><span class="nx">downIconClass</span><span class="o">+</span><span class="s2">"&#39;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;"</span><span class="p">),</span><span class="nx">w</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">O</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">dir</span><span class="o">==</span><span class="s2">"rtl"</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">){</span><span class="nx">A</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">v</span><span class="p">)}</span><span class="nx">A</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">L</span><span class="p">);</span><span class="nx">Q</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">buttons</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">".ui-spinner-button"</span><span class="p">);</span><span class="nx">Q</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">N</span><span class="o">-</span><span class="p">(</span><span class="nx">C</span><span class="o">?</span><span class="nx">Q</span><span class="p">.</span><span class="nx">outerWidth</span><span class="p">()</span><span class="o">-</span><span class="nx">Q</span><span class="p">.</span><span class="nx">width</span><span class="p">()</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">height</span><span class="o">:</span><span class="nx">I</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="p">(</span><span class="nx">C</span><span class="o">?</span><span class="nx">Q</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">()</span><span class="o">-</span><span class="nx">Q</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">:</span><span class="mi">0</span><span class="p">)});</span><span class="nx">w</span><span class="o">=</span><span class="nx">Q</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">u</span><span class="o">=</span><span class="nx">Q</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">V</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">".ui-icon"</span><span class="p">);</span><span class="nx">V</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">marginLeft</span><span class="o">:</span><span class="p">(</span><span class="nx">Q</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">()</span><span class="o">-</span><span class="nx">V</span><span class="p">.</span><span class="nx">width</span><span class="p">())</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">marginTop</span><span class="o">:</span><span class="p">(</span><span class="nx">Q</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">()</span><span class="o">-</span><span class="nx">V</span><span class="p">.</span><span class="nx">height</span><span class="p">())</span><span class="o">/</span><span class="mi">2</span><span class="p">});</span><span class="nx">L</span><span class="p">.</span><span class="nx">width</span><span class="p">(</span><span class="nx">Q</span><span class="p">.</span><span class="nx">outerWidth</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">!=</span><span class="s2">"always"</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">"opacity"</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span><span class="nx">E</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">"ui-spinner-input"</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">role</span><span class="o">:</span><span class="s2">"textbox"</span><span class="p">});</span><span class="nx">A</span><span class="p">.</span><span class="nx">position</span><span class="p">({</span><span class="nx">of</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">my</span><span class="o">:</span><span class="s2">"left center"</span><span class="p">,</span><span class="nx">at</span><span class="o">:</span><span class="s2">"right center"</span><span class="p">,</span><span class="nx">offset</span><span class="o">:</span><span class="s2">"0 0"</span><span class="p">,</span><span class="nx">collision</span><span class="o">:</span><span class="s2">"flip flip"</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">==</span><span class="s2">"hover"</span><span class="o">||</span><span class="nx">y</span><span class="o">==</span><span class="s2">"both"</span><span class="p">){</span><span class="nx">Q</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">E</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">"mouseenter"</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">T</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">G</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">.</span><span class="nx">focused</span><span class="o">||</span><span class="p">(</span><span class="nx">y</span><span class="o">==</span><span class="s2">"hover"</span><span class="p">)){</span><span class="nx">H</span><span class="p">.</span><span class="nx">showButtons</span><span class="p">()}})}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">"mouseleave"</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(){</span><span class="nx">T</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">G</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">.</span><span class="nx">focused</span><span class="o">||</span><span class="p">(</span><span class="nx">y</span><span class="o">==</span><span class="s2">"hover"</span><span class="p">)){</span><span class="nx">H</span><span class="p">.</span><span class="nx">hideButtons</span><span class="p">()}})})}</span><span class="kd">function</span> <span class="nx">U</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">disabled</span><span class="p">){</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">element</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">X</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="o">===</span><span class="nx">w</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">);</span><span class="nx">W</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="nx">W</span><span class="p">.</span><span class="nx">select</span><span class="p">();</span><span class="nx">g</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">O</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">H</span><span class="p">.</span><span class="nx">_startSpin</span><span class="p">(</span><span class="nx">X</span><span class="p">)}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">S</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="p">){</span><span class="nx">g</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">_stopSpin</span><span class="p">();</span><span class="nx">O</span><span class="o">=</span><span class="kc">false</span><span class="p">}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="nx">Q</span><span class="p">.</span><span class="nx">hover</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">H</span><span class="p">.</span><span class="nx">buttons</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">disabled</span><span class="p">){</span><span class="nx">g</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">s</span><span class="p">)}},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">s</span><span class="p">)}).</span><span class="nx">mousedown</span><span class="p">(</span><span class="nx">U</span><span class="p">).</span><span class="nx">mouseup</span><span class="p">(</span><span class="nx">S</span><span class="p">).</span><span class="nx">mouseout</span><span class="p">(</span><span class="nx">S</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="nx">Q</span><span class="p">.</span><span class="nx">dblclick</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">.</span><span class="nx">disabled</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">_change</span><span class="p">();</span><span class="nx">H</span><span class="p">.</span><span class="nx">_doSpin</span><span class="p">((</span><span class="k">this</span><span class="o">===</span><span class="nx">w</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">step</span><span class="p">)}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">"selectstart"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">false</span><span class="p">})}</span><span class="nx">E</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">"keydown"</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">aa</span><span class="p">){</span><span class="kd">var</span> <span class="nx">X</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">W</span><span class="p">,</span><span class="nx">Z</span><span class="o">=</span><span class="nx">aa</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aa</span><span class="p">.</span><span class="nx">ctrl</span><span class="o">||</span><span class="nx">aa</span><span class="p">.</span><span class="nx">alt</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">Z</span><span class="p">)){</span><span class="nx">J</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">switch</span><span class="p">(</span><span class="nx">Z</span><span class="p">){</span><span class="k">case</span> <span class="nx">m</span><span class="o">:</span><span class="k">case</span> <span class="nx">j</span><span class="o">:</span><span class="nx">X</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">Y</span><span class="o">=</span><span class="nx">Z</span><span class="o">==</span><span class="nx">j</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">n</span><span class="o">:</span><span class="k">case</span> <span class="nx">p</span><span class="o">:</span><span class="nx">X</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">Y</span><span class="o">=</span><span class="nx">Z</span><span class="o">==</span><span class="nx">p</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">r</span><span class="o">:</span><span class="k">case</span> <span class="nx">f</span><span class="o">:</span><span class="nx">X</span><span class="o">=</span><span class="p">(</span><span class="nx">Z</span><span class="o">==</span><span class="nx">r</span><span class="p">)</span><span class="o">^</span><span class="nx">z</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">q</span><span class="o">:</span><span class="nx">W</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">_setValue</span><span class="p">(</span><span class="nx">W</span><span class="p">)}</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="k">case</span> <span class="nx">d</span><span class="o">:</span><span class="nx">W</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="p">;</span><span class="nx">W</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">_setValue</span><span class="p">(</span><span class="nx">W</span><span class="p">)}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">P</span><span class="o">&amp;&amp;!</span><span class="nx">x</span><span class="p">.</span><span class="nx">disabled</span><span class="p">){</span><span class="nx">keyDir</span><span class="o">=</span><span class="nx">X</span><span class="p">;</span><span class="nx">g</span><span class="p">(</span><span class="nx">X</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">w</span><span class="o">:</span><span class="nx">u</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">P</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">H</span><span class="p">.</span><span class="nx">_startSpin</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">Y</span><span class="p">)}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">"keyup"</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">W</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">.</span><span class="nx">ctrl</span><span class="o">||</span><span class="nx">W</span><span class="p">.</span><span class="nx">alt</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">k</span><span class="p">)){</span><span class="nx">J</span><span class="o">=</span><span class="kc">false</span><span class="p">}</span><span class="k">switch</span><span class="p">(</span><span class="nx">W</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">){</span><span class="k">case</span> <span class="nx">m</span><span class="o">:</span><span class="k">case</span> <span class="nx">r</span><span class="o">:</span><span class="k">case</span> <span class="nx">j</span><span class="o">:</span><span class="k">case</span> <span class="nx">n</span><span class="o">:</span><span class="k">case</span> <span class="nx">f</span><span class="o">:</span><span class="k">case</span> <span class="nx">p</span><span class="o">:</span><span class="nx">Q</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">_stopSpin</span><span class="p">();</span><span class="nx">P</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="kc">false</span><span class="p">}}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">"keypress"</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">W</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">(</span><span class="nx">W</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">,</span><span class="nx">W</span><span class="p">.</span><span class="nx">charCode</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">"change"</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">H</span><span class="p">.</span><span class="nx">_change</span><span class="p">()}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">"focus"</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(){</span><span class="nx">H</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">select</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="nx">W</span><span class="p">()}</span><span class="k">else</span><span class="p">{</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span><span class="nx">H</span><span class="p">.</span><span class="nx">focused</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">==</span><span class="s2">"focus"</span><span class="o">||</span><span class="nx">y</span><span class="o">==</span><span class="s2">"both"</span><span class="p">)){</span><span class="nx">H</span><span class="p">.</span><span class="nx">showButtons</span><span class="p">()}}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">"blur"</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">H</span><span class="p">.</span><span class="nx">focused</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">==</span><span class="s2">"focus"</span><span class="o">||</span><span class="nx">y</span><span class="o">==</span><span class="s2">"both"</span><span class="p">)){</span><span class="nx">H</span><span class="p">.</span><span class="nx">hideButtons</span><span class="p">()}});</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">X</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">W</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">W</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">W</span><span class="p">]</span><span class="o">==</span><span class="nx">X</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">M</span><span class="p">(</span><span class="nx">Z</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">W</span><span class="o">||</span><span class="nx">Z</span><span class="p">),</span><span class="nx">X</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">Y</span><span class="o">&gt;=</span><span class="s2">"0"</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Y</span><span class="o">&lt;=</span><span class="s2">"9"</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">Y</span><span class="o">==</span><span class="s2">"-"</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">if</span><span class="p">(((</span><span class="nx">H</span><span class="p">.</span><span class="nx">places</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Y</span><span class="o">==</span><span class="nx">X</span><span class="p">.</span><span class="nx">point</span><span class="p">))</span><span class="o">||</span><span class="p">(</span><span class="nx">Y</span><span class="o">==</span><span class="nx">X</span><span class="p">.</span><span class="nx">group</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">X</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="o">===</span><span class="nx">B</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">F</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(){</span><span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">X</span><span class="p">()}</span><span class="nx">B</span><span class="o">=</span><span class="nx">X</span><span class="p">;</span><span class="nx">F</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="mi">100</span><span class="p">)}},</span><span class="nx">_procOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">step</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">places</span><span class="p">,</span><span class="nx">u</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">z</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">increment</span><span class="o">==</span><span class="s2">"slow"</span><span class="p">){</span><span class="nx">C</span><span class="p">.</span><span class="nx">increment</span><span class="o">=</span><span class="p">[{</span><span class="nx">count</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">mult</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">delay</span><span class="o">:</span><span class="mi">250</span><span class="p">},{</span><span class="nx">count</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">mult</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">delay</span><span class="o">:</span><span class="mi">100</span><span class="p">},{</span><span class="nx">count</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">mult</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">delay</span><span class="o">:</span><span class="mi">50</span><span class="p">}]}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">increment</span><span class="o">==</span><span class="s2">"fast"</span><span class="p">){</span><span class="nx">C</span><span class="p">.</span><span class="nx">increment</span><span class="o">=</span><span class="p">[{</span><span class="nx">count</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">mult</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">delay</span><span class="o">:</span><span class="mi">250</span><span class="p">},{</span><span class="nx">count</span><span class="o">:</span><span class="mi">19</span><span class="p">,</span><span class="nx">mult</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">delay</span><span class="o">:</span><span class="mi">100</span><span class="p">},{</span><span class="nx">count</span><span class="o">:</span><span class="mi">80</span><span class="p">,</span><span class="nx">mult</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">delay</span><span class="o">:</span><span class="mi">20</span><span class="p">},{</span><span class="nx">count</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">mult</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">delay</span><span class="o">:</span><span class="mi">20</span><span class="p">},{</span><span class="nx">count</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">mult</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">delay</span><span class="o">:</span><span class="mi">20</span><span class="p">}]}}</span><span class="k">if</span><span class="p">((</span><span class="nx">w</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="nx">z</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"min"</span><span class="p">))</span><span class="o">!==</span><span class="kc">null</span><span class="p">)){</span><span class="nx">w</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">z</span><span class="p">)}</span><span class="k">if</span><span class="p">((</span><span class="nx">x</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="nx">z</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"max"</span><span class="p">))</span><span class="o">!==</span><span class="kc">null</span><span class="p">)){</span><span class="nx">x</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">z</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="nx">z</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"step"</span><span class="p">))</span><span class="o">!==</span><span class="kc">null</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="o">!=</span><span class="s2">"any"</span><span class="p">){</span><span class="nx">v</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">z</span><span class="p">);</span><span class="nx">C</span><span class="p">.</span><span class="nx">largeStep</span><span class="o">*=</span><span class="nx">v</span><span class="p">}}</span><span class="nx">C</span><span class="p">.</span><span class="nx">step</span><span class="o">=</span><span class="nx">v</span><span class="o">=</span><span class="nx">v</span><span class="o">||</span><span class="nx">C</span><span class="p">.</span><span class="nx">defaultStep</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">t</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="nx">z</span><span class="o">=</span><span class="nx">v</span><span class="o">+</span><span class="s2">""</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">"."</span><span class="p">)</span><span class="o">!=-</span><span class="mi">1</span><span class="p">)){</span><span class="nx">t</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">z</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">"."</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="nx">B</span><span class="p">.</span><span class="nx">places</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">x</span><span class="o">!==</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">w</span><span class="o">!==</span><span class="kc">null</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="o">&gt;</span><span class="nx">x</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="nx">x</span><span class="p">}</span><span class="nx">u</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">y</span><span class="p">).</span><span class="nx">length</span><span class="p">),</span><span class="nx">C</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">y</span><span class="p">).</span><span class="nx">length</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="nx">B</span><span class="p">.</span><span class="nx">inputMaxLength</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">maxLength</span><span class="p">}</span><span class="nx">z</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">inputMaxLength</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">u</span><span class="o">=</span><span class="nx">u</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span><span class="o">:</span><span class="nx">z</span><span class="p">;</span><span class="nx">z</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">x</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">z</span><span class="p">)){</span><span class="nx">x</span><span class="o">=</span><span class="nx">z</span><span class="p">}</span><span class="nx">z</span><span class="o">=-</span><span class="p">(</span><span class="nx">z</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">w</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">w</span><span class="o">&lt;</span><span class="nx">z</span><span class="p">)){</span><span class="nx">w</span><span class="o">=</span><span class="nx">z</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">"maxlength"</span><span class="p">,</span><span class="nx">u</span><span class="p">)}</span><span class="nx">C</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">w</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">_change</span><span class="p">();</span><span class="nx">y</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">o</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">mouseWheel</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="nx">B</span><span class="p">.</span><span class="nx">_mouseWheel</span><span class="p">)}},</span><span class="nx">_mouseWheel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">"spinner"</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">disabled</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">focused</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">t</span><span class="p">)){</span><span class="nx">t</span><span class="p">.</span><span class="nx">_change</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">_doSpin</span><span class="p">(((</span><span class="nx">u</span><span class="p">.</span><span class="nx">wheelDelta</span><span class="o">||-</span><span class="nx">u</span><span class="p">.</span><span class="nx">detail</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">t</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">);</span><span class="k">return</span> <span class="kc">false</span><span class="p">}},</span><span class="nx">_setTimer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">_spin</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">x</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">_stopSpin</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">timer</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="nx">v</span><span class="p">)},</span><span class="nx">_stopSpin</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="p">){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="o">=</span><span class="mi">0</span><span class="p">}},</span><span class="nx">_startSpin</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">increment</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">_change</span><span class="p">();</span><span class="nx">u</span><span class="p">.</span><span class="nx">_doSpin</span><span class="p">(</span><span class="nx">w</span><span class="o">*</span><span class="p">(</span><span class="nx">x</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">largeStep</span><span class="o">:</span><span class="nx">u</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">u</span><span class="p">.</span><span class="nx">counter</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">incCounter</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">_setTimer</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">delay</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">x</span><span class="p">)}},</span><span class="nx">_spin</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">w</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">increment</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">u</span><span class="p">.</span><span class="nx">incCounter</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_trigger</span><span class="p">(</span><span class="s2">"beforeSpin"</span><span class="p">,</span><span class="nx">event</span><span class="p">,{</span><span class="nx">item</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">selectedItem</span><span class="p">});</span><span class="nx">u</span><span class="p">.</span><span class="nx">_doSpin</span><span class="p">(</span><span class="nx">v</span><span class="o">*</span><span class="nx">x</span><span class="p">.</span><span class="nx">mult</span><span class="o">*</span><span class="p">(</span><span class="nx">w</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">largeStep</span><span class="o">:</span><span class="nx">u</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">));</span><span class="nx">u</span><span class="p">.</span><span class="nx">counter</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_trigger</span><span class="p">(</span><span class="s2">"afterSpin"</span><span class="p">,</span><span class="nx">event</span><span class="p">,{</span><span class="nx">item</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">selectedItem</span><span class="p">});</span><span class="k">if</span><span class="p">((</span><span class="nx">u</span><span class="p">.</span><span class="nx">counter</span><span class="o">&gt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">count</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">incCounter</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)){</span><span class="nx">u</span><span class="p">.</span><span class="nx">counter</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">x</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="o">++</span><span class="nx">u</span><span class="p">.</span><span class="nx">incCounter</span><span class="p">];</span><span class="nx">u</span><span class="p">.</span><span class="nx">_setTimer</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">delay</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">w</span><span class="p">)}},</span><span class="nx">_doSpin</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">curvalue</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="o">===</span><span class="kc">null</span><span class="p">){</span><span class="nx">v</span><span class="o">=</span><span class="p">(</span><span class="nx">u</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="nx">t</span><span class="p">.</span><span class="nx">_setValue</span><span class="p">(</span><span class="nx">v</span><span class="o">+</span><span class="nx">u</span><span class="p">)},</span><span class="nx">_parseValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span> <span class="nx">t</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">_validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">w</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">max</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">w</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">u</span><span class="p">.</span><span class="nx">allowNull</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">curvalue</span><span class="o">!==</span><span class="kc">null</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">curvalue</span><span class="o">:</span><span class="nx">v</span><span class="o">||</span><span class="nx">t</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">((</span><span class="nx">t</span><span class="o">!==</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">w</span><span class="o">&gt;</span><span class="nx">t</span><span class="p">)){</span><span class="k">return</span> <span class="nx">t</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">((</span><span class="nx">v</span><span class="o">!==</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">w</span><span class="o">&lt;</span><span class="nx">v</span><span class="p">)){</span><span class="k">return</span> <span class="nx">v</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">w</span><span class="p">}}},</span><span class="nx">_change</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">_parseValue</span><span class="p">(),</span><span class="nx">v</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">max</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">u</span><span class="p">.</span><span class="nx">selfChange</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">w</span><span class="p">)){</span><span class="nx">w</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">curvalue</span><span class="p">}</span><span class="nx">u</span><span class="p">.</span><span class="nx">_setValue</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="kc">true</span><span class="p">)}},</span><span class="nx">_setOption</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">Widget</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_setOption</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_procOptions</span><span class="p">()},</span><span class="nx">increment</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_doSpin</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">)},</span><span class="nx">decrement</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_doSpin</span><span class="p">(</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">)},</span><span class="nx">showButtons</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">btnContainer</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">"opacity"</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">t</span><span class="p">.</span><span class="nx">fadeTo</span><span class="p">(</span><span class="s2">"fast"</span><span class="p">,</span><span class="mi">1</span><span class="p">)}},</span><span class="nx">hideButtons</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">btnContainer</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">"opacity"</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">t</span><span class="p">.</span><span class="nx">fadeTo</span><span class="p">(</span><span class="s2">"fast"</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">buttons</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">s</span><span class="p">)},</span><span class="nx">_setValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">curvalue</span><span class="o">=</span><span class="nx">v</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">_validate</span><span class="p">(</span><span class="nx">v</span><span class="p">);</span><span class="nx">u</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">v</span><span class="o">!==</span><span class="kc">null</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">places</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">element</span><span class="p">)</span><span class="o">:</span><span class="s2">""</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">){</span><span class="nx">u</span><span class="p">.</span><span class="nx">selfChange</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">change</span><span class="p">();</span><span class="nx">u</span><span class="p">.</span><span class="nx">selfChange</span><span class="o">=</span><span class="kc">false</span><span class="p">}},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_setValue</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">curvalue</span><span class="p">},</span><span class="nx">enable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">buttons</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">disabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">Widget</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enable</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">disable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">buttons</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">disabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">Widget</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disable</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapper</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">oWidth</span><span class="p">,</span><span class="nx">marginRight</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">oMargin</span><span class="p">});</span><span class="nx">g</span><span class="p">.</span><span class="nx">Widget</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">destroy</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)}})})(</span><span class="nx">jQuery</span><span class="p">);</span></div></pre></div>
              
            
          </td>
        </tr>
      </table>
    
  </div>


          </div>
        </div>
      </div>
    </div>
  

  </div>



<div class="frame frame-loading" style="display:none;">
  <img src="/images/modules/ajax/big_spinner_336699.gif">
</div>
    </div>
  
      
    </div>

    <div id="footer" class="clearfix">
      <div class="site">
        <div class="sponsor">
          <a href="http://www.rackspace.com" class="logo">
            <img alt="Dedicated Server" src="https://assets0.github.com/images/modules/footer/rackspace_logo.png?v2?9be3b31760b2ed1e0983740b292778ab7067fa37" />
          </a>
          Powered by the <a href="http://www.rackspace.com ">Dedicated
          Servers</a> and<br/> <a href="http://www.rackspacecloud.com">Cloud
          Computing</a> of Rackspace Hosting<span>&reg;</span>
        </div>

        <ul class="links">
          <li class="blog"><a href="https://github.com/blog">Blog</a></li>
          <li><a href="http://support.github.com">Support</a></li>
          <li><a href="https://github.com/training">Training</a></li>
          <li><a href="http://jobs.github.com">Job Board</a></li>
          <li><a href="http://shop.github.com">Shop</a></li>
          <li><a href="https://github.com/contact">Contact</a></li>
          <li><a href="http://develop.github.com">API</a></li>
          <li><a href="http://status.github.com">Status</a></li>
        </ul>
        <ul class="sosueme">
          <li class="main">&copy; 2010 <span id="_rrt" title="0.24455s from fe5.rs.github.com">GitHub</span> Inc. All rights reserved.</li>
          <li><a href="/site/terms">Terms of Service</a></li>
          <li><a href="/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
        </ul>
      </div>
    </div><!-- /#footer -->

    
      
      
        <!-- current locale:  -->
        <div class="locales">
          <div class="site">

            <ul class="choices clearfix limited-locales">
              <li><span class="current">English</span></li>
              
                  <li><a rel="nofollow" href="?locale=de">Deutsch</a></li>
              
                  <li><a rel="nofollow" href="?locale=fr">Français</a></li>
              
                  <li><a rel="nofollow" href="?locale=ja">日本語</a></li>
              
                  <li><a rel="nofollow" href="?locale=pt-BR">Português (BR)</a></li>
              
                  <li><a rel="nofollow" href="?locale=ru">Русский</a></li>
              
                  <li><a rel="nofollow" href="?locale=zh">中文</a></li>
              
              <li class="all"><a href="#" class="minibutton btn-forward js-all-locales"><span><span class="icon"></span>See all available languages</span></a></li>
            </ul>

            <div class="all-locales clearfix">
              <h3>Your current locale selection: <strong>English</strong>. Choose another?</h3>
              
              
                <ul class="choices">
                  
                      <li><a rel="nofollow" href="?locale=en">English</a></li>
                  
                      <li><a rel="nofollow" href="?locale=af">Afrikaans</a></li>
                  
                      <li><a rel="nofollow" href="?locale=ca">Català</a></li>
                  
                      <li><a rel="nofollow" href="?locale=cs">Čeština</a></li>
                  
                </ul>
              
                <ul class="choices">
                  
                      <li><a rel="nofollow" href="?locale=de">Deutsch</a></li>
                  
                      <li><a rel="nofollow" href="?locale=es">Español</a></li>
                  
                      <li><a rel="nofollow" href="?locale=fr">Français</a></li>
                  
                      <li><a rel="nofollow" href="?locale=hr">Hrvatski</a></li>
                  
                </ul>
              
                <ul class="choices">
                  
                      <li><a rel="nofollow" href="?locale=id">Indonesia</a></li>
                  
                      <li><a rel="nofollow" href="?locale=it">Italiano</a></li>
                  
                      <li><a rel="nofollow" href="?locale=ja">日本語</a></li>
                  
                      <li><a rel="nofollow" href="?locale=nl">Nederlands</a></li>
                  
                </ul>
              
                <ul class="choices">
                  
                      <li><a rel="nofollow" href="?locale=no">Norsk</a></li>
                  
                      <li><a rel="nofollow" href="?locale=pl">Polski</a></li>
                  
                      <li><a rel="nofollow" href="?locale=pt-BR">Português (BR)</a></li>
                  
                      <li><a rel="nofollow" href="?locale=ru">Русский</a></li>
                  
                </ul>
              
                <ul class="choices">
                  
                      <li><a rel="nofollow" href="?locale=sr">Српски</a></li>
                  
                      <li><a rel="nofollow" href="?locale=sv">Svenska</a></li>
                  
                      <li><a rel="nofollow" href="?locale=zh">中文</a></li>
                  
                </ul>
              
            </div>

          </div>
          <div class="fade"></div>
        </div>
      
    

    <script>window._auth_token = "903cd3f12456cec0471063e3849c204f69c26bef"</script>
    <div id="keyboard_shortcuts_pane" style="display:none">
  <h2>Keyboard Shortcuts</h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->
    <div class="column middle">
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selected down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selected up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>t</dt>
        <dd>Open tree</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>p</dt>
        <dd>Open parent</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
    </div><!-- /.column.first -->
    <div class="column last">
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selected down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selected up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
    </div><!-- /.columns.last -->
  </div><!-- /.columns.equacols -->

  <div class="rule"></div>

  <h3>Issues</h3>

  <div class="columns threecols">
    <div class="column first">
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selected down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selected up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>x</dt>
        <dd>Toggle select target</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
    </div><!-- /.column.first -->
    <div class="column middle">
      <dl class="keyboard-mappings">
        <dt>I</dt>
        <dd>Mark selected as read</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>U</dt>
        <dd>Mark selected as unread</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>e</dt>
        <dd>Close selected</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Remove selected from view</dd>
      </dl>
    </div><!-- /.column.middle -->
    <div class="column last">
      <dl class="keyboard-mappings">
        <dt>c</dt>
        <dd>Create issue</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>l</dt>
        <dd>Create label</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>i</dt>
        <dd>Back to inbox</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>u</dt>
        <dd>Back to issues</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>/</dt>
        <dd>Focus issues search</dd>
      </dl>
    </div>
  </div>

  <div class="rule"></div>

  <h3>Network Graph</h3>
  <div class="columns equacols">
    <div class="column first">
      <dl class="keyboard-mappings">
        <dt>← <em>or</em> h</dt>
        <dd>Scroll left</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>→ <em>or</em> l</dt>
        <dd>Scroll right</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>↑ <em>or</em> k</dt>
        <dd>Scroll up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>↓ <em>or</em> j</dt>
        <dd>Scroll down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>t</dt>
        <dd>Toggle visibility of head labels</dd>
      </dl>
    </div><!-- /.column.first -->
    <div class="column last">
      <dl class="keyboard-mappings">
        <dt>shift ← <em>or</em> shift h</dt>
        <dd>Scroll all the way left</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>shift → <em>or</em> shift l</dt>
        <dd>Scroll all the way right</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>shift ↑ <em>or</em> shift k</dt>
        <dd>Scroll all the way up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>shift ↓ <em>or</em> shift j</dt>
        <dd>Scroll all the way down</dd>
      </dl>
    </div><!-- /.column.last -->
  </div>

</div>
    

    <!--[if IE 8]>
    <script type="text/javascript" charset="utf-8">
      $(document.body).addClass("ie8")
    </script>
    <![endif]-->

    <!--[if IE 7]>
    <script type="text/javascript" charset="utf-8">
      $(document.body).addClass("ie7")
    </script>
    <![endif]-->

    <script type="text/javascript">
      _kmq.push(['trackClick', 'entice-signup-button', 'Entice banner clicked']);
      
    </script>
    
  </body>
</html>

