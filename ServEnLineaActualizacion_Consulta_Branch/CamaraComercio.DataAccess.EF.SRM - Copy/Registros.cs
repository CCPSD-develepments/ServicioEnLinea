//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.SRM
{
    public partial class Registros
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    		public static string RegistroId = @"RegistroId";
    public static string FechaEmision = @"FechaEmision";
    public static string FechaVencimiento = @"FechaVencimiento";
    public static string NombreEstablecimiento = @"NombreEstablecimiento";
    public static string CapitalSocial = @"CapitalSocial";
    public static string TipoMonedaCapitalSocial = @"TipoMonedaCapitalSocial";
    public static string CapitalAutorizado = @"CapitalAutorizado";
    public static string TipoMonedaCapitalAutorizado = @"TipoMonedaCapitalAutorizado";
    public static string CapitalPagado = @"CapitalPagado";
    public static string TipoMonedaCapitalPagado = @"TipoMonedaCapitalPagado";
    public static string Activos = @"Activos";
    public static string TipoMonedaActivos = @"TipoMonedaActivos";
    public static string BienesRaices = @"BienesRaices";
    public static string TipoMonedaBienesRaices = @"TipoMonedaBienesRaices";
    public static string FechaInicioOperacion = @"FechaInicioOperacion";
    public static string EmpleadosMasculinos = @"EmpleadosMasculinos";
    public static string EmpleadosFemeninos = @"EmpleadosFemeninos";
    public static string EmpleadosTotal = @"EmpleadosTotal";
    public static string DireccionId = @"DireccionId";
    public static string NombreComercial = @"NombreComercial";
    public static string RegistroNombreComercial = @"RegistroNombreComercial";
    public static string MarcaFabrica = @"MarcaFabrica";
    public static string RegistroMarcaFabrica = @"RegistroMarcaFabrica";
    public static string PatenteInversion = @"PatenteInversion";
    public static string RegistroPatenteInversion = @"RegistroPatenteInversion";
    public static string EsProvicional = @"EsProvicional";
    public static string Comentario1 = @"Comentario1";
    public static string Comentario2 = @"Comentario2";
    public static string NombreOperador = @"NombreOperador";
    public static string NombreSociedad = @"NombreSociedad";
    public static string TipoRegistro = @"TipoRegistro";
    public static string Estado = @"Estado";
    public static string ActividadNegocio = @"ActividadNegocio";
    public static string NumeroSocios = @"NumeroSocios";
    public static string TotalAcciones = @"TotalAcciones";
    public static string EsSocioInterno = @"EsSocioInterno";
    public static string TipoSocioInterno = @"TipoSocioInterno";
    public static string FechaCreacion = @"FechaCreacion";
    public static string FechaModificacion = @"FechaModificacion";
    public static string MonedaActivos = @"MonedaActivos";
    public static string MonedaBienesRaices = @"MonedaBienesRaices";
    public static string MonedaCapitalAutorizado = @"MonedaCapitalAutorizado";
    public static string MonedaCapitalPagado = @"MonedaCapitalPagado";
    public static string MonedaCapitalSocial = @"MonedaCapitalSocial";
    public static string SocioValido = @"SocioValido";
    public static string ActividadIdCIUU = @"ActividadIdCIUU";
    public static string ActividadNegocioOld = @"ActividadNegocioOld";
    public static string bActividadCIUU = @"bActividadCIUU";
    public static string isRncValido = @"isRncValido";
    public static string bActoAlguacil = @"bActoAlguacil";
    public static string ActividadCIUU = @"ActividadCIUU";
    public static string ActividadIdCIUU2 = @"ActividadIdCIUU2";
    public static string ActividadCIUU2 = @"ActividadCIUU2";
    public static string Id_Cierre_Fiscal = @"Id_Cierre_Fiscal";
    public static string FechaAsamblea1 = @"FechaAsamblea1";
    public static string FechaAsamblea2 = @"FechaAsamblea2";
    public static string NombreComercial2 = @"NombreComercial2";
    public static string RegistroNombreComercial2 = @"RegistroNombreComercial2";
    public static string bCertificadoNuevo = @"bCertificadoNuevo";
    public static string TotalAccionesDecimal = @"TotalAccionesDecimal";
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int RegistroId
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaEmision
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaVencimiento
        {
            get;
            set;
        }
    
        public virtual string NombreEstablecimiento
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> CapitalSocial
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TipoMonedaCapitalSocial
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> CapitalAutorizado
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TipoMonedaCapitalAutorizado
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> CapitalPagado
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TipoMonedaCapitalPagado
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Activos
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TipoMonedaActivos
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> BienesRaices
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TipoMonedaBienesRaices
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaInicioOperacion
        {
            get;
            set;
        }
    
        public virtual Nullable<int> EmpleadosMasculinos
        {
            get;
            set;
        }
    
        public virtual Nullable<int> EmpleadosFemeninos
        {
            get;
            set;
        }
    
        public virtual Nullable<int> EmpleadosTotal
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DireccionId
        {
            get { return _direccionId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_direccionId != value)
                    {
                        if (Direcciones != null && Direcciones.DireccionId != value)
                        {
                            Direcciones = null;
                        }
                        _direccionId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _direccionId;
    
        public virtual string NombreComercial
        {
            get;
            set;
        }
    
        public virtual string RegistroNombreComercial
        {
            get;
            set;
        }
    
        public virtual string MarcaFabrica
        {
            get;
            set;
        }
    
        public virtual string RegistroMarcaFabrica
        {
            get;
            set;
        }
    
        public virtual string PatenteInversion
        {
            get;
            set;
        }
    
        public virtual string RegistroPatenteInversion
        {
            get;
            set;
        }
    
        public virtual bool EsProvicional
        {
            get;
            set;
        }
    
        public virtual string Comentario1
        {
            get;
            set;
        }
    
        public virtual string Comentario2
        {
            get;
            set;
        }
    
        public virtual string NombreOperador
        {
            get;
            set;
        }
    
        public virtual string NombreSociedad
        {
            get;
            set;
        }
    
        public virtual string TipoRegistro
        {
            get;
            set;
        }
    
        public virtual string Estado
        {
            get;
            set;
        }
    
        public virtual string ActividadNegocio
        {
            get;
            set;
        }
    
        public virtual Nullable<int> NumeroSocios
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TotalAcciones
        {
            get;
            set;
        }
    
        public virtual bool EsSocioInterno
        {
            get;
            set;
        }
    
        public virtual string TipoSocioInterno
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaCreacion
        {
            get;
            set;
        }
    
        public virtual System.DateTime FechaModificacion
        {
            get;
            set;
        }
    
        public virtual System.Guid rowguid
        {
            get;
            set;
        }
    
        public virtual string MonedaActivos
        {
            get;
            set;
        }
    
        public virtual string MonedaBienesRaices
        {
            get;
            set;
        }
    
        public virtual string MonedaCapitalAutorizado
        {
            get;
            set;
        }
    
        public virtual string MonedaCapitalPagado
        {
            get;
            set;
        }
    
        public virtual string MonedaCapitalSocial
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> SocioValido
        {
            get;
            set;
        }
    
        public virtual string ActividadIdCIUU
        {
            get;
            set;
        }
    
        public virtual string ActividadNegocioOld
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> bActividadCIUU
        {
            get;
            set;
        }
    
        public virtual bool isRncValido
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> bActoAlguacil
        {
            get;
            set;
        }
    
        public virtual string ActividadCIUU
        {
            get;
            set;
        }
    
        public virtual string ActividadIdCIUU2
        {
            get;
            set;
        }
    
        public virtual string ActividadCIUU2
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Id_Cierre_Fiscal
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaAsamblea1
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FechaAsamblea2
        {
            get;
            set;
        }
    
        public virtual string NombreComercial2
        {
            get;
            set;
        }
    
        public virtual string RegistroNombreComercial2
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> bCertificadoNuevo
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> TotalAccionesDecimal
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<HistoricosDocumentos> HistoricosDocumentos
        {
            get
            {
                if (_historicosDocumentos == null)
                {
                    var newCollection = new FixupCollection<HistoricosDocumentos>();
                    newCollection.CollectionChanged += FixupHistoricosDocumentos;
                    _historicosDocumentos = newCollection;
                }
                return _historicosDocumentos;
            }
            set
            {
                if (!ReferenceEquals(_historicosDocumentos, value))
                {
                    var previousValue = _historicosDocumentos as FixupCollection<HistoricosDocumentos>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupHistoricosDocumentos;
                    }
                    _historicosDocumentos = value;
                    var newValue = value as FixupCollection<HistoricosDocumentos>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupHistoricosDocumentos;
                    }
                }
            }
        }
        private ICollection<HistoricosDocumentos> _historicosDocumentos;
    
        public virtual Direcciones Direcciones
        {
            get { return _direcciones; }
            set
            {
                if (!ReferenceEquals(_direcciones, value))
                {
                    var previousValue = _direcciones;
                    _direcciones = value;
                    FixupDirecciones(previousValue);
                }
            }
        }
        private Direcciones _direcciones;
    
        public virtual ICollection<PersonasRegistros> PersonasRegistros
        {
            get
            {
                if (_personasRegistros == null)
                {
                    var newCollection = new FixupCollection<PersonasRegistros>();
                    newCollection.CollectionChanged += FixupPersonasRegistros;
                    _personasRegistros = newCollection;
                }
                return _personasRegistros;
            }
            set
            {
                if (!ReferenceEquals(_personasRegistros, value))
                {
                    var previousValue = _personasRegistros as FixupCollection<PersonasRegistros>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPersonasRegistros;
                    }
                    _personasRegistros = value;
                    var newValue = value as FixupCollection<PersonasRegistros>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPersonasRegistros;
                    }
                }
            }
        }
        private ICollection<PersonasRegistros> _personasRegistros;
    
        public virtual ICollection<Productos> Productos
        {
            get
            {
                if (_productos == null)
                {
                    var newCollection = new FixupCollection<Productos>();
                    newCollection.CollectionChanged += FixupProductos;
                    _productos = newCollection;
                }
                return _productos;
            }
            set
            {
                if (!ReferenceEquals(_productos, value))
                {
                    var previousValue = _productos as FixupCollection<Productos>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupProductos;
                    }
                    _productos = value;
                    var newValue = value as FixupCollection<Productos>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupProductos;
                    }
                }
            }
        }
        private ICollection<Productos> _productos;
    
        public virtual ICollection<ReferenciasBancarias> ReferenciasBancarias
        {
            get
            {
                if (_referenciasBancarias == null)
                {
                    var newCollection = new FixupCollection<ReferenciasBancarias>();
                    newCollection.CollectionChanged += FixupReferenciasBancarias;
                    _referenciasBancarias = newCollection;
                }
                return _referenciasBancarias;
            }
            set
            {
                if (!ReferenceEquals(_referenciasBancarias, value))
                {
                    var previousValue = _referenciasBancarias as FixupCollection<ReferenciasBancarias>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupReferenciasBancarias;
                    }
                    _referenciasBancarias = value;
                    var newValue = value as FixupCollection<ReferenciasBancarias>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupReferenciasBancarias;
                    }
                }
            }
        }
        private ICollection<ReferenciasBancarias> _referenciasBancarias;
    
        public virtual ICollection<ReferenciasComerciales> ReferenciasComerciales
        {
            get
            {
                if (_referenciasComerciales == null)
                {
                    var newCollection = new FixupCollection<ReferenciasComerciales>();
                    newCollection.CollectionChanged += FixupReferenciasComerciales;
                    _referenciasComerciales = newCollection;
                }
                return _referenciasComerciales;
            }
            set
            {
                if (!ReferenceEquals(_referenciasComerciales, value))
                {
                    var previousValue = _referenciasComerciales as FixupCollection<ReferenciasComerciales>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupReferenciasComerciales;
                    }
                    _referenciasComerciales = value;
                    var newValue = value as FixupCollection<ReferenciasComerciales>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupReferenciasComerciales;
                    }
                }
            }
        }
        private ICollection<ReferenciasComerciales> _referenciasComerciales;
    
        public virtual ICollection<RegistrosActividades> RegistrosActividades
        {
            get
            {
                if (_registrosActividades == null)
                {
                    var newCollection = new FixupCollection<RegistrosActividades>();
                    newCollection.CollectionChanged += FixupRegistrosActividades;
                    _registrosActividades = newCollection;
                }
                return _registrosActividades;
            }
            set
            {
                if (!ReferenceEquals(_registrosActividades, value))
                {
                    var previousValue = _registrosActividades as FixupCollection<RegistrosActividades>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRegistrosActividades;
                    }
                    _registrosActividades = value;
                    var newValue = value as FixupCollection<RegistrosActividades>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRegistrosActividades;
                    }
                }
            }
        }
        private ICollection<RegistrosActividades> _registrosActividades;
    
        public virtual ICollection<RegistrosActividadesEspecificas> RegistrosActividadesEspecificas
        {
            get
            {
                if (_registrosActividadesEspecificas == null)
                {
                    var newCollection = new FixupCollection<RegistrosActividadesEspecificas>();
                    newCollection.CollectionChanged += FixupRegistrosActividadesEspecificas;
                    _registrosActividadesEspecificas = newCollection;
                }
                return _registrosActividadesEspecificas;
            }
            set
            {
                if (!ReferenceEquals(_registrosActividadesEspecificas, value))
                {
                    var previousValue = _registrosActividadesEspecificas as FixupCollection<RegistrosActividadesEspecificas>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRegistrosActividadesEspecificas;
                    }
                    _registrosActividadesEspecificas = value;
                    var newValue = value as FixupCollection<RegistrosActividadesEspecificas>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRegistrosActividadesEspecificas;
                    }
                }
            }
        }
        private ICollection<RegistrosActividadesEspecificas> _registrosActividadesEspecificas;
    
        public virtual ICollection<RegistrosOposiciones> RegistrosOposiciones
        {
            get
            {
                if (_registrosOposiciones == null)
                {
                    var newCollection = new FixupCollection<RegistrosOposiciones>();
                    newCollection.CollectionChanged += FixupRegistrosOposiciones;
                    _registrosOposiciones = newCollection;
                }
                return _registrosOposiciones;
            }
            set
            {
                if (!ReferenceEquals(_registrosOposiciones, value))
                {
                    var previousValue = _registrosOposiciones as FixupCollection<RegistrosOposiciones>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRegistrosOposiciones;
                    }
                    _registrosOposiciones = value;
                    var newValue = value as FixupCollection<RegistrosOposiciones>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRegistrosOposiciones;
                    }
                }
            }
        }
        private ICollection<RegistrosOposiciones> _registrosOposiciones;
    
        public virtual ICollection<SociedadesRegistros> SociedadesRegistros
        {
            get
            {
                if (_sociedadesRegistros == null)
                {
                    var newCollection = new FixupCollection<SociedadesRegistros>();
                    newCollection.CollectionChanged += FixupSociedadesRegistros;
                    _sociedadesRegistros = newCollection;
                }
                return _sociedadesRegistros;
            }
            set
            {
                if (!ReferenceEquals(_sociedadesRegistros, value))
                {
                    var previousValue = _sociedadesRegistros as FixupCollection<SociedadesRegistros>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSociedadesRegistros;
                    }
                    _sociedadesRegistros = value;
                    var newValue = value as FixupCollection<SociedadesRegistros>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSociedadesRegistros;
                    }
                }
            }
        }
        private ICollection<SociedadesRegistros> _sociedadesRegistros;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupDirecciones(Direcciones previousValue)
        {
            if (previousValue != null && previousValue.Registros.Contains(this))
            {
                previousValue.Registros.Remove(this);
            }
    
            if (Direcciones != null)
            {
                if (!Direcciones.Registros.Contains(this))
                {
                    Direcciones.Registros.Add(this);
                }
                if (DireccionId != Direcciones.DireccionId)
                {
                    DireccionId = Direcciones.DireccionId;
                }
            }
            else if (!_settingFK)
            {
                DireccionId = null;
            }
        }
    
        private void FixupHistoricosDocumentos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (HistoricosDocumentos item in e.NewItems)
                {
                    item.Registros = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (HistoricosDocumentos item in e.OldItems)
                {
                    if (ReferenceEquals(item.Registros, this))
                    {
                        item.Registros = null;
                    }
                }
            }
        }
    
        private void FixupPersonasRegistros(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PersonasRegistros item in e.NewItems)
                {
                    item.Registros = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersonasRegistros item in e.OldItems)
                {
                    if (ReferenceEquals(item.Registros, this))
                    {
                        item.Registros = null;
                    }
                }
            }
        }
    
        private void FixupProductos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Productos item in e.NewItems)
                {
                    item.Registros = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Productos item in e.OldItems)
                {
                    if (ReferenceEquals(item.Registros, this))
                    {
                        item.Registros = null;
                    }
                }
            }
        }
    
        private void FixupReferenciasBancarias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ReferenciasBancarias item in e.NewItems)
                {
                    item.Registros = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReferenciasBancarias item in e.OldItems)
                {
                    if (ReferenceEquals(item.Registros, this))
                    {
                        item.Registros = null;
                    }
                }
            }
        }
    
        private void FixupReferenciasComerciales(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ReferenciasComerciales item in e.NewItems)
                {
                    item.Registros = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReferenciasComerciales item in e.OldItems)
                {
                    if (ReferenceEquals(item.Registros, this))
                    {
                        item.Registros = null;
                    }
                }
            }
        }
    
        private void FixupRegistrosActividades(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RegistrosActividades item in e.NewItems)
                {
                    item.Registros = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RegistrosActividades item in e.OldItems)
                {
                    if (ReferenceEquals(item.Registros, this))
                    {
                        item.Registros = null;
                    }
                }
            }
        }
    
        private void FixupRegistrosActividadesEspecificas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RegistrosActividadesEspecificas item in e.NewItems)
                {
                    item.Registros = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RegistrosActividadesEspecificas item in e.OldItems)
                {
                    if (ReferenceEquals(item.Registros, this))
                    {
                        item.Registros = null;
                    }
                }
            }
        }
    
        private void FixupRegistrosOposiciones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (RegistrosOposiciones item in e.NewItems)
                {
                    item.Registros = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RegistrosOposiciones item in e.OldItems)
                {
                    if (ReferenceEquals(item.Registros, this))
                    {
                        item.Registros = null;
                    }
                }
            }
        }
    
        private void FixupSociedadesRegistros(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SociedadesRegistros item in e.NewItems)
                {
                    item.Registros = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SociedadesRegistros item in e.OldItems)
                {
                    if (ReferenceEquals(item.Registros, this))
                    {
                        item.Registros = null;
                    }
                }
            }
        }

        #endregion

    }
}
