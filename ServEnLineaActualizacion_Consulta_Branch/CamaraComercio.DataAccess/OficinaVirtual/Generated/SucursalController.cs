using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.OficinaVirtual
{
    /// <summary>
    /// Controller class for Sucursales
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SucursalController
    {
        // Preload our schema..
        Sucursal thisSchemaLoad = new Sucursal();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SucursalCollection FetchAll()
        {
            SucursalCollection coll = new SucursalCollection();
            Query qry = new Query(Sucursal.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SucursalCollection FetchByID(object SucursalId)
        {
            SucursalCollection coll = new SucursalCollection().Where("SucursalId", SucursalId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SucursalCollection FetchByQuery(Query qry)
        {
            SucursalCollection coll = new SucursalCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object SucursalId)
        {
            return (Sucursal.Delete(SucursalId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object SucursalId)
        {
            return (Sucursal.Destroy(SucursalId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int SociedadId,string Descripcion,int? DireccionId,DateTime FechaModificacion,string DireccionCalle,string DireccionNumero,int? DireccionCiudadId,int? DireccionSectorId,string DireccionApartadoPostal,string DireccionTelefonoCasa,string DireccionTelefonoOficina,int? DireccionExtension,string DireccionFax)
	    {
		    Sucursal item = new Sucursal();
		    
            item.SociedadId = SociedadId;
            
            item.Descripcion = Descripcion;
            
            item.DireccionId = DireccionId;
            
            item.FechaModificacion = FechaModificacion;
            
            item.DireccionCalle = DireccionCalle;
            
            item.DireccionNumero = DireccionNumero;
            
            item.DireccionCiudadId = DireccionCiudadId;
            
            item.DireccionSectorId = DireccionSectorId;
            
            item.DireccionApartadoPostal = DireccionApartadoPostal;
            
            item.DireccionTelefonoCasa = DireccionTelefonoCasa;
            
            item.DireccionTelefonoOficina = DireccionTelefonoOficina;
            
            item.DireccionExtension = DireccionExtension;
            
            item.DireccionFax = DireccionFax;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int SucursalId,int SociedadId,string Descripcion,int? DireccionId,DateTime FechaModificacion,string DireccionCalle,string DireccionNumero,int? DireccionCiudadId,int? DireccionSectorId,string DireccionApartadoPostal,string DireccionTelefonoCasa,string DireccionTelefonoOficina,int? DireccionExtension,string DireccionFax)
	    {
		    Sucursal item = new Sucursal();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.SucursalId = SucursalId;
				
			item.SociedadId = SociedadId;
				
			item.Descripcion = Descripcion;
				
			item.DireccionId = DireccionId;
				
			item.FechaModificacion = FechaModificacion;
				
			item.DireccionCalle = DireccionCalle;
				
			item.DireccionNumero = DireccionNumero;
				
			item.DireccionCiudadId = DireccionCiudadId;
				
			item.DireccionSectorId = DireccionSectorId;
				
			item.DireccionApartadoPostal = DireccionApartadoPostal;
				
			item.DireccionTelefonoCasa = DireccionTelefonoCasa;
				
			item.DireccionTelefonoOficina = DireccionTelefonoOficina;
				
			item.DireccionExtension = DireccionExtension;
				
			item.DireccionFax = DireccionFax;
				
	        item.Save(UserName);
	    }
    }
}
