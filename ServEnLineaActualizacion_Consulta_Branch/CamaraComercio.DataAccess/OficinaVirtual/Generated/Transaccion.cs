using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.OficinaVirtual
{
	/// <summary>
	/// Strongly-typed collection for the Transaccion class.
	/// </summary>
    [Serializable]
	public partial class TransaccionCollection : ActiveList<Transaccion, TransaccionCollection>
	{	   
		public TransaccionCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TransaccionCollection</returns>
		public TransaccionCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Transaccion o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Transacciones table.
	/// </summary>
	[Serializable]
	public partial class Transaccion : ActiveRecord<Transaccion>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Transaccion()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Transaccion(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Transaccion(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Transaccion(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Transacciones", TableType.Table, DataService.GetInstance("OficinaVirtualProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"WebSRM";
				//columns
				
				TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
				colvarTransaccionId.ColumnName = "TransaccionId";
				colvarTransaccionId.DataType = DbType.Int32;
				colvarTransaccionId.MaxLength = 0;
				colvarTransaccionId.AutoIncrement = true;
				colvarTransaccionId.IsNullable = false;
				colvarTransaccionId.IsPrimaryKey = true;
				colvarTransaccionId.IsForeignKey = false;
				colvarTransaccionId.IsReadOnly = false;
				colvarTransaccionId.DefaultSetting = @"";
				colvarTransaccionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTransaccionId);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "Fecha";
				colvarFecha.DataType = DbType.DateTime;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = false;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				colvarFecha.DefaultSetting = @"";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarSolicitante = new TableSchema.TableColumn(schema);
				colvarSolicitante.ColumnName = "Solicitante";
				colvarSolicitante.DataType = DbType.AnsiString;
				colvarSolicitante.MaxLength = 255;
				colvarSolicitante.AutoIncrement = false;
				colvarSolicitante.IsNullable = true;
				colvarSolicitante.IsPrimaryKey = false;
				colvarSolicitante.IsForeignKey = false;
				colvarSolicitante.IsReadOnly = false;
				colvarSolicitante.DefaultSetting = @"";
				colvarSolicitante.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSolicitante);
				
				TableSchema.TableColumn colvarRNCSolicitante = new TableSchema.TableColumn(schema);
				colvarRNCSolicitante.ColumnName = "RNCSolicitante";
				colvarRNCSolicitante.DataType = DbType.AnsiString;
				colvarRNCSolicitante.MaxLength = 15;
				colvarRNCSolicitante.AutoIncrement = false;
				colvarRNCSolicitante.IsNullable = true;
				colvarRNCSolicitante.IsPrimaryKey = false;
				colvarRNCSolicitante.IsForeignKey = false;
				colvarRNCSolicitante.IsReadOnly = false;
				colvarRNCSolicitante.DefaultSetting = @"";
				colvarRNCSolicitante.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRNCSolicitante);
				
				TableSchema.TableColumn colvarNombreContacto = new TableSchema.TableColumn(schema);
				colvarNombreContacto.ColumnName = "NombreContacto";
				colvarNombreContacto.DataType = DbType.AnsiString;
				colvarNombreContacto.MaxLength = 255;
				colvarNombreContacto.AutoIncrement = false;
				colvarNombreContacto.IsNullable = true;
				colvarNombreContacto.IsPrimaryKey = false;
				colvarNombreContacto.IsForeignKey = false;
				colvarNombreContacto.IsReadOnly = false;
				colvarNombreContacto.DefaultSetting = @"";
				colvarNombreContacto.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreContacto);
				
				TableSchema.TableColumn colvarTelefonoContacto = new TableSchema.TableColumn(schema);
				colvarTelefonoContacto.ColumnName = "TelefonoContacto";
				colvarTelefonoContacto.DataType = DbType.AnsiString;
				colvarTelefonoContacto.MaxLength = 15;
				colvarTelefonoContacto.AutoIncrement = false;
				colvarTelefonoContacto.IsNullable = true;
				colvarTelefonoContacto.IsPrimaryKey = false;
				colvarTelefonoContacto.IsForeignKey = false;
				colvarTelefonoContacto.IsReadOnly = false;
				colvarTelefonoContacto.DefaultSetting = @"";
				colvarTelefonoContacto.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTelefonoContacto);
				
				TableSchema.TableColumn colvarFaxContacto = new TableSchema.TableColumn(schema);
				colvarFaxContacto.ColumnName = "FaxContacto";
				colvarFaxContacto.DataType = DbType.AnsiString;
				colvarFaxContacto.MaxLength = 15;
				colvarFaxContacto.AutoIncrement = false;
				colvarFaxContacto.IsNullable = true;
				colvarFaxContacto.IsPrimaryKey = false;
				colvarFaxContacto.IsForeignKey = false;
				colvarFaxContacto.IsReadOnly = false;
				colvarFaxContacto.DefaultSetting = @"";
				colvarFaxContacto.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFaxContacto);
				
				TableSchema.TableColumn colvarNoReciboDGII = new TableSchema.TableColumn(schema);
				colvarNoReciboDGII.ColumnName = "NoReciboDGII";
				colvarNoReciboDGII.DataType = DbType.AnsiString;
				colvarNoReciboDGII.MaxLength = 15;
				colvarNoReciboDGII.AutoIncrement = false;
				colvarNoReciboDGII.IsNullable = true;
				colvarNoReciboDGII.IsPrimaryKey = false;
				colvarNoReciboDGII.IsForeignKey = false;
				colvarNoReciboDGII.IsReadOnly = false;
				colvarNoReciboDGII.DefaultSetting = @"";
				colvarNoReciboDGII.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoReciboDGII);
				
				TableSchema.TableColumn colvarFechaReciboDGII = new TableSchema.TableColumn(schema);
				colvarFechaReciboDGII.ColumnName = "FechaReciboDGII";
				colvarFechaReciboDGII.DataType = DbType.DateTime;
				colvarFechaReciboDGII.MaxLength = 0;
				colvarFechaReciboDGII.AutoIncrement = false;
				colvarFechaReciboDGII.IsNullable = true;
				colvarFechaReciboDGII.IsPrimaryKey = false;
				colvarFechaReciboDGII.IsForeignKey = false;
				colvarFechaReciboDGII.IsReadOnly = false;
				colvarFechaReciboDGII.DefaultSetting = @"";
				colvarFechaReciboDGII.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaReciboDGII);
				
				TableSchema.TableColumn colvarMontoDGII = new TableSchema.TableColumn(schema);
				colvarMontoDGII.ColumnName = "MontoDGII";
				colvarMontoDGII.DataType = DbType.Currency;
				colvarMontoDGII.MaxLength = 0;
				colvarMontoDGII.AutoIncrement = false;
				colvarMontoDGII.IsNullable = true;
				colvarMontoDGII.IsPrimaryKey = false;
				colvarMontoDGII.IsForeignKey = false;
				colvarMontoDGII.IsReadOnly = false;
				colvarMontoDGII.DefaultSetting = @"";
				colvarMontoDGII.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMontoDGII);
				
				TableSchema.TableColumn colvarDestinoTraslado = new TableSchema.TableColumn(schema);
				colvarDestinoTraslado.ColumnName = "DestinoTraslado";
				colvarDestinoTraslado.DataType = DbType.AnsiString;
				colvarDestinoTraslado.MaxLength = 150;
				colvarDestinoTraslado.AutoIncrement = false;
				colvarDestinoTraslado.IsNullable = true;
				colvarDestinoTraslado.IsPrimaryKey = false;
				colvarDestinoTraslado.IsForeignKey = false;
				colvarDestinoTraslado.IsReadOnly = false;
				colvarDestinoTraslado.DefaultSetting = @"";
				colvarDestinoTraslado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDestinoTraslado);
				
				TableSchema.TableColumn colvarNombreSocialPersona = new TableSchema.TableColumn(schema);
				colvarNombreSocialPersona.ColumnName = "NombreSocialPersona";
				colvarNombreSocialPersona.DataType = DbType.String;
				colvarNombreSocialPersona.MaxLength = 250;
				colvarNombreSocialPersona.AutoIncrement = false;
				colvarNombreSocialPersona.IsNullable = true;
				colvarNombreSocialPersona.IsPrimaryKey = false;
				colvarNombreSocialPersona.IsForeignKey = false;
				colvarNombreSocialPersona.IsReadOnly = false;
				colvarNombreSocialPersona.DefaultSetting = @"";
				colvarNombreSocialPersona.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreSocialPersona);
				
				TableSchema.TableColumn colvarApellidoPersona = new TableSchema.TableColumn(schema);
				colvarApellidoPersona.ColumnName = "ApellidoPersona";
				colvarApellidoPersona.DataType = DbType.String;
				colvarApellidoPersona.MaxLength = 250;
				colvarApellidoPersona.AutoIncrement = false;
				colvarApellidoPersona.IsNullable = true;
				colvarApellidoPersona.IsPrimaryKey = false;
				colvarApellidoPersona.IsForeignKey = false;
				colvarApellidoPersona.IsReadOnly = false;
				colvarApellidoPersona.DefaultSetting = @"";
				colvarApellidoPersona.ForeignKeyTableName = "";
				schema.Columns.Add(colvarApellidoPersona);
				
				TableSchema.TableColumn colvarTipoSociedadId = new TableSchema.TableColumn(schema);
				colvarTipoSociedadId.ColumnName = "TipoSociedadId";
				colvarTipoSociedadId.DataType = DbType.Int32;
				colvarTipoSociedadId.MaxLength = 0;
				colvarTipoSociedadId.AutoIncrement = false;
				colvarTipoSociedadId.IsNullable = false;
				colvarTipoSociedadId.IsPrimaryKey = false;
				colvarTipoSociedadId.IsForeignKey = false;
				colvarTipoSociedadId.IsReadOnly = false;
				colvarTipoSociedadId.DefaultSetting = @"";
				colvarTipoSociedadId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoSociedadId);
				
				TableSchema.TableColumn colvarNumeroRegistro = new TableSchema.TableColumn(schema);
				colvarNumeroRegistro.ColumnName = "NumeroRegistro";
				colvarNumeroRegistro.DataType = DbType.Int32;
				colvarNumeroRegistro.MaxLength = 0;
				colvarNumeroRegistro.AutoIncrement = false;
				colvarNumeroRegistro.IsNullable = true;
				colvarNumeroRegistro.IsPrimaryKey = false;
				colvarNumeroRegistro.IsForeignKey = false;
				colvarNumeroRegistro.IsReadOnly = false;
				colvarNumeroRegistro.DefaultSetting = @"";
				colvarNumeroRegistro.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNumeroRegistro);
				
				TableSchema.TableColumn colvarFechaAsamblea = new TableSchema.TableColumn(schema);
				colvarFechaAsamblea.ColumnName = "FechaAsamblea";
				colvarFechaAsamblea.DataType = DbType.DateTime;
				colvarFechaAsamblea.MaxLength = 0;
				colvarFechaAsamblea.AutoIncrement = false;
				colvarFechaAsamblea.IsNullable = true;
				colvarFechaAsamblea.IsPrimaryKey = false;
				colvarFechaAsamblea.IsForeignKey = false;
				colvarFechaAsamblea.IsReadOnly = false;
				colvarFechaAsamblea.DefaultSetting = @"";
				colvarFechaAsamblea.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaAsamblea);
				
				TableSchema.TableColumn colvarCapitalSocial = new TableSchema.TableColumn(schema);
				colvarCapitalSocial.ColumnName = "CapitalSocial";
				colvarCapitalSocial.DataType = DbType.Decimal;
				colvarCapitalSocial.MaxLength = 0;
				colvarCapitalSocial.AutoIncrement = false;
				colvarCapitalSocial.IsNullable = true;
				colvarCapitalSocial.IsPrimaryKey = false;
				colvarCapitalSocial.IsForeignKey = false;
				colvarCapitalSocial.IsReadOnly = false;
				colvarCapitalSocial.DefaultSetting = @"";
				colvarCapitalSocial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCapitalSocial);
				
				TableSchema.TableColumn colvarModificacionCapital = new TableSchema.TableColumn(schema);
				colvarModificacionCapital.ColumnName = "ModificacionCapital";
				colvarModificacionCapital.DataType = DbType.Decimal;
				colvarModificacionCapital.MaxLength = 0;
				colvarModificacionCapital.AutoIncrement = false;
				colvarModificacionCapital.IsNullable = true;
				colvarModificacionCapital.IsPrimaryKey = false;
				colvarModificacionCapital.IsForeignKey = false;
				colvarModificacionCapital.IsReadOnly = false;
				colvarModificacionCapital.DefaultSetting = @"";
				colvarModificacionCapital.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModificacionCapital);
				
				TableSchema.TableColumn colvarRegistroId = new TableSchema.TableColumn(schema);
				colvarRegistroId.ColumnName = "RegistroId";
				colvarRegistroId.DataType = DbType.Int32;
				colvarRegistroId.MaxLength = 0;
				colvarRegistroId.AutoIncrement = false;
				colvarRegistroId.IsNullable = false;
				colvarRegistroId.IsPrimaryKey = false;
				colvarRegistroId.IsForeignKey = false;
				colvarRegistroId.IsReadOnly = false;
				colvarRegistroId.DefaultSetting = @"";
				colvarRegistroId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroId);
				
				TableSchema.TableColumn colvarBLoadedInSRM = new TableSchema.TableColumn(schema);
				colvarBLoadedInSRM.ColumnName = "bLoadedInSRM";
				colvarBLoadedInSRM.DataType = DbType.Boolean;
				colvarBLoadedInSRM.MaxLength = 0;
				colvarBLoadedInSRM.AutoIncrement = false;
				colvarBLoadedInSRM.IsNullable = true;
				colvarBLoadedInSRM.IsPrimaryKey = false;
				colvarBLoadedInSRM.IsForeignKey = false;
				colvarBLoadedInSRM.IsReadOnly = false;
				colvarBLoadedInSRM.DefaultSetting = @"";
				colvarBLoadedInSRM.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBLoadedInSRM);
				
				TableSchema.TableColumn colvarServicioId = new TableSchema.TableColumn(schema);
				colvarServicioId.ColumnName = "ServicioId";
				colvarServicioId.DataType = DbType.Int32;
				colvarServicioId.MaxLength = 0;
				colvarServicioId.AutoIncrement = false;
				colvarServicioId.IsNullable = false;
				colvarServicioId.IsPrimaryKey = false;
				colvarServicioId.IsForeignKey = false;
				colvarServicioId.IsReadOnly = false;
				colvarServicioId.DefaultSetting = @"";
				colvarServicioId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServicioId);
				
				TableSchema.TableColumn colvarCamaraId = new TableSchema.TableColumn(schema);
				colvarCamaraId.ColumnName = "CamaraId";
				colvarCamaraId.DataType = DbType.AnsiStringFixedLength;
				colvarCamaraId.MaxLength = 3;
				colvarCamaraId.AutoIncrement = false;
				colvarCamaraId.IsNullable = false;
				colvarCamaraId.IsPrimaryKey = false;
				colvarCamaraId.IsForeignKey = false;
				colvarCamaraId.IsReadOnly = false;
				colvarCamaraId.DefaultSetting = @"";
				colvarCamaraId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCamaraId);
				
				TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
				colvarUserId.ColumnName = "UserId";
				colvarUserId.DataType = DbType.Guid;
				colvarUserId.MaxLength = 0;
				colvarUserId.AutoIncrement = false;
				colvarUserId.IsNullable = false;
				colvarUserId.IsPrimaryKey = false;
				colvarUserId.IsForeignKey = false;
				colvarUserId.IsReadOnly = false;
				colvarUserId.DefaultSetting = @"";
				colvarUserId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserId);
				
				TableSchema.TableColumn colvarTipo = new TableSchema.TableColumn(schema);
				colvarTipo.ColumnName = "Tipo";
				colvarTipo.DataType = DbType.Int32;
				colvarTipo.MaxLength = 0;
				colvarTipo.AutoIncrement = false;
				colvarTipo.IsNullable = true;
				colvarTipo.IsPrimaryKey = false;
				colvarTipo.IsForeignKey = false;
				colvarTipo.IsReadOnly = false;
				colvarTipo.DefaultSetting = @"";
				colvarTipo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipo);
				
				TableSchema.TableColumn colvarNcf = new TableSchema.TableColumn(schema);
				colvarNcf.ColumnName = "NCF";
				colvarNcf.DataType = DbType.AnsiString;
				colvarNcf.MaxLength = 20;
				colvarNcf.AutoIncrement = false;
				colvarNcf.IsNullable = true;
				colvarNcf.IsPrimaryKey = false;
				colvarNcf.IsForeignKey = false;
				colvarNcf.IsReadOnly = false;
				colvarNcf.DefaultSetting = @"";
				colvarNcf.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNcf);
				
				TableSchema.TableColumn colvarTipoNcf = new TableSchema.TableColumn(schema);
				colvarTipoNcf.ColumnName = "TipoNcf";
				colvarTipoNcf.DataType = DbType.AnsiString;
				colvarTipoNcf.MaxLength = 150;
				colvarTipoNcf.AutoIncrement = false;
				colvarTipoNcf.IsNullable = true;
				colvarTipoNcf.IsPrimaryKey = false;
				colvarTipoNcf.IsForeignKey = false;
				colvarTipoNcf.IsReadOnly = false;
				colvarTipoNcf.DefaultSetting = @"";
				colvarTipoNcf.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoNcf);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["OficinaVirtualProvider"].AddSchema("Transacciones",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("TransaccionId")]
		[Bindable(true)]
		public int TransaccionId 
		{
			get { return GetColumnValue<int>(Columns.TransaccionId); }
			set { SetColumnValue(Columns.TransaccionId, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public DateTime Fecha 
		{
			get { return GetColumnValue<DateTime>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("Solicitante")]
		[Bindable(true)]
		public string Solicitante 
		{
			get { return GetColumnValue<string>(Columns.Solicitante); }
			set { SetColumnValue(Columns.Solicitante, value); }
		}
		  
		[XmlAttribute("RNCSolicitante")]
		[Bindable(true)]
		public string RNCSolicitante 
		{
			get { return GetColumnValue<string>(Columns.RNCSolicitante); }
			set { SetColumnValue(Columns.RNCSolicitante, value); }
		}
		  
		[XmlAttribute("NombreContacto")]
		[Bindable(true)]
		public string NombreContacto 
		{
			get { return GetColumnValue<string>(Columns.NombreContacto); }
			set { SetColumnValue(Columns.NombreContacto, value); }
		}
		  
		[XmlAttribute("TelefonoContacto")]
		[Bindable(true)]
		public string TelefonoContacto 
		{
			get { return GetColumnValue<string>(Columns.TelefonoContacto); }
			set { SetColumnValue(Columns.TelefonoContacto, value); }
		}
		  
		[XmlAttribute("FaxContacto")]
		[Bindable(true)]
		public string FaxContacto 
		{
			get { return GetColumnValue<string>(Columns.FaxContacto); }
			set { SetColumnValue(Columns.FaxContacto, value); }
		}
		  
		[XmlAttribute("NoReciboDGII")]
		[Bindable(true)]
		public string NoReciboDGII 
		{
			get { return GetColumnValue<string>(Columns.NoReciboDGII); }
			set { SetColumnValue(Columns.NoReciboDGII, value); }
		}
		  
		[XmlAttribute("FechaReciboDGII")]
		[Bindable(true)]
		public DateTime? FechaReciboDGII 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaReciboDGII); }
			set { SetColumnValue(Columns.FechaReciboDGII, value); }
		}
		  
		[XmlAttribute("MontoDGII")]
		[Bindable(true)]
		public decimal? MontoDGII 
		{
			get { return GetColumnValue<decimal?>(Columns.MontoDGII); }
			set { SetColumnValue(Columns.MontoDGII, value); }
		}
		  
		[XmlAttribute("DestinoTraslado")]
		[Bindable(true)]
		public string DestinoTraslado 
		{
			get { return GetColumnValue<string>(Columns.DestinoTraslado); }
			set { SetColumnValue(Columns.DestinoTraslado, value); }
		}
		  
		[XmlAttribute("NombreSocialPersona")]
		[Bindable(true)]
		public string NombreSocialPersona 
		{
			get { return GetColumnValue<string>(Columns.NombreSocialPersona); }
			set { SetColumnValue(Columns.NombreSocialPersona, value); }
		}
		  
		[XmlAttribute("ApellidoPersona")]
		[Bindable(true)]
		public string ApellidoPersona 
		{
			get { return GetColumnValue<string>(Columns.ApellidoPersona); }
			set { SetColumnValue(Columns.ApellidoPersona, value); }
		}
		  
		[XmlAttribute("TipoSociedadId")]
		[Bindable(true)]
		public int TipoSociedadId 
		{
			get { return GetColumnValue<int>(Columns.TipoSociedadId); }
			set { SetColumnValue(Columns.TipoSociedadId, value); }
		}
		  
		[XmlAttribute("NumeroRegistro")]
		[Bindable(true)]
		public int? NumeroRegistro 
		{
			get { return GetColumnValue<int?>(Columns.NumeroRegistro); }
			set { SetColumnValue(Columns.NumeroRegistro, value); }
		}
		  
		[XmlAttribute("FechaAsamblea")]
		[Bindable(true)]
		public DateTime? FechaAsamblea 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaAsamblea); }
			set { SetColumnValue(Columns.FechaAsamblea, value); }
		}
		  
		[XmlAttribute("CapitalSocial")]
		[Bindable(true)]
		public decimal? CapitalSocial 
		{
			get { return GetColumnValue<decimal?>(Columns.CapitalSocial); }
			set { SetColumnValue(Columns.CapitalSocial, value); }
		}
		  
		[XmlAttribute("ModificacionCapital")]
		[Bindable(true)]
		public decimal? ModificacionCapital 
		{
			get { return GetColumnValue<decimal?>(Columns.ModificacionCapital); }
			set { SetColumnValue(Columns.ModificacionCapital, value); }
		}
		  
		[XmlAttribute("RegistroId")]
		[Bindable(true)]
		public int RegistroId 
		{
			get { return GetColumnValue<int>(Columns.RegistroId); }
			set { SetColumnValue(Columns.RegistroId, value); }
		}
		  
		[XmlAttribute("BLoadedInSRM")]
		[Bindable(true)]
		public bool? BLoadedInSRM 
		{
			get { return GetColumnValue<bool?>(Columns.BLoadedInSRM); }
			set { SetColumnValue(Columns.BLoadedInSRM, value); }
		}
		  
		[XmlAttribute("ServicioId")]
		[Bindable(true)]
		public int ServicioId 
		{
			get { return GetColumnValue<int>(Columns.ServicioId); }
			set { SetColumnValue(Columns.ServicioId, value); }
		}
		  
		[XmlAttribute("CamaraId")]
		[Bindable(true)]
		public string CamaraId 
		{
			get { return GetColumnValue<string>(Columns.CamaraId); }
			set { SetColumnValue(Columns.CamaraId, value); }
		}
		  
		[XmlAttribute("UserId")]
		[Bindable(true)]
		public Guid UserId 
		{
			get { return GetColumnValue<Guid>(Columns.UserId); }
			set { SetColumnValue(Columns.UserId, value); }
		}
		  
		[XmlAttribute("Tipo")]
		[Bindable(true)]
		public int? Tipo 
		{
			get { return GetColumnValue<int?>(Columns.Tipo); }
			set { SetColumnValue(Columns.Tipo, value); }
		}
		  
		[XmlAttribute("Ncf")]
		[Bindable(true)]
		public string Ncf 
		{
			get { return GetColumnValue<string>(Columns.Ncf); }
			set { SetColumnValue(Columns.Ncf, value); }
		}
		  
		[XmlAttribute("TipoNcf")]
		[Bindable(true)]
		public string TipoNcf 
		{
			get { return GetColumnValue<string>(Columns.TipoNcf); }
			set { SetColumnValue(Columns.TipoNcf, value); }
		}
		
		#endregion
		
		
		#region PrimaryKey Methods		
		
        protected override void SetPrimaryKey(object oValue)
        {
            base.SetPrimaryKey(oValue);
            
            SetPKValues();
        }
        
		
		public CamaraComercio.DataAccess.OficinaVirtual.TransaccionDocumentosCollection TransaccionDocumentosRecords()
		{
			return new CamaraComercio.DataAccess.OficinaVirtual.TransaccionDocumentosCollection().Where(TransaccionDocumentos.Columns.TransaccionId, TransaccionId).Load();
		}
		#endregion
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(DateTime varFecha,string varSolicitante,string varRNCSolicitante,string varNombreContacto,string varTelefonoContacto,string varFaxContacto,string varNoReciboDGII,DateTime? varFechaReciboDGII,decimal? varMontoDGII,string varDestinoTraslado,string varNombreSocialPersona,string varApellidoPersona,int varTipoSociedadId,int? varNumeroRegistro,DateTime? varFechaAsamblea,decimal? varCapitalSocial,decimal? varModificacionCapital,int varRegistroId,bool? varBLoadedInSRM,int varServicioId,string varCamaraId,Guid varUserId,int? varTipo,string varNcf,string varTipoNcf)
		{
			Transaccion item = new Transaccion();
			
			item.Fecha = varFecha;
			
			item.Solicitante = varSolicitante;
			
			item.RNCSolicitante = varRNCSolicitante;
			
			item.NombreContacto = varNombreContacto;
			
			item.TelefonoContacto = varTelefonoContacto;
			
			item.FaxContacto = varFaxContacto;
			
			item.NoReciboDGII = varNoReciboDGII;
			
			item.FechaReciboDGII = varFechaReciboDGII;
			
			item.MontoDGII = varMontoDGII;
			
			item.DestinoTraslado = varDestinoTraslado;
			
			item.NombreSocialPersona = varNombreSocialPersona;
			
			item.ApellidoPersona = varApellidoPersona;
			
			item.TipoSociedadId = varTipoSociedadId;
			
			item.NumeroRegistro = varNumeroRegistro;
			
			item.FechaAsamblea = varFechaAsamblea;
			
			item.CapitalSocial = varCapitalSocial;
			
			item.ModificacionCapital = varModificacionCapital;
			
			item.RegistroId = varRegistroId;
			
			item.BLoadedInSRM = varBLoadedInSRM;
			
			item.ServicioId = varServicioId;
			
			item.CamaraId = varCamaraId;
			
			item.UserId = varUserId;
			
			item.Tipo = varTipo;
			
			item.Ncf = varNcf;
			
			item.TipoNcf = varTipoNcf;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varTransaccionId,DateTime varFecha,string varSolicitante,string varRNCSolicitante,string varNombreContacto,string varTelefonoContacto,string varFaxContacto,string varNoReciboDGII,DateTime? varFechaReciboDGII,decimal? varMontoDGII,string varDestinoTraslado,string varNombreSocialPersona,string varApellidoPersona,int varTipoSociedadId,int? varNumeroRegistro,DateTime? varFechaAsamblea,decimal? varCapitalSocial,decimal? varModificacionCapital,int varRegistroId,bool? varBLoadedInSRM,int varServicioId,string varCamaraId,Guid varUserId,int? varTipo,string varNcf,string varTipoNcf)
		{
			Transaccion item = new Transaccion();
			
				item.TransaccionId = varTransaccionId;
			
				item.Fecha = varFecha;
			
				item.Solicitante = varSolicitante;
			
				item.RNCSolicitante = varRNCSolicitante;
			
				item.NombreContacto = varNombreContacto;
			
				item.TelefonoContacto = varTelefonoContacto;
			
				item.FaxContacto = varFaxContacto;
			
				item.NoReciboDGII = varNoReciboDGII;
			
				item.FechaReciboDGII = varFechaReciboDGII;
			
				item.MontoDGII = varMontoDGII;
			
				item.DestinoTraslado = varDestinoTraslado;
			
				item.NombreSocialPersona = varNombreSocialPersona;
			
				item.ApellidoPersona = varApellidoPersona;
			
				item.TipoSociedadId = varTipoSociedadId;
			
				item.NumeroRegistro = varNumeroRegistro;
			
				item.FechaAsamblea = varFechaAsamblea;
			
				item.CapitalSocial = varCapitalSocial;
			
				item.ModificacionCapital = varModificacionCapital;
			
				item.RegistroId = varRegistroId;
			
				item.BLoadedInSRM = varBLoadedInSRM;
			
				item.ServicioId = varServicioId;
			
				item.CamaraId = varCamaraId;
			
				item.UserId = varUserId;
			
				item.Tipo = varTipo;
			
				item.Ncf = varNcf;
			
				item.TipoNcf = varTipoNcf;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn TransaccionIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn SolicitanteColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn RNCSolicitanteColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreContactoColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TelefonoContactoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn FaxContactoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NoReciboDGIIColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaReciboDGIIColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn MontoDGIIColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DestinoTrasladoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreSocialPersonaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn ApellidoPersonaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoSociedadIdColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NumeroRegistroColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaAsambleaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn CapitalSocialColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn ModificacionCapitalColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroIdColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn BLoadedInSRMColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn ServicioIdColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn CamaraIdColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn UserIdColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn NcfColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoNcfColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string TransaccionId = @"TransaccionId";
			 public static string Fecha = @"Fecha";
			 public static string Solicitante = @"Solicitante";
			 public static string RNCSolicitante = @"RNCSolicitante";
			 public static string NombreContacto = @"NombreContacto";
			 public static string TelefonoContacto = @"TelefonoContacto";
			 public static string FaxContacto = @"FaxContacto";
			 public static string NoReciboDGII = @"NoReciboDGII";
			 public static string FechaReciboDGII = @"FechaReciboDGII";
			 public static string MontoDGII = @"MontoDGII";
			 public static string DestinoTraslado = @"DestinoTraslado";
			 public static string NombreSocialPersona = @"NombreSocialPersona";
			 public static string ApellidoPersona = @"ApellidoPersona";
			 public static string TipoSociedadId = @"TipoSociedadId";
			 public static string NumeroRegistro = @"NumeroRegistro";
			 public static string FechaAsamblea = @"FechaAsamblea";
			 public static string CapitalSocial = @"CapitalSocial";
			 public static string ModificacionCapital = @"ModificacionCapital";
			 public static string RegistroId = @"RegistroId";
			 public static string BLoadedInSRM = @"bLoadedInSRM";
			 public static string ServicioId = @"ServicioId";
			 public static string CamaraId = @"CamaraId";
			 public static string UserId = @"UserId";
			 public static string Tipo = @"Tipo";
			 public static string Ncf = @"NCF";
			 public static string TipoNcf = @"TipoNcf";
						
		}
		#endregion
		
		#region Update PK Collections
		
        public void SetPKValues()
        {
}
        #endregion
    
        #region Deep Save
		
        public void DeepSave()
        {
            Save();
            
}
        #endregion
	}
}
