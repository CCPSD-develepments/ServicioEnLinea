using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.OficinaVirtual
{
	/// <summary>
	/// Strongly-typed collection for the Socio class.
	/// </summary>
    [Serializable]
	public partial class SocioCollection : ActiveList<Socio, SocioCollection>
	{	   
		public SocioCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SocioCollection</returns>
		public SocioCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Socio o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Socios table.
	/// </summary>
	[Serializable]
	public partial class Socio : ActiveRecord<Socio>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Socio()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Socio(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Socio(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Socio(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Socios", TableType.Table, DataService.GetInstance("OficinaVirtualProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"WebSRM";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "Id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarRegistroId = new TableSchema.TableColumn(schema);
				colvarRegistroId.ColumnName = "RegistroId";
				colvarRegistroId.DataType = DbType.Int32;
				colvarRegistroId.MaxLength = 0;
				colvarRegistroId.AutoIncrement = false;
				colvarRegistroId.IsNullable = false;
				colvarRegistroId.IsPrimaryKey = false;
				colvarRegistroId.IsForeignKey = false;
				colvarRegistroId.IsReadOnly = false;
				colvarRegistroId.DefaultSetting = @"";
				colvarRegistroId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroId);
				
				TableSchema.TableColumn colvarTipoSocio = new TableSchema.TableColumn(schema);
				colvarTipoSocio.ColumnName = "TipoSocio";
				colvarTipoSocio.DataType = DbType.String;
				colvarTipoSocio.MaxLength = 1;
				colvarTipoSocio.AutoIncrement = false;
				colvarTipoSocio.IsNullable = false;
				colvarTipoSocio.IsPrimaryKey = false;
				colvarTipoSocio.IsForeignKey = false;
				colvarTipoSocio.IsReadOnly = false;
				colvarTipoSocio.DefaultSetting = @"";
				colvarTipoSocio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoSocio);
				
				TableSchema.TableColumn colvarTipoRelacion = new TableSchema.TableColumn(schema);
				colvarTipoRelacion.ColumnName = "TipoRelacion";
				colvarTipoRelacion.DataType = DbType.String;
				colvarTipoRelacion.MaxLength = 1;
				colvarTipoRelacion.AutoIncrement = false;
				colvarTipoRelacion.IsNullable = false;
				colvarTipoRelacion.IsPrimaryKey = false;
				colvarTipoRelacion.IsForeignKey = false;
				colvarTipoRelacion.IsReadOnly = false;
				colvarTipoRelacion.DefaultSetting = @"";
				colvarTipoRelacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoRelacion);
				
				TableSchema.TableColumn colvarCargoId = new TableSchema.TableColumn(schema);
				colvarCargoId.ColumnName = "CargoId";
				colvarCargoId.DataType = DbType.Int32;
				colvarCargoId.MaxLength = 0;
				colvarCargoId.AutoIncrement = false;
				colvarCargoId.IsNullable = true;
				colvarCargoId.IsPrimaryKey = false;
				colvarCargoId.IsForeignKey = false;
				colvarCargoId.IsReadOnly = false;
				colvarCargoId.DefaultSetting = @"";
				colvarCargoId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCargoId);
				
				TableSchema.TableColumn colvarTipoDocumento = new TableSchema.TableColumn(schema);
				colvarTipoDocumento.ColumnName = "TipoDocumento";
				colvarTipoDocumento.DataType = DbType.String;
				colvarTipoDocumento.MaxLength = 1;
				colvarTipoDocumento.AutoIncrement = false;
				colvarTipoDocumento.IsNullable = false;
				colvarTipoDocumento.IsPrimaryKey = false;
				colvarTipoDocumento.IsForeignKey = false;
				colvarTipoDocumento.IsReadOnly = false;
				colvarTipoDocumento.DefaultSetting = @"";
				colvarTipoDocumento.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoDocumento);
				
				TableSchema.TableColumn colvarDocumento = new TableSchema.TableColumn(schema);
				colvarDocumento.ColumnName = "Documento";
				colvarDocumento.DataType = DbType.String;
				colvarDocumento.MaxLength = 15;
				colvarDocumento.AutoIncrement = false;
				colvarDocumento.IsNullable = false;
				colvarDocumento.IsPrimaryKey = false;
				colvarDocumento.IsForeignKey = false;
				colvarDocumento.IsReadOnly = false;
				colvarDocumento.DefaultSetting = @"";
				colvarDocumento.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDocumento);
				
				TableSchema.TableColumn colvarNacionalidadId = new TableSchema.TableColumn(schema);
				colvarNacionalidadId.ColumnName = "NacionalidadId";
				colvarNacionalidadId.DataType = DbType.Int32;
				colvarNacionalidadId.MaxLength = 0;
				colvarNacionalidadId.AutoIncrement = false;
				colvarNacionalidadId.IsNullable = true;
				colvarNacionalidadId.IsPrimaryKey = false;
				colvarNacionalidadId.IsForeignKey = false;
				colvarNacionalidadId.IsReadOnly = false;
				colvarNacionalidadId.DefaultSetting = @"";
				colvarNacionalidadId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNacionalidadId);
				
				TableSchema.TableColumn colvarRegistroMercantil = new TableSchema.TableColumn(schema);
				colvarRegistroMercantil.ColumnName = "RegistroMercantil";
				colvarRegistroMercantil.DataType = DbType.String;
				colvarRegistroMercantil.MaxLength = 10;
				colvarRegistroMercantil.AutoIncrement = false;
				colvarRegistroMercantil.IsNullable = true;
				colvarRegistroMercantil.IsPrimaryKey = false;
				colvarRegistroMercantil.IsForeignKey = false;
				colvarRegistroMercantil.IsReadOnly = false;
				colvarRegistroMercantil.DefaultSetting = @"";
				colvarRegistroMercantil.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroMercantil);
				
				TableSchema.TableColumn colvarOrden = new TableSchema.TableColumn(schema);
				colvarOrden.ColumnName = "Orden";
				colvarOrden.DataType = DbType.Int32;
				colvarOrden.MaxLength = 0;
				colvarOrden.AutoIncrement = false;
				colvarOrden.IsNullable = false;
				colvarOrden.IsPrimaryKey = false;
				colvarOrden.IsForeignKey = false;
				colvarOrden.IsReadOnly = false;
				
						colvarOrden.DefaultSetting = @"((1))";
				colvarOrden.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOrden);
				
				TableSchema.TableColumn colvarSociedadNombreSocial = new TableSchema.TableColumn(schema);
				colvarSociedadNombreSocial.ColumnName = "SociedadNombreSocial";
				colvarSociedadNombreSocial.DataType = DbType.String;
				colvarSociedadNombreSocial.MaxLength = 150;
				colvarSociedadNombreSocial.AutoIncrement = false;
				colvarSociedadNombreSocial.IsNullable = true;
				colvarSociedadNombreSocial.IsPrimaryKey = false;
				colvarSociedadNombreSocial.IsForeignKey = false;
				colvarSociedadNombreSocial.IsReadOnly = false;
				colvarSociedadNombreSocial.DefaultSetting = @"";
				colvarSociedadNombreSocial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSociedadNombreSocial);
				
				TableSchema.TableColumn colvarPersonaPrimerNombre = new TableSchema.TableColumn(schema);
				colvarPersonaPrimerNombre.ColumnName = "PersonaPrimerNombre";
				colvarPersonaPrimerNombre.DataType = DbType.String;
				colvarPersonaPrimerNombre.MaxLength = 30;
				colvarPersonaPrimerNombre.AutoIncrement = false;
				colvarPersonaPrimerNombre.IsNullable = true;
				colvarPersonaPrimerNombre.IsPrimaryKey = false;
				colvarPersonaPrimerNombre.IsForeignKey = false;
				colvarPersonaPrimerNombre.IsReadOnly = false;
				colvarPersonaPrimerNombre.DefaultSetting = @"";
				colvarPersonaPrimerNombre.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPersonaPrimerNombre);
				
				TableSchema.TableColumn colvarPersonaSegundoNombre = new TableSchema.TableColumn(schema);
				colvarPersonaSegundoNombre.ColumnName = "PersonaSegundoNombre";
				colvarPersonaSegundoNombre.DataType = DbType.String;
				colvarPersonaSegundoNombre.MaxLength = 30;
				colvarPersonaSegundoNombre.AutoIncrement = false;
				colvarPersonaSegundoNombre.IsNullable = true;
				colvarPersonaSegundoNombre.IsPrimaryKey = false;
				colvarPersonaSegundoNombre.IsForeignKey = false;
				colvarPersonaSegundoNombre.IsReadOnly = false;
				colvarPersonaSegundoNombre.DefaultSetting = @"";
				colvarPersonaSegundoNombre.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPersonaSegundoNombre);
				
				TableSchema.TableColumn colvarPersonaPrimerApellido = new TableSchema.TableColumn(schema);
				colvarPersonaPrimerApellido.ColumnName = "PersonaPrimerApellido";
				colvarPersonaPrimerApellido.DataType = DbType.String;
				colvarPersonaPrimerApellido.MaxLength = 30;
				colvarPersonaPrimerApellido.AutoIncrement = false;
				colvarPersonaPrimerApellido.IsNullable = true;
				colvarPersonaPrimerApellido.IsPrimaryKey = false;
				colvarPersonaPrimerApellido.IsForeignKey = false;
				colvarPersonaPrimerApellido.IsReadOnly = false;
				colvarPersonaPrimerApellido.DefaultSetting = @"";
				colvarPersonaPrimerApellido.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPersonaPrimerApellido);
				
				TableSchema.TableColumn colvarPersonaSegundoApellido = new TableSchema.TableColumn(schema);
				colvarPersonaSegundoApellido.ColumnName = "PersonaSegundoApellido";
				colvarPersonaSegundoApellido.DataType = DbType.String;
				colvarPersonaSegundoApellido.MaxLength = 30;
				colvarPersonaSegundoApellido.AutoIncrement = false;
				colvarPersonaSegundoApellido.IsNullable = true;
				colvarPersonaSegundoApellido.IsPrimaryKey = false;
				colvarPersonaSegundoApellido.IsForeignKey = false;
				colvarPersonaSegundoApellido.IsReadOnly = false;
				colvarPersonaSegundoApellido.DefaultSetting = @"";
				colvarPersonaSegundoApellido.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPersonaSegundoApellido);
				
				TableSchema.TableColumn colvarPersonaEstadoCivil = new TableSchema.TableColumn(schema);
				colvarPersonaEstadoCivil.ColumnName = "PersonaEstadoCivil";
				colvarPersonaEstadoCivil.DataType = DbType.String;
				colvarPersonaEstadoCivil.MaxLength = 1;
				colvarPersonaEstadoCivil.AutoIncrement = false;
				colvarPersonaEstadoCivil.IsNullable = true;
				colvarPersonaEstadoCivil.IsPrimaryKey = false;
				colvarPersonaEstadoCivil.IsForeignKey = false;
				colvarPersonaEstadoCivil.IsReadOnly = false;
				colvarPersonaEstadoCivil.DefaultSetting = @"";
				colvarPersonaEstadoCivil.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPersonaEstadoCivil);
				
				TableSchema.TableColumn colvarPersonaProfesionId = new TableSchema.TableColumn(schema);
				colvarPersonaProfesionId.ColumnName = "PersonaProfesionId";
				colvarPersonaProfesionId.DataType = DbType.Int32;
				colvarPersonaProfesionId.MaxLength = 0;
				colvarPersonaProfesionId.AutoIncrement = false;
				colvarPersonaProfesionId.IsNullable = true;
				colvarPersonaProfesionId.IsPrimaryKey = false;
				colvarPersonaProfesionId.IsForeignKey = false;
				colvarPersonaProfesionId.IsReadOnly = false;
				colvarPersonaProfesionId.DefaultSetting = @"";
				colvarPersonaProfesionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPersonaProfesionId);
				
				TableSchema.TableColumn colvarDireccionCalle = new TableSchema.TableColumn(schema);
				colvarDireccionCalle.ColumnName = "DireccionCalle";
				colvarDireccionCalle.DataType = DbType.String;
				colvarDireccionCalle.MaxLength = 256;
				colvarDireccionCalle.AutoIncrement = false;
				colvarDireccionCalle.IsNullable = true;
				colvarDireccionCalle.IsPrimaryKey = false;
				colvarDireccionCalle.IsForeignKey = false;
				colvarDireccionCalle.IsReadOnly = false;
				colvarDireccionCalle.DefaultSetting = @"";
				colvarDireccionCalle.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionCalle);
				
				TableSchema.TableColumn colvarDireccionNumero = new TableSchema.TableColumn(schema);
				colvarDireccionNumero.ColumnName = "DireccionNumero";
				colvarDireccionNumero.DataType = DbType.String;
				colvarDireccionNumero.MaxLength = 6;
				colvarDireccionNumero.AutoIncrement = false;
				colvarDireccionNumero.IsNullable = true;
				colvarDireccionNumero.IsPrimaryKey = false;
				colvarDireccionNumero.IsForeignKey = false;
				colvarDireccionNumero.IsReadOnly = false;
				colvarDireccionNumero.DefaultSetting = @"";
				colvarDireccionNumero.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionNumero);
				
				TableSchema.TableColumn colvarDireccionCiudadId = new TableSchema.TableColumn(schema);
				colvarDireccionCiudadId.ColumnName = "DireccionCiudadId";
				colvarDireccionCiudadId.DataType = DbType.Int32;
				colvarDireccionCiudadId.MaxLength = 0;
				colvarDireccionCiudadId.AutoIncrement = false;
				colvarDireccionCiudadId.IsNullable = true;
				colvarDireccionCiudadId.IsPrimaryKey = false;
				colvarDireccionCiudadId.IsForeignKey = false;
				colvarDireccionCiudadId.IsReadOnly = false;
				colvarDireccionCiudadId.DefaultSetting = @"";
				colvarDireccionCiudadId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionCiudadId);
				
				TableSchema.TableColumn colvarDireccionSectorId = new TableSchema.TableColumn(schema);
				colvarDireccionSectorId.ColumnName = "DireccionSectorId";
				colvarDireccionSectorId.DataType = DbType.Int32;
				colvarDireccionSectorId.MaxLength = 0;
				colvarDireccionSectorId.AutoIncrement = false;
				colvarDireccionSectorId.IsNullable = true;
				colvarDireccionSectorId.IsPrimaryKey = false;
				colvarDireccionSectorId.IsForeignKey = false;
				colvarDireccionSectorId.IsReadOnly = false;
				colvarDireccionSectorId.DefaultSetting = @"";
				colvarDireccionSectorId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionSectorId);
				
				TableSchema.TableColumn colvarDireccionApartadoPostal = new TableSchema.TableColumn(schema);
				colvarDireccionApartadoPostal.ColumnName = "DireccionApartadoPostal";
				colvarDireccionApartadoPostal.DataType = DbType.String;
				colvarDireccionApartadoPostal.MaxLength = 20;
				colvarDireccionApartadoPostal.AutoIncrement = false;
				colvarDireccionApartadoPostal.IsNullable = true;
				colvarDireccionApartadoPostal.IsPrimaryKey = false;
				colvarDireccionApartadoPostal.IsForeignKey = false;
				colvarDireccionApartadoPostal.IsReadOnly = false;
				colvarDireccionApartadoPostal.DefaultSetting = @"";
				colvarDireccionApartadoPostal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionApartadoPostal);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["OficinaVirtualProvider"].AddSchema("Socios",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("RegistroId")]
		[Bindable(true)]
		public int RegistroId 
		{
			get { return GetColumnValue<int>(Columns.RegistroId); }
			set { SetColumnValue(Columns.RegistroId, value); }
		}
		  
		[XmlAttribute("TipoSocio")]
		[Bindable(true)]
		public string TipoSocio 
		{
			get { return GetColumnValue<string>(Columns.TipoSocio); }
			set { SetColumnValue(Columns.TipoSocio, value); }
		}
		  
		[XmlAttribute("TipoRelacion")]
		[Bindable(true)]
		public string TipoRelacion 
		{
			get { return GetColumnValue<string>(Columns.TipoRelacion); }
			set { SetColumnValue(Columns.TipoRelacion, value); }
		}
		  
		[XmlAttribute("CargoId")]
		[Bindable(true)]
		public int? CargoId 
		{
			get { return GetColumnValue<int?>(Columns.CargoId); }
			set { SetColumnValue(Columns.CargoId, value); }
		}
		  
		[XmlAttribute("TipoDocumento")]
		[Bindable(true)]
		public string TipoDocumento 
		{
			get { return GetColumnValue<string>(Columns.TipoDocumento); }
			set { SetColumnValue(Columns.TipoDocumento, value); }
		}
		  
		[XmlAttribute("Documento")]
		[Bindable(true)]
		public string Documento 
		{
			get { return GetColumnValue<string>(Columns.Documento); }
			set { SetColumnValue(Columns.Documento, value); }
		}
		  
		[XmlAttribute("NacionalidadId")]
		[Bindable(true)]
		public int? NacionalidadId 
		{
			get { return GetColumnValue<int?>(Columns.NacionalidadId); }
			set { SetColumnValue(Columns.NacionalidadId, value); }
		}
		  
		[XmlAttribute("RegistroMercantil")]
		[Bindable(true)]
		public string RegistroMercantil 
		{
			get { return GetColumnValue<string>(Columns.RegistroMercantil); }
			set { SetColumnValue(Columns.RegistroMercantil, value); }
		}
		  
		[XmlAttribute("Orden")]
		[Bindable(true)]
		public int Orden 
		{
			get { return GetColumnValue<int>(Columns.Orden); }
			set { SetColumnValue(Columns.Orden, value); }
		}
		  
		[XmlAttribute("SociedadNombreSocial")]
		[Bindable(true)]
		public string SociedadNombreSocial 
		{
			get { return GetColumnValue<string>(Columns.SociedadNombreSocial); }
			set { SetColumnValue(Columns.SociedadNombreSocial, value); }
		}
		  
		[XmlAttribute("PersonaPrimerNombre")]
		[Bindable(true)]
		public string PersonaPrimerNombre 
		{
			get { return GetColumnValue<string>(Columns.PersonaPrimerNombre); }
			set { SetColumnValue(Columns.PersonaPrimerNombre, value); }
		}
		  
		[XmlAttribute("PersonaSegundoNombre")]
		[Bindable(true)]
		public string PersonaSegundoNombre 
		{
			get { return GetColumnValue<string>(Columns.PersonaSegundoNombre); }
			set { SetColumnValue(Columns.PersonaSegundoNombre, value); }
		}
		  
		[XmlAttribute("PersonaPrimerApellido")]
		[Bindable(true)]
		public string PersonaPrimerApellido 
		{
			get { return GetColumnValue<string>(Columns.PersonaPrimerApellido); }
			set { SetColumnValue(Columns.PersonaPrimerApellido, value); }
		}
		  
		[XmlAttribute("PersonaSegundoApellido")]
		[Bindable(true)]
		public string PersonaSegundoApellido 
		{
			get { return GetColumnValue<string>(Columns.PersonaSegundoApellido); }
			set { SetColumnValue(Columns.PersonaSegundoApellido, value); }
		}
		  
		[XmlAttribute("PersonaEstadoCivil")]
		[Bindable(true)]
		public string PersonaEstadoCivil 
		{
			get { return GetColumnValue<string>(Columns.PersonaEstadoCivil); }
			set { SetColumnValue(Columns.PersonaEstadoCivil, value); }
		}
		  
		[XmlAttribute("PersonaProfesionId")]
		[Bindable(true)]
		public int? PersonaProfesionId 
		{
			get { return GetColumnValue<int?>(Columns.PersonaProfesionId); }
			set { SetColumnValue(Columns.PersonaProfesionId, value); }
		}
		  
		[XmlAttribute("DireccionCalle")]
		[Bindable(true)]
		public string DireccionCalle 
		{
			get { return GetColumnValue<string>(Columns.DireccionCalle); }
			set { SetColumnValue(Columns.DireccionCalle, value); }
		}
		  
		[XmlAttribute("DireccionNumero")]
		[Bindable(true)]
		public string DireccionNumero 
		{
			get { return GetColumnValue<string>(Columns.DireccionNumero); }
			set { SetColumnValue(Columns.DireccionNumero, value); }
		}
		  
		[XmlAttribute("DireccionCiudadId")]
		[Bindable(true)]
		public int? DireccionCiudadId 
		{
			get { return GetColumnValue<int?>(Columns.DireccionCiudadId); }
			set { SetColumnValue(Columns.DireccionCiudadId, value); }
		}
		  
		[XmlAttribute("DireccionSectorId")]
		[Bindable(true)]
		public int? DireccionSectorId 
		{
			get { return GetColumnValue<int?>(Columns.DireccionSectorId); }
			set { SetColumnValue(Columns.DireccionSectorId, value); }
		}
		  
		[XmlAttribute("DireccionApartadoPostal")]
		[Bindable(true)]
		public string DireccionApartadoPostal 
		{
			get { return GetColumnValue<string>(Columns.DireccionApartadoPostal); }
			set { SetColumnValue(Columns.DireccionApartadoPostal, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varRegistroId,string varTipoSocio,string varTipoRelacion,int? varCargoId,string varTipoDocumento,string varDocumento,int? varNacionalidadId,string varRegistroMercantil,int varOrden,string varSociedadNombreSocial,string varPersonaPrimerNombre,string varPersonaSegundoNombre,string varPersonaPrimerApellido,string varPersonaSegundoApellido,string varPersonaEstadoCivil,int? varPersonaProfesionId,string varDireccionCalle,string varDireccionNumero,int? varDireccionCiudadId,int? varDireccionSectorId,string varDireccionApartadoPostal)
		{
			Socio item = new Socio();
			
			item.RegistroId = varRegistroId;
			
			item.TipoSocio = varTipoSocio;
			
			item.TipoRelacion = varTipoRelacion;
			
			item.CargoId = varCargoId;
			
			item.TipoDocumento = varTipoDocumento;
			
			item.Documento = varDocumento;
			
			item.NacionalidadId = varNacionalidadId;
			
			item.RegistroMercantil = varRegistroMercantil;
			
			item.Orden = varOrden;
			
			item.SociedadNombreSocial = varSociedadNombreSocial;
			
			item.PersonaPrimerNombre = varPersonaPrimerNombre;
			
			item.PersonaSegundoNombre = varPersonaSegundoNombre;
			
			item.PersonaPrimerApellido = varPersonaPrimerApellido;
			
			item.PersonaSegundoApellido = varPersonaSegundoApellido;
			
			item.PersonaEstadoCivil = varPersonaEstadoCivil;
			
			item.PersonaProfesionId = varPersonaProfesionId;
			
			item.DireccionCalle = varDireccionCalle;
			
			item.DireccionNumero = varDireccionNumero;
			
			item.DireccionCiudadId = varDireccionCiudadId;
			
			item.DireccionSectorId = varDireccionSectorId;
			
			item.DireccionApartadoPostal = varDireccionApartadoPostal;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,int varRegistroId,string varTipoSocio,string varTipoRelacion,int? varCargoId,string varTipoDocumento,string varDocumento,int? varNacionalidadId,string varRegistroMercantil,int varOrden,string varSociedadNombreSocial,string varPersonaPrimerNombre,string varPersonaSegundoNombre,string varPersonaPrimerApellido,string varPersonaSegundoApellido,string varPersonaEstadoCivil,int? varPersonaProfesionId,string varDireccionCalle,string varDireccionNumero,int? varDireccionCiudadId,int? varDireccionSectorId,string varDireccionApartadoPostal)
		{
			Socio item = new Socio();
			
				item.Id = varId;
			
				item.RegistroId = varRegistroId;
			
				item.TipoSocio = varTipoSocio;
			
				item.TipoRelacion = varTipoRelacion;
			
				item.CargoId = varCargoId;
			
				item.TipoDocumento = varTipoDocumento;
			
				item.Documento = varDocumento;
			
				item.NacionalidadId = varNacionalidadId;
			
				item.RegistroMercantil = varRegistroMercantil;
			
				item.Orden = varOrden;
			
				item.SociedadNombreSocial = varSociedadNombreSocial;
			
				item.PersonaPrimerNombre = varPersonaPrimerNombre;
			
				item.PersonaSegundoNombre = varPersonaSegundoNombre;
			
				item.PersonaPrimerApellido = varPersonaPrimerApellido;
			
				item.PersonaSegundoApellido = varPersonaSegundoApellido;
			
				item.PersonaEstadoCivil = varPersonaEstadoCivil;
			
				item.PersonaProfesionId = varPersonaProfesionId;
			
				item.DireccionCalle = varDireccionCalle;
			
				item.DireccionNumero = varDireccionNumero;
			
				item.DireccionCiudadId = varDireccionCiudadId;
			
				item.DireccionSectorId = varDireccionSectorId;
			
				item.DireccionApartadoPostal = varDireccionApartadoPostal;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoSocioColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoRelacionColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CargoIdColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoDocumentoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DocumentoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NacionalidadIdColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroMercantilColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn OrdenColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn SociedadNombreSocialColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn PersonaPrimerNombreColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn PersonaSegundoNombreColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn PersonaPrimerApellidoColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn PersonaSegundoApellidoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn PersonaEstadoCivilColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn PersonaProfesionIdColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionCalleColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionNumeroColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionCiudadIdColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionSectorIdColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionApartadoPostalColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"Id";
			 public static string RegistroId = @"RegistroId";
			 public static string TipoSocio = @"TipoSocio";
			 public static string TipoRelacion = @"TipoRelacion";
			 public static string CargoId = @"CargoId";
			 public static string TipoDocumento = @"TipoDocumento";
			 public static string Documento = @"Documento";
			 public static string NacionalidadId = @"NacionalidadId";
			 public static string RegistroMercantil = @"RegistroMercantil";
			 public static string Orden = @"Orden";
			 public static string SociedadNombreSocial = @"SociedadNombreSocial";
			 public static string PersonaPrimerNombre = @"PersonaPrimerNombre";
			 public static string PersonaSegundoNombre = @"PersonaSegundoNombre";
			 public static string PersonaPrimerApellido = @"PersonaPrimerApellido";
			 public static string PersonaSegundoApellido = @"PersonaSegundoApellido";
			 public static string PersonaEstadoCivil = @"PersonaEstadoCivil";
			 public static string PersonaProfesionId = @"PersonaProfesionId";
			 public static string DireccionCalle = @"DireccionCalle";
			 public static string DireccionNumero = @"DireccionNumero";
			 public static string DireccionCiudadId = @"DireccionCiudadId";
			 public static string DireccionSectorId = @"DireccionSectorId";
			 public static string DireccionApartadoPostal = @"DireccionApartadoPostal";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
