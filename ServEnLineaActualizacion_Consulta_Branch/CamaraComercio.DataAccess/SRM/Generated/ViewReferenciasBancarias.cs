using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewReferenciasBancarias class.
    /// </summary>
    [Serializable]
    public partial class ViewReferenciasBancariasCollection : ReadOnlyList<ViewReferenciasBancarias, ViewReferenciasBancariasCollection>
    {        
        public ViewReferenciasBancariasCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_ReferenciasBancarias view.
    /// </summary>
    [Serializable]
    public partial class ViewReferenciasBancarias : ReadOnlyRecord<ViewReferenciasBancarias>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_ReferenciasBancarias", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"Sistema";
                //columns
                
                TableSchema.TableColumn colvarReferenciaBancariaId = new TableSchema.TableColumn(schema);
                colvarReferenciaBancariaId.ColumnName = "ReferenciaBancariaId";
                colvarReferenciaBancariaId.DataType = DbType.Int32;
                colvarReferenciaBancariaId.MaxLength = 0;
                colvarReferenciaBancariaId.AutoIncrement = false;
                colvarReferenciaBancariaId.IsNullable = false;
                colvarReferenciaBancariaId.IsPrimaryKey = false;
                colvarReferenciaBancariaId.IsForeignKey = false;
                colvarReferenciaBancariaId.IsReadOnly = false;
                
                schema.Columns.Add(colvarReferenciaBancariaId);
                
                TableSchema.TableColumn colvarRegistroId = new TableSchema.TableColumn(schema);
                colvarRegistroId.ColumnName = "RegistroId";
                colvarRegistroId.DataType = DbType.Int32;
                colvarRegistroId.MaxLength = 0;
                colvarRegistroId.AutoIncrement = false;
                colvarRegistroId.IsNullable = false;
                colvarRegistroId.IsPrimaryKey = false;
                colvarRegistroId.IsForeignKey = false;
                colvarRegistroId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegistroId);
                
                TableSchema.TableColumn colvarBancoId = new TableSchema.TableColumn(schema);
                colvarBancoId.ColumnName = "BancoId";
                colvarBancoId.DataType = DbType.Int32;
                colvarBancoId.MaxLength = 0;
                colvarBancoId.AutoIncrement = false;
                colvarBancoId.IsNullable = false;
                colvarBancoId.IsPrimaryKey = false;
                colvarBancoId.IsForeignKey = false;
                colvarBancoId.IsReadOnly = false;
                
                schema.Columns.Add(colvarBancoId);
                
                TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
                colvarFechaModificacion.ColumnName = "FechaModificacion";
                colvarFechaModificacion.DataType = DbType.DateTime;
                colvarFechaModificacion.MaxLength = 0;
                colvarFechaModificacion.AutoIncrement = false;
                colvarFechaModificacion.IsNullable = false;
                colvarFechaModificacion.IsPrimaryKey = false;
                colvarFechaModificacion.IsForeignKey = false;
                colvarFechaModificacion.IsReadOnly = false;
                
                schema.Columns.Add(colvarFechaModificacion);
                
                TableSchema.TableColumn colvarRowguid = new TableSchema.TableColumn(schema);
                colvarRowguid.ColumnName = "rowguid";
                colvarRowguid.DataType = DbType.Guid;
                colvarRowguid.MaxLength = 0;
                colvarRowguid.AutoIncrement = false;
                colvarRowguid.IsNullable = false;
                colvarRowguid.IsPrimaryKey = false;
                colvarRowguid.IsForeignKey = false;
                colvarRowguid.IsReadOnly = false;
                
                schema.Columns.Add(colvarRowguid);
                
                TableSchema.TableColumn colvarBanco = new TableSchema.TableColumn(schema);
                colvarBanco.ColumnName = "Banco";
                colvarBanco.DataType = DbType.String;
                colvarBanco.MaxLength = 50;
                colvarBanco.AutoIncrement = false;
                colvarBanco.IsNullable = false;
                colvarBanco.IsPrimaryKey = false;
                colvarBanco.IsForeignKey = false;
                colvarBanco.IsReadOnly = false;
                
                schema.Columns.Add(colvarBanco);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_ReferenciasBancarias",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewReferenciasBancarias()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewReferenciasBancarias(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewReferenciasBancarias(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewReferenciasBancarias(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ReferenciaBancariaId")]
        [Bindable(true)]
        public int ReferenciaBancariaId 
	    {
		    get
		    {
			    return GetColumnValue<int>("ReferenciaBancariaId");
		    }
            set 
		    {
			    SetColumnValue("ReferenciaBancariaId", value);
            }
        }
	      
        [XmlAttribute("RegistroId")]
        [Bindable(true)]
        public int RegistroId 
	    {
		    get
		    {
			    return GetColumnValue<int>("RegistroId");
		    }
            set 
		    {
			    SetColumnValue("RegistroId", value);
            }
        }
	      
        [XmlAttribute("BancoId")]
        [Bindable(true)]
        public int BancoId 
	    {
		    get
		    {
			    return GetColumnValue<int>("BancoId");
		    }
            set 
		    {
			    SetColumnValue("BancoId", value);
            }
        }
	      
        [XmlAttribute("FechaModificacion")]
        [Bindable(true)]
        public DateTime FechaModificacion 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("FechaModificacion");
		    }
            set 
		    {
			    SetColumnValue("FechaModificacion", value);
            }
        }
	      
        [XmlAttribute("Rowguid")]
        [Bindable(true)]
        public Guid Rowguid 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("rowguid");
		    }
            set 
		    {
			    SetColumnValue("rowguid", value);
            }
        }
	      
        [XmlAttribute("Banco")]
        [Bindable(true)]
        public string Banco 
	    {
		    get
		    {
			    return GetColumnValue<string>("Banco");
		    }
            set 
		    {
			    SetColumnValue("Banco", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ReferenciaBancariaId = @"ReferenciaBancariaId";
            
            public static string RegistroId = @"RegistroId";
            
            public static string BancoId = @"BancoId";
            
            public static string FechaModificacion = @"FechaModificacion";
            
            public static string Rowguid = @"rowguid";
            
            public static string Banco = @"Banco";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
