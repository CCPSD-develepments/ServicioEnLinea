using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
	/// <summary>
	/// Strongly-typed collection for the Oposiciones class.
	/// </summary>
    [Serializable]
	public partial class OposicionesCollection : ActiveList<Oposiciones, OposicionesCollection>
	{	   
		public OposicionesCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>OposicionesCollection</returns>
		public OposicionesCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Oposiciones o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Oposiciones table.
	/// </summary>
	[Serializable]
	public partial class Oposiciones : ActiveRecord<Oposiciones>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Oposiciones()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Oposiciones(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Oposiciones(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Oposiciones(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Oposiciones", TableType.Table, DataService.GetInstance("SrmProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"Sistema";
				//columns
				
				TableSchema.TableColumn colvarOposicionId = new TableSchema.TableColumn(schema);
				colvarOposicionId.ColumnName = "OposicionId";
				colvarOposicionId.DataType = DbType.Int32;
				colvarOposicionId.MaxLength = 0;
				colvarOposicionId.AutoIncrement = true;
				colvarOposicionId.IsNullable = false;
				colvarOposicionId.IsPrimaryKey = true;
				colvarOposicionId.IsForeignKey = false;
				colvarOposicionId.IsReadOnly = false;
				colvarOposicionId.DefaultSetting = @"";
				colvarOposicionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOposicionId);
				
				TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
				colvarTransaccionId.ColumnName = "TransaccionId";
				colvarTransaccionId.DataType = DbType.Int32;
				colvarTransaccionId.MaxLength = 0;
				colvarTransaccionId.AutoIncrement = false;
				colvarTransaccionId.IsNullable = true;
				colvarTransaccionId.IsPrimaryKey = false;
				colvarTransaccionId.IsForeignKey = false;
				colvarTransaccionId.IsReadOnly = false;
				colvarTransaccionId.DefaultSetting = @"";
				colvarTransaccionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTransaccionId);
				
				TableSchema.TableColumn colvarNumeroActo = new TableSchema.TableColumn(schema);
				colvarNumeroActo.ColumnName = "NumeroActo";
				colvarNumeroActo.DataType = DbType.String;
				colvarNumeroActo.MaxLength = 20;
				colvarNumeroActo.AutoIncrement = false;
				colvarNumeroActo.IsNullable = true;
				colvarNumeroActo.IsPrimaryKey = false;
				colvarNumeroActo.IsForeignKey = false;
				colvarNumeroActo.IsReadOnly = false;
				colvarNumeroActo.DefaultSetting = @"";
				colvarNumeroActo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNumeroActo);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "Fecha";
				colvarFecha.DataType = DbType.DateTime;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = false;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				colvarFecha.DefaultSetting = @"";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarApoderado = new TableSchema.TableColumn(schema);
				colvarApoderado.ColumnName = "Apoderado";
				colvarApoderado.DataType = DbType.AnsiString;
				colvarApoderado.MaxLength = 50;
				colvarApoderado.AutoIncrement = false;
				colvarApoderado.IsNullable = true;
				colvarApoderado.IsPrimaryKey = false;
				colvarApoderado.IsForeignKey = false;
				colvarApoderado.IsReadOnly = false;
				colvarApoderado.DefaultSetting = @"";
				colvarApoderado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarApoderado);
				
				TableSchema.TableColumn colvarTipoSentenciaId = new TableSchema.TableColumn(schema);
				colvarTipoSentenciaId.ColumnName = "TipoSentenciaId";
				colvarTipoSentenciaId.DataType = DbType.Int32;
				colvarTipoSentenciaId.MaxLength = 0;
				colvarTipoSentenciaId.AutoIncrement = false;
				colvarTipoSentenciaId.IsNullable = false;
				colvarTipoSentenciaId.IsPrimaryKey = false;
				colvarTipoSentenciaId.IsForeignKey = true;
				colvarTipoSentenciaId.IsReadOnly = false;
				colvarTipoSentenciaId.DefaultSetting = @"";
				
					colvarTipoSentenciaId.ForeignKeyTableName = "TiposSentencias";
				schema.Columns.Add(colvarTipoSentenciaId);
				
				TableSchema.TableColumn colvarComentario = new TableSchema.TableColumn(schema);
				colvarComentario.ColumnName = "Comentario";
				colvarComentario.DataType = DbType.AnsiString;
				colvarComentario.MaxLength = -1;
				colvarComentario.AutoIncrement = false;
				colvarComentario.IsNullable = false;
				colvarComentario.IsPrimaryKey = false;
				colvarComentario.IsForeignKey = false;
				colvarComentario.IsReadOnly = false;
				colvarComentario.DefaultSetting = @"";
				colvarComentario.ForeignKeyTableName = "";
				schema.Columns.Add(colvarComentario);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["SrmProvider"].AddSchema("Oposiciones",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("OposicionId")]
		[Bindable(true)]
		public int OposicionId 
		{
			get { return GetColumnValue<int>(Columns.OposicionId); }
			set { SetColumnValue(Columns.OposicionId, value); }
		}
		  
		[XmlAttribute("TransaccionId")]
		[Bindable(true)]
		public int? TransaccionId 
		{
			get { return GetColumnValue<int?>(Columns.TransaccionId); }
			set { SetColumnValue(Columns.TransaccionId, value); }
		}
		  
		[XmlAttribute("NumeroActo")]
		[Bindable(true)]
		public string NumeroActo 
		{
			get { return GetColumnValue<string>(Columns.NumeroActo); }
			set { SetColumnValue(Columns.NumeroActo, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public DateTime Fecha 
		{
			get { return GetColumnValue<DateTime>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("Apoderado")]
		[Bindable(true)]
		public string Apoderado 
		{
			get { return GetColumnValue<string>(Columns.Apoderado); }
			set { SetColumnValue(Columns.Apoderado, value); }
		}
		  
		[XmlAttribute("TipoSentenciaId")]
		[Bindable(true)]
		public int TipoSentenciaId 
		{
			get { return GetColumnValue<int>(Columns.TipoSentenciaId); }
			set { SetColumnValue(Columns.TipoSentenciaId, value); }
		}
		  
		[XmlAttribute("Comentario")]
		[Bindable(true)]
		public string Comentario 
		{
			get { return GetColumnValue<string>(Columns.Comentario); }
			set { SetColumnValue(Columns.Comentario, value); }
		}
		
		#endregion
		
		
		#region PrimaryKey Methods		
		
        protected override void SetPrimaryKey(object oValue)
        {
            base.SetPrimaryKey(oValue);
            
            SetPKValues();
        }
        
		
		public CamaraComercio.DataAccess.SRM.RegistrosOposicionesCollection RegistrosOposicionesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.RegistrosOposicionesCollection().Where(RegistrosOposiciones.Columns.OposicionId, OposicionId).Load();
		}
		#endregion
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a TiposSentencias ActiveRecord object related to this Oposiciones
		/// 
		/// </summary>
		public CamaraComercio.DataAccess.SRM.TiposSentencias TiposSentencias
		{
			get { return CamaraComercio.DataAccess.SRM.TiposSentencias.FetchByID(this.TipoSentenciaId); }
			set { SetColumnValue("TipoSentenciaId", value.TipoSentenciaId); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varTransaccionId,string varNumeroActo,DateTime varFecha,string varApoderado,int varTipoSentenciaId,string varComentario)
		{
			Oposiciones item = new Oposiciones();
			
			item.TransaccionId = varTransaccionId;
			
			item.NumeroActo = varNumeroActo;
			
			item.Fecha = varFecha;
			
			item.Apoderado = varApoderado;
			
			item.TipoSentenciaId = varTipoSentenciaId;
			
			item.Comentario = varComentario;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varOposicionId,int? varTransaccionId,string varNumeroActo,DateTime varFecha,string varApoderado,int varTipoSentenciaId,string varComentario)
		{
			Oposiciones item = new Oposiciones();
			
				item.OposicionId = varOposicionId;
			
				item.TransaccionId = varTransaccionId;
			
				item.NumeroActo = varNumeroActo;
			
				item.Fecha = varFecha;
			
				item.Apoderado = varApoderado;
			
				item.TipoSentenciaId = varTipoSentenciaId;
			
				item.Comentario = varComentario;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn OposicionIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn TransaccionIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NumeroActoColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn ApoderadoColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoSentenciaIdColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn ComentarioColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string OposicionId = @"OposicionId";
			 public static string TransaccionId = @"TransaccionId";
			 public static string NumeroActo = @"NumeroActo";
			 public static string Fecha = @"Fecha";
			 public static string Apoderado = @"Apoderado";
			 public static string TipoSentenciaId = @"TipoSentenciaId";
			 public static string Comentario = @"Comentario";
						
		}
		#endregion
		
		#region Update PK Collections
		
        public void SetPKValues()
        {
}
        #endregion
    
        #region Deep Save
		
        public void DeepSave()
        {
            Save();
            
}
        #endregion
	}
}
