using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
	/// <summary>
	/// Strongly-typed collection for the SubTransacciones class.
	/// </summary>
    [Serializable]
	public partial class SubTransaccionesCollection : ActiveList<SubTransacciones, SubTransaccionesCollection>
	{	   
		public SubTransaccionesCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SubTransaccionesCollection</returns>
		public SubTransaccionesCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                SubTransacciones o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the SubTransacciones table.
	/// </summary>
	[Serializable]
	public partial class SubTransacciones : ActiveRecord<SubTransacciones>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public SubTransacciones()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public SubTransacciones(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public SubTransacciones(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public SubTransacciones(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("SubTransacciones", TableType.Table, DataService.GetInstance("SrmProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"Transaccion";
				//columns
				
				TableSchema.TableColumn colvarSubTransaccionId = new TableSchema.TableColumn(schema);
				colvarSubTransaccionId.ColumnName = "SubTransaccionId";
				colvarSubTransaccionId.DataType = DbType.Int32;
				colvarSubTransaccionId.MaxLength = 0;
				colvarSubTransaccionId.AutoIncrement = true;
				colvarSubTransaccionId.IsNullable = false;
				colvarSubTransaccionId.IsPrimaryKey = true;
				colvarSubTransaccionId.IsForeignKey = false;
				colvarSubTransaccionId.IsReadOnly = false;
				colvarSubTransaccionId.DefaultSetting = @"";
				colvarSubTransaccionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSubTransaccionId);
				
				TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
				colvarTransaccionId.ColumnName = "TransaccionId";
				colvarTransaccionId.DataType = DbType.Int32;
				colvarTransaccionId.MaxLength = 0;
				colvarTransaccionId.AutoIncrement = false;
				colvarTransaccionId.IsNullable = false;
				colvarTransaccionId.IsPrimaryKey = false;
				colvarTransaccionId.IsForeignKey = true;
				colvarTransaccionId.IsReadOnly = false;
				colvarTransaccionId.DefaultSetting = @"";
				
					colvarTransaccionId.ForeignKeyTableName = "Transacciones";
				schema.Columns.Add(colvarTransaccionId);
				
				TableSchema.TableColumn colvarTipoTransaccionId = new TableSchema.TableColumn(schema);
				colvarTipoTransaccionId.ColumnName = "TipoTransaccionId";
				colvarTipoTransaccionId.DataType = DbType.Int32;
				colvarTipoTransaccionId.MaxLength = 0;
				colvarTipoTransaccionId.AutoIncrement = false;
				colvarTipoTransaccionId.IsNullable = false;
				colvarTipoTransaccionId.IsPrimaryKey = false;
				colvarTipoTransaccionId.IsForeignKey = false;
				colvarTipoTransaccionId.IsReadOnly = false;
				colvarTipoTransaccionId.DefaultSetting = @"";
				colvarTipoTransaccionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoTransaccionId);
				
				TableSchema.TableColumn colvarTipoServicioId = new TableSchema.TableColumn(schema);
				colvarTipoServicioId.ColumnName = "TipoServicioId";
				colvarTipoServicioId.DataType = DbType.Int32;
				colvarTipoServicioId.MaxLength = 0;
				colvarTipoServicioId.AutoIncrement = false;
				colvarTipoServicioId.IsNullable = false;
				colvarTipoServicioId.IsPrimaryKey = false;
				colvarTipoServicioId.IsForeignKey = false;
				colvarTipoServicioId.IsReadOnly = false;
				colvarTipoServicioId.DefaultSetting = @"";
				colvarTipoServicioId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoServicioId);
				
				TableSchema.TableColumn colvarDestinoTraslado = new TableSchema.TableColumn(schema);
				colvarDestinoTraslado.ColumnName = "DestinoTraslado";
				colvarDestinoTraslado.DataType = DbType.AnsiString;
				colvarDestinoTraslado.MaxLength = 150;
				colvarDestinoTraslado.AutoIncrement = false;
				colvarDestinoTraslado.IsNullable = true;
				colvarDestinoTraslado.IsPrimaryKey = false;
				colvarDestinoTraslado.IsForeignKey = false;
				colvarDestinoTraslado.IsReadOnly = false;
				colvarDestinoTraslado.DefaultSetting = @"";
				colvarDestinoTraslado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDestinoTraslado);
				
				TableSchema.TableColumn colvarFlowId = new TableSchema.TableColumn(schema);
				colvarFlowId.ColumnName = "FlowId";
				colvarFlowId.DataType = DbType.Guid;
				colvarFlowId.MaxLength = 0;
				colvarFlowId.AutoIncrement = false;
				colvarFlowId.IsNullable = true;
				colvarFlowId.IsPrimaryKey = false;
				colvarFlowId.IsForeignKey = false;
				colvarFlowId.IsReadOnly = false;
				colvarFlowId.DefaultSetting = @"";
				colvarFlowId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFlowId);
				
				TableSchema.TableColumn colvarEstatus = new TableSchema.TableColumn(schema);
				colvarEstatus.ColumnName = "Estatus";
				colvarEstatus.DataType = DbType.Int32;
				colvarEstatus.MaxLength = 0;
				colvarEstatus.AutoIncrement = false;
				colvarEstatus.IsNullable = false;
				colvarEstatus.IsPrimaryKey = false;
				colvarEstatus.IsForeignKey = false;
				colvarEstatus.IsReadOnly = false;
				
						colvarEstatus.DefaultSetting = @"((0))";
				colvarEstatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstatus);
				
				TableSchema.TableColumn colvarEstatus2 = new TableSchema.TableColumn(schema);
				colvarEstatus2.ColumnName = "Estatus2";
				colvarEstatus2.DataType = DbType.Int32;
				colvarEstatus2.MaxLength = 0;
				colvarEstatus2.AutoIncrement = false;
				colvarEstatus2.IsNullable = true;
				colvarEstatus2.IsPrimaryKey = false;
				colvarEstatus2.IsForeignKey = false;
				colvarEstatus2.IsReadOnly = false;
				colvarEstatus2.DefaultSetting = @"";
				colvarEstatus2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstatus2);
				
				TableSchema.TableColumn colvarCustomString1 = new TableSchema.TableColumn(schema);
				colvarCustomString1.ColumnName = "CustomString1";
				colvarCustomString1.DataType = DbType.String;
				colvarCustomString1.MaxLength = 250;
				colvarCustomString1.AutoIncrement = false;
				colvarCustomString1.IsNullable = true;
				colvarCustomString1.IsPrimaryKey = false;
				colvarCustomString1.IsForeignKey = false;
				colvarCustomString1.IsReadOnly = false;
				colvarCustomString1.DefaultSetting = @"";
				colvarCustomString1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomString1);
				
				TableSchema.TableColumn colvarCustomString2 = new TableSchema.TableColumn(schema);
				colvarCustomString2.ColumnName = "CustomString2";
				colvarCustomString2.DataType = DbType.String;
				colvarCustomString2.MaxLength = 250;
				colvarCustomString2.AutoIncrement = false;
				colvarCustomString2.IsNullable = true;
				colvarCustomString2.IsPrimaryKey = false;
				colvarCustomString2.IsForeignKey = false;
				colvarCustomString2.IsReadOnly = false;
				colvarCustomString2.DefaultSetting = @"";
				colvarCustomString2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomString2);
				
				TableSchema.TableColumn colvarCustomString3 = new TableSchema.TableColumn(schema);
				colvarCustomString3.ColumnName = "CustomString3";
				colvarCustomString3.DataType = DbType.String;
				colvarCustomString3.MaxLength = 250;
				colvarCustomString3.AutoIncrement = false;
				colvarCustomString3.IsNullable = true;
				colvarCustomString3.IsPrimaryKey = false;
				colvarCustomString3.IsForeignKey = false;
				colvarCustomString3.IsReadOnly = false;
				colvarCustomString3.DefaultSetting = @"";
				colvarCustomString3.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomString3);
				
				TableSchema.TableColumn colvarCustomInt1 = new TableSchema.TableColumn(schema);
				colvarCustomInt1.ColumnName = "CustomInt1";
				colvarCustomInt1.DataType = DbType.Int32;
				colvarCustomInt1.MaxLength = 0;
				colvarCustomInt1.AutoIncrement = false;
				colvarCustomInt1.IsNullable = true;
				colvarCustomInt1.IsPrimaryKey = false;
				colvarCustomInt1.IsForeignKey = false;
				colvarCustomInt1.IsReadOnly = false;
				colvarCustomInt1.DefaultSetting = @"";
				colvarCustomInt1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomInt1);
				
				TableSchema.TableColumn colvarCustomInt2 = new TableSchema.TableColumn(schema);
				colvarCustomInt2.ColumnName = "CustomInt2";
				colvarCustomInt2.DataType = DbType.Int32;
				colvarCustomInt2.MaxLength = 0;
				colvarCustomInt2.AutoIncrement = false;
				colvarCustomInt2.IsNullable = true;
				colvarCustomInt2.IsPrimaryKey = false;
				colvarCustomInt2.IsForeignKey = false;
				colvarCustomInt2.IsReadOnly = false;
				colvarCustomInt2.DefaultSetting = @"";
				colvarCustomInt2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomInt2);
				
				TableSchema.TableColumn colvarCustomInt3 = new TableSchema.TableColumn(schema);
				colvarCustomInt3.ColumnName = "CustomInt3";
				colvarCustomInt3.DataType = DbType.Int32;
				colvarCustomInt3.MaxLength = 0;
				colvarCustomInt3.AutoIncrement = false;
				colvarCustomInt3.IsNullable = true;
				colvarCustomInt3.IsPrimaryKey = false;
				colvarCustomInt3.IsForeignKey = false;
				colvarCustomInt3.IsReadOnly = false;
				colvarCustomInt3.DefaultSetting = @"";
				colvarCustomInt3.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomInt3);
				
				TableSchema.TableColumn colvarCustomDateTime1 = new TableSchema.TableColumn(schema);
				colvarCustomDateTime1.ColumnName = "CustomDateTime1";
				colvarCustomDateTime1.DataType = DbType.DateTime;
				colvarCustomDateTime1.MaxLength = 0;
				colvarCustomDateTime1.AutoIncrement = false;
				colvarCustomDateTime1.IsNullable = true;
				colvarCustomDateTime1.IsPrimaryKey = false;
				colvarCustomDateTime1.IsForeignKey = false;
				colvarCustomDateTime1.IsReadOnly = false;
				colvarCustomDateTime1.DefaultSetting = @"";
				colvarCustomDateTime1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomDateTime1);
				
				TableSchema.TableColumn colvarCustomDateTime2 = new TableSchema.TableColumn(schema);
				colvarCustomDateTime2.ColumnName = "CustomDateTime2";
				colvarCustomDateTime2.DataType = DbType.DateTime;
				colvarCustomDateTime2.MaxLength = 0;
				colvarCustomDateTime2.AutoIncrement = false;
				colvarCustomDateTime2.IsNullable = true;
				colvarCustomDateTime2.IsPrimaryKey = false;
				colvarCustomDateTime2.IsForeignKey = false;
				colvarCustomDateTime2.IsReadOnly = false;
				colvarCustomDateTime2.DefaultSetting = @"";
				colvarCustomDateTime2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomDateTime2);
				
				TableSchema.TableColumn colvarCustomDecimal1 = new TableSchema.TableColumn(schema);
				colvarCustomDecimal1.ColumnName = "CustomDecimal1";
				colvarCustomDecimal1.DataType = DbType.Decimal;
				colvarCustomDecimal1.MaxLength = 0;
				colvarCustomDecimal1.AutoIncrement = false;
				colvarCustomDecimal1.IsNullable = true;
				colvarCustomDecimal1.IsPrimaryKey = false;
				colvarCustomDecimal1.IsForeignKey = false;
				colvarCustomDecimal1.IsReadOnly = false;
				colvarCustomDecimal1.DefaultSetting = @"";
				colvarCustomDecimal1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomDecimal1);
				
				TableSchema.TableColumn colvarCustomDecimal2 = new TableSchema.TableColumn(schema);
				colvarCustomDecimal2.ColumnName = "CustomDecimal2";
				colvarCustomDecimal2.DataType = DbType.Decimal;
				colvarCustomDecimal2.MaxLength = 0;
				colvarCustomDecimal2.AutoIncrement = false;
				colvarCustomDecimal2.IsNullable = true;
				colvarCustomDecimal2.IsPrimaryKey = false;
				colvarCustomDecimal2.IsForeignKey = false;
				colvarCustomDecimal2.IsReadOnly = false;
				colvarCustomDecimal2.DefaultSetting = @"";
				colvarCustomDecimal2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomDecimal2);
				
				TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
				colvarFechaModificacion.ColumnName = "FechaModificacion";
				colvarFechaModificacion.DataType = DbType.DateTime;
				colvarFechaModificacion.MaxLength = 0;
				colvarFechaModificacion.AutoIncrement = false;
				colvarFechaModificacion.IsNullable = false;
				colvarFechaModificacion.IsPrimaryKey = false;
				colvarFechaModificacion.IsForeignKey = false;
				colvarFechaModificacion.IsReadOnly = false;
				
						colvarFechaModificacion.DefaultSetting = @"(getdate())";
				colvarFechaModificacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaModificacion);
				
				TableSchema.TableColumn colvarRowguid = new TableSchema.TableColumn(schema);
				colvarRowguid.ColumnName = "rowguid";
				colvarRowguid.DataType = DbType.Guid;
				colvarRowguid.MaxLength = 0;
				colvarRowguid.AutoIncrement = false;
				colvarRowguid.IsNullable = false;
				colvarRowguid.IsPrimaryKey = false;
				colvarRowguid.IsForeignKey = false;
				colvarRowguid.IsReadOnly = false;
				
						colvarRowguid.DefaultSetting = @"(newid())";
				colvarRowguid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRowguid);
				
				TableSchema.TableColumn colvarTipoServicio = new TableSchema.TableColumn(schema);
				colvarTipoServicio.ColumnName = "TipoServicio";
				colvarTipoServicio.DataType = DbType.AnsiString;
				colvarTipoServicio.MaxLength = 50;
				colvarTipoServicio.AutoIncrement = false;
				colvarTipoServicio.IsNullable = true;
				colvarTipoServicio.IsPrimaryKey = false;
				colvarTipoServicio.IsForeignKey = false;
				colvarTipoServicio.IsReadOnly = false;
				colvarTipoServicio.DefaultSetting = @"";
				colvarTipoServicio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoServicio);
				
				TableSchema.TableColumn colvarTipoServicioSufijo = new TableSchema.TableColumn(schema);
				colvarTipoServicioSufijo.ColumnName = "TipoServicioSufijo";
				colvarTipoServicioSufijo.DataType = DbType.AnsiString;
				colvarTipoServicioSufijo.MaxLength = 2;
				colvarTipoServicioSufijo.AutoIncrement = false;
				colvarTipoServicioSufijo.IsNullable = true;
				colvarTipoServicioSufijo.IsPrimaryKey = false;
				colvarTipoServicioSufijo.IsForeignKey = false;
				colvarTipoServicioSufijo.IsReadOnly = false;
				colvarTipoServicioSufijo.DefaultSetting = @"";
				colvarTipoServicioSufijo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoServicioSufijo);
				
				TableSchema.TableColumn colvarServicio = new TableSchema.TableColumn(schema);
				colvarServicio.ColumnName = "Servicio";
				colvarServicio.DataType = DbType.AnsiString;
				colvarServicio.MaxLength = 250;
				colvarServicio.AutoIncrement = false;
				colvarServicio.IsNullable = true;
				colvarServicio.IsPrimaryKey = false;
				colvarServicio.IsForeignKey = false;
				colvarServicio.IsReadOnly = false;
				colvarServicio.DefaultSetting = @"";
				colvarServicio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServicio);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["SrmProvider"].AddSchema("SubTransacciones",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("SubTransaccionId")]
		[Bindable(true)]
		public int SubTransaccionId 
		{
			get { return GetColumnValue<int>(Columns.SubTransaccionId); }
			set { SetColumnValue(Columns.SubTransaccionId, value); }
		}
		  
		[XmlAttribute("TransaccionId")]
		[Bindable(true)]
		public int TransaccionId 
		{
			get { return GetColumnValue<int>(Columns.TransaccionId); }
			set { SetColumnValue(Columns.TransaccionId, value); }
		}
		  
		[XmlAttribute("TipoTransaccionId")]
		[Bindable(true)]
		public int TipoTransaccionId 
		{
			get { return GetColumnValue<int>(Columns.TipoTransaccionId); }
			set { SetColumnValue(Columns.TipoTransaccionId, value); }
		}
		  
		[XmlAttribute("TipoServicioId")]
		[Bindable(true)]
		public int TipoServicioId 
		{
			get { return GetColumnValue<int>(Columns.TipoServicioId); }
			set { SetColumnValue(Columns.TipoServicioId, value); }
		}
		  
		[XmlAttribute("DestinoTraslado")]
		[Bindable(true)]
		public string DestinoTraslado 
		{
			get { return GetColumnValue<string>(Columns.DestinoTraslado); }
			set { SetColumnValue(Columns.DestinoTraslado, value); }
		}
		  
		[XmlAttribute("FlowId")]
		[Bindable(true)]
		public Guid? FlowId 
		{
			get { return GetColumnValue<Guid?>(Columns.FlowId); }
			set { SetColumnValue(Columns.FlowId, value); }
		}
		  
		[XmlAttribute("Estatus")]
		[Bindable(true)]
		public int Estatus 
		{
			get { return GetColumnValue<int>(Columns.Estatus); }
			set { SetColumnValue(Columns.Estatus, value); }
		}
		  
		[XmlAttribute("Estatus2")]
		[Bindable(true)]
		public int? Estatus2 
		{
			get { return GetColumnValue<int?>(Columns.Estatus2); }
			set { SetColumnValue(Columns.Estatus2, value); }
		}
		  
		[XmlAttribute("CustomString1")]
		[Bindable(true)]
		public string CustomString1 
		{
			get { return GetColumnValue<string>(Columns.CustomString1); }
			set { SetColumnValue(Columns.CustomString1, value); }
		}
		  
		[XmlAttribute("CustomString2")]
		[Bindable(true)]
		public string CustomString2 
		{
			get { return GetColumnValue<string>(Columns.CustomString2); }
			set { SetColumnValue(Columns.CustomString2, value); }
		}
		  
		[XmlAttribute("CustomString3")]
		[Bindable(true)]
		public string CustomString3 
		{
			get { return GetColumnValue<string>(Columns.CustomString3); }
			set { SetColumnValue(Columns.CustomString3, value); }
		}
		  
		[XmlAttribute("CustomInt1")]
		[Bindable(true)]
		public int? CustomInt1 
		{
			get { return GetColumnValue<int?>(Columns.CustomInt1); }
			set { SetColumnValue(Columns.CustomInt1, value); }
		}
		  
		[XmlAttribute("CustomInt2")]
		[Bindable(true)]
		public int? CustomInt2 
		{
			get { return GetColumnValue<int?>(Columns.CustomInt2); }
			set { SetColumnValue(Columns.CustomInt2, value); }
		}
		  
		[XmlAttribute("CustomInt3")]
		[Bindable(true)]
		public int? CustomInt3 
		{
			get { return GetColumnValue<int?>(Columns.CustomInt3); }
			set { SetColumnValue(Columns.CustomInt3, value); }
		}
		  
		[XmlAttribute("CustomDateTime1")]
		[Bindable(true)]
		public DateTime? CustomDateTime1 
		{
			get { return GetColumnValue<DateTime?>(Columns.CustomDateTime1); }
			set { SetColumnValue(Columns.CustomDateTime1, value); }
		}
		  
		[XmlAttribute("CustomDateTime2")]
		[Bindable(true)]
		public DateTime? CustomDateTime2 
		{
			get { return GetColumnValue<DateTime?>(Columns.CustomDateTime2); }
			set { SetColumnValue(Columns.CustomDateTime2, value); }
		}
		  
		[XmlAttribute("CustomDecimal1")]
		[Bindable(true)]
		public decimal? CustomDecimal1 
		{
			get { return GetColumnValue<decimal?>(Columns.CustomDecimal1); }
			set { SetColumnValue(Columns.CustomDecimal1, value); }
		}
		  
		[XmlAttribute("CustomDecimal2")]
		[Bindable(true)]
		public decimal? CustomDecimal2 
		{
			get { return GetColumnValue<decimal?>(Columns.CustomDecimal2); }
			set { SetColumnValue(Columns.CustomDecimal2, value); }
		}
		  
		[XmlAttribute("FechaModificacion")]
		[Bindable(true)]
		public DateTime FechaModificacion 
		{
			get { return GetColumnValue<DateTime>(Columns.FechaModificacion); }
			set { SetColumnValue(Columns.FechaModificacion, value); }
		}
		  
		[XmlAttribute("Rowguid")]
		[Bindable(true)]
		public Guid Rowguid 
		{
			get { return GetColumnValue<Guid>(Columns.Rowguid); }
			set { SetColumnValue(Columns.Rowguid, value); }
		}
		  
		[XmlAttribute("TipoServicio")]
		[Bindable(true)]
		public string TipoServicio 
		{
			get { return GetColumnValue<string>(Columns.TipoServicio); }
			set { SetColumnValue(Columns.TipoServicio, value); }
		}
		  
		[XmlAttribute("TipoServicioSufijo")]
		[Bindable(true)]
		public string TipoServicioSufijo 
		{
			get { return GetColumnValue<string>(Columns.TipoServicioSufijo); }
			set { SetColumnValue(Columns.TipoServicioSufijo, value); }
		}
		  
		[XmlAttribute("Servicio")]
		[Bindable(true)]
		public string Servicio 
		{
			get { return GetColumnValue<string>(Columns.Servicio); }
			set { SetColumnValue(Columns.Servicio, value); }
		}
		
		#endregion
		
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a Transacciones ActiveRecord object related to this SubTransacciones
		/// 
		/// </summary>
		public CamaraComercio.DataAccess.SRM.Transacciones Transacciones
		{
			get { return CamaraComercio.DataAccess.SRM.Transacciones.FetchByID(this.TransaccionId); }
			set { SetColumnValue("TransaccionId", value.TransaccionId); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varTransaccionId,int varTipoTransaccionId,int varTipoServicioId,string varDestinoTraslado,Guid? varFlowId,int varEstatus,int? varEstatus2,string varCustomString1,string varCustomString2,string varCustomString3,int? varCustomInt1,int? varCustomInt2,int? varCustomInt3,DateTime? varCustomDateTime1,DateTime? varCustomDateTime2,decimal? varCustomDecimal1,decimal? varCustomDecimal2,DateTime varFechaModificacion,Guid varRowguid,string varTipoServicio,string varTipoServicioSufijo,string varServicio)
		{
			SubTransacciones item = new SubTransacciones();
			
			item.TransaccionId = varTransaccionId;
			
			item.TipoTransaccionId = varTipoTransaccionId;
			
			item.TipoServicioId = varTipoServicioId;
			
			item.DestinoTraslado = varDestinoTraslado;
			
			item.FlowId = varFlowId;
			
			item.Estatus = varEstatus;
			
			item.Estatus2 = varEstatus2;
			
			item.CustomString1 = varCustomString1;
			
			item.CustomString2 = varCustomString2;
			
			item.CustomString3 = varCustomString3;
			
			item.CustomInt1 = varCustomInt1;
			
			item.CustomInt2 = varCustomInt2;
			
			item.CustomInt3 = varCustomInt3;
			
			item.CustomDateTime1 = varCustomDateTime1;
			
			item.CustomDateTime2 = varCustomDateTime2;
			
			item.CustomDecimal1 = varCustomDecimal1;
			
			item.CustomDecimal2 = varCustomDecimal2;
			
			item.FechaModificacion = varFechaModificacion;
			
			item.Rowguid = varRowguid;
			
			item.TipoServicio = varTipoServicio;
			
			item.TipoServicioSufijo = varTipoServicioSufijo;
			
			item.Servicio = varServicio;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varSubTransaccionId,int varTransaccionId,int varTipoTransaccionId,int varTipoServicioId,string varDestinoTraslado,Guid? varFlowId,int varEstatus,int? varEstatus2,string varCustomString1,string varCustomString2,string varCustomString3,int? varCustomInt1,int? varCustomInt2,int? varCustomInt3,DateTime? varCustomDateTime1,DateTime? varCustomDateTime2,decimal? varCustomDecimal1,decimal? varCustomDecimal2,DateTime varFechaModificacion,Guid varRowguid,string varTipoServicio,string varTipoServicioSufijo,string varServicio)
		{
			SubTransacciones item = new SubTransacciones();
			
				item.SubTransaccionId = varSubTransaccionId;
			
				item.TransaccionId = varTransaccionId;
			
				item.TipoTransaccionId = varTipoTransaccionId;
			
				item.TipoServicioId = varTipoServicioId;
			
				item.DestinoTraslado = varDestinoTraslado;
			
				item.FlowId = varFlowId;
			
				item.Estatus = varEstatus;
			
				item.Estatus2 = varEstatus2;
			
				item.CustomString1 = varCustomString1;
			
				item.CustomString2 = varCustomString2;
			
				item.CustomString3 = varCustomString3;
			
				item.CustomInt1 = varCustomInt1;
			
				item.CustomInt2 = varCustomInt2;
			
				item.CustomInt3 = varCustomInt3;
			
				item.CustomDateTime1 = varCustomDateTime1;
			
				item.CustomDateTime2 = varCustomDateTime2;
			
				item.CustomDecimal1 = varCustomDecimal1;
			
				item.CustomDecimal2 = varCustomDecimal2;
			
				item.FechaModificacion = varFechaModificacion;
			
				item.Rowguid = varRowguid;
			
				item.TipoServicio = varTipoServicio;
			
				item.TipoServicioSufijo = varTipoServicioSufijo;
			
				item.Servicio = varServicio;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn SubTransaccionIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn TransaccionIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoTransaccionIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoServicioIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn DestinoTrasladoColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn FlowIdColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn EstatusColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn Estatus2Column
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomString1Column
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomString2Column
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomString3Column
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomInt1Column
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomInt2Column
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomInt3Column
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomDateTime1Column
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomDateTime2Column
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomDecimal1Column
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomDecimal2Column
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaModificacionColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn RowguidColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoServicioColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoServicioSufijoColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn ServicioColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string SubTransaccionId = @"SubTransaccionId";
			 public static string TransaccionId = @"TransaccionId";
			 public static string TipoTransaccionId = @"TipoTransaccionId";
			 public static string TipoServicioId = @"TipoServicioId";
			 public static string DestinoTraslado = @"DestinoTraslado";
			 public static string FlowId = @"FlowId";
			 public static string Estatus = @"Estatus";
			 public static string Estatus2 = @"Estatus2";
			 public static string CustomString1 = @"CustomString1";
			 public static string CustomString2 = @"CustomString2";
			 public static string CustomString3 = @"CustomString3";
			 public static string CustomInt1 = @"CustomInt1";
			 public static string CustomInt2 = @"CustomInt2";
			 public static string CustomInt3 = @"CustomInt3";
			 public static string CustomDateTime1 = @"CustomDateTime1";
			 public static string CustomDateTime2 = @"CustomDateTime2";
			 public static string CustomDecimal1 = @"CustomDecimal1";
			 public static string CustomDecimal2 = @"CustomDecimal2";
			 public static string FechaModificacion = @"FechaModificacion";
			 public static string Rowguid = @"rowguid";
			 public static string TipoServicio = @"TipoServicio";
			 public static string TipoServicioSufijo = @"TipoServicioSufijo";
			 public static string Servicio = @"Servicio";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
