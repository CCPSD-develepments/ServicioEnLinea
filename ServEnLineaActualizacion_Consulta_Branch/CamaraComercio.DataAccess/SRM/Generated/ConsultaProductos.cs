using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ConsultaProductos class.
    /// </summary>
    [Serializable]
    public partial class ConsultaProductosCollection : ReadOnlyList<ConsultaProductos, ConsultaProductosCollection>
    {        
        public ConsultaProductosCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the ConsultaProductos view.
    /// </summary>
    [Serializable]
    public partial class ConsultaProductos : ReadOnlyRecord<ConsultaProductos>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("ConsultaProductos", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"SRM_INFORMATION_SCHEMA";
                //columns
                
                TableSchema.TableColumn colvarProductoId = new TableSchema.TableColumn(schema);
                colvarProductoId.ColumnName = "ProductoId";
                colvarProductoId.DataType = DbType.Int32;
                colvarProductoId.MaxLength = 0;
                colvarProductoId.AutoIncrement = false;
                colvarProductoId.IsNullable = false;
                colvarProductoId.IsPrimaryKey = false;
                colvarProductoId.IsForeignKey = false;
                colvarProductoId.IsReadOnly = false;
                
                schema.Columns.Add(colvarProductoId);
                
                TableSchema.TableColumn colvarNombreProducto = new TableSchema.TableColumn(schema);
                colvarNombreProducto.ColumnName = "Nombre Producto";
                colvarNombreProducto.DataType = DbType.String;
                colvarNombreProducto.MaxLength = 100;
                colvarNombreProducto.AutoIncrement = false;
                colvarNombreProducto.IsNullable = false;
                colvarNombreProducto.IsPrimaryKey = false;
                colvarNombreProducto.IsForeignKey = false;
                colvarNombreProducto.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreProducto);
                
                TableSchema.TableColumn colvarNumeroSistemaArmonizado = new TableSchema.TableColumn(schema);
                colvarNumeroSistemaArmonizado.ColumnName = "Numero Sistema Armonizado";
                colvarNumeroSistemaArmonizado.DataType = DbType.String;
                colvarNumeroSistemaArmonizado.MaxLength = 10;
                colvarNumeroSistemaArmonizado.AutoIncrement = false;
                colvarNumeroSistemaArmonizado.IsNullable = true;
                colvarNumeroSistemaArmonizado.IsPrimaryKey = false;
                colvarNumeroSistemaArmonizado.IsForeignKey = false;
                colvarNumeroSistemaArmonizado.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumeroSistemaArmonizado);
                
                TableSchema.TableColumn colvarNombreProductoArmonizado = new TableSchema.TableColumn(schema);
                colvarNombreProductoArmonizado.ColumnName = "Nombre Producto Armonizado";
                colvarNombreProductoArmonizado.DataType = DbType.String;
                colvarNombreProductoArmonizado.MaxLength = 300;
                colvarNombreProductoArmonizado.AutoIncrement = false;
                colvarNombreProductoArmonizado.IsNullable = true;
                colvarNombreProductoArmonizado.IsPrimaryKey = false;
                colvarNombreProductoArmonizado.IsForeignKey = false;
                colvarNombreProductoArmonizado.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreProductoArmonizado);
                
                TableSchema.TableColumn colvarRegistroId = new TableSchema.TableColumn(schema);
                colvarRegistroId.ColumnName = "RegistroId";
                colvarRegistroId.DataType = DbType.Int32;
                colvarRegistroId.MaxLength = 0;
                colvarRegistroId.AutoIncrement = false;
                colvarRegistroId.IsNullable = false;
                colvarRegistroId.IsPrimaryKey = false;
                colvarRegistroId.IsForeignKey = false;
                colvarRegistroId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegistroId);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("ConsultaProductos",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ConsultaProductos()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ConsultaProductos(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ConsultaProductos(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ConsultaProductos(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ProductoId")]
        [Bindable(true)]
        public int ProductoId 
	    {
		    get
		    {
			    return GetColumnValue<int>("ProductoId");
		    }
            set 
		    {
			    SetColumnValue("ProductoId", value);
            }
        }
	      
        [XmlAttribute("NombreProducto")]
        [Bindable(true)]
        public string NombreProducto 
	    {
		    get
		    {
			    return GetColumnValue<string>("Nombre Producto");
		    }
            set 
		    {
			    SetColumnValue("Nombre Producto", value);
            }
        }
	      
        [XmlAttribute("NumeroSistemaArmonizado")]
        [Bindable(true)]
        public string NumeroSistemaArmonizado 
	    {
		    get
		    {
			    return GetColumnValue<string>("Numero Sistema Armonizado");
		    }
            set 
		    {
			    SetColumnValue("Numero Sistema Armonizado", value);
            }
        }
	      
        [XmlAttribute("NombreProductoArmonizado")]
        [Bindable(true)]
        public string NombreProductoArmonizado 
	    {
		    get
		    {
			    return GetColumnValue<string>("Nombre Producto Armonizado");
		    }
            set 
		    {
			    SetColumnValue("Nombre Producto Armonizado", value);
            }
        }
	      
        [XmlAttribute("RegistroId")]
        [Bindable(true)]
        public int RegistroId 
	    {
		    get
		    {
			    return GetColumnValue<int>("RegistroId");
		    }
            set 
		    {
			    SetColumnValue("RegistroId", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ProductoId = @"ProductoId";
            
            public static string NombreProducto = @"Nombre Producto";
            
            public static string NumeroSistemaArmonizado = @"Numero Sistema Armonizado";
            
            public static string NombreProductoArmonizado = @"Nombre Producto Armonizado";
            
            public static string RegistroId = @"RegistroId";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
