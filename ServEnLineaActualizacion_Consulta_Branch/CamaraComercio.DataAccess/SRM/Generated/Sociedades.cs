using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
	/// <summary>
	/// Strongly-typed collection for the Sociedades class.
	/// </summary>
    [Serializable]
	public partial class SociedadesCollection : ActiveList<Sociedades, SociedadesCollection>
	{	   
		public SociedadesCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SociedadesCollection</returns>
		public SociedadesCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Sociedades o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Sociedades table.
	/// </summary>
	[Serializable]
	public partial class Sociedades : ActiveRecord<Sociedades>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Sociedades()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Sociedades(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Sociedades(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Sociedades(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Sociedades", TableType.Table, DataService.GetInstance("SrmProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"Sociedad";
				//columns
				
				TableSchema.TableColumn colvarSociedadId = new TableSchema.TableColumn(schema);
				colvarSociedadId.ColumnName = "SociedadId";
				colvarSociedadId.DataType = DbType.Int32;
				colvarSociedadId.MaxLength = 0;
				colvarSociedadId.AutoIncrement = true;
				colvarSociedadId.IsNullable = false;
				colvarSociedadId.IsPrimaryKey = true;
				colvarSociedadId.IsForeignKey = false;
				colvarSociedadId.IsReadOnly = false;
				colvarSociedadId.DefaultSetting = @"";
				colvarSociedadId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSociedadId);
				
				TableSchema.TableColumn colvarTipoSociedadId = new TableSchema.TableColumn(schema);
				colvarTipoSociedadId.ColumnName = "TipoSociedadId";
				colvarTipoSociedadId.DataType = DbType.Int32;
				colvarTipoSociedadId.MaxLength = 0;
				colvarTipoSociedadId.AutoIncrement = false;
				colvarTipoSociedadId.IsNullable = true;
				colvarTipoSociedadId.IsPrimaryKey = false;
				colvarTipoSociedadId.IsForeignKey = false;
				colvarTipoSociedadId.IsReadOnly = false;
				colvarTipoSociedadId.DefaultSetting = @"";
				colvarTipoSociedadId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoSociedadId);
				
				TableSchema.TableColumn colvarNombreSocial = new TableSchema.TableColumn(schema);
				colvarNombreSocial.ColumnName = "NombreSocial";
				colvarNombreSocial.DataType = DbType.String;
				colvarNombreSocial.MaxLength = 150;
				colvarNombreSocial.AutoIncrement = false;
				colvarNombreSocial.IsNullable = true;
				colvarNombreSocial.IsPrimaryKey = false;
				colvarNombreSocial.IsForeignKey = false;
				colvarNombreSocial.IsReadOnly = false;
				colvarNombreSocial.DefaultSetting = @"";
				colvarNombreSocial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreSocial);
				
				TableSchema.TableColumn colvarRnc = new TableSchema.TableColumn(schema);
				colvarRnc.ColumnName = "Rnc";
				colvarRnc.DataType = DbType.String;
				colvarRnc.MaxLength = 15;
				colvarRnc.AutoIncrement = false;
				colvarRnc.IsNullable = true;
				colvarRnc.IsPrimaryKey = false;
				colvarRnc.IsForeignKey = false;
				colvarRnc.IsReadOnly = false;
				colvarRnc.DefaultSetting = @"";
				colvarRnc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRnc);
				
				TableSchema.TableColumn colvarEsNacional = new TableSchema.TableColumn(schema);
				colvarEsNacional.ColumnName = "EsNacional";
				colvarEsNacional.DataType = DbType.Boolean;
				colvarEsNacional.MaxLength = 0;
				colvarEsNacional.AutoIncrement = false;
				colvarEsNacional.IsNullable = false;
				colvarEsNacional.IsPrimaryKey = false;
				colvarEsNacional.IsForeignKey = false;
				colvarEsNacional.IsReadOnly = false;
				
						colvarEsNacional.DefaultSetting = @"((1))";
				colvarEsNacional.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEsNacional);
				
				TableSchema.TableColumn colvarNacionalidadId = new TableSchema.TableColumn(schema);
				colvarNacionalidadId.ColumnName = "NacionalidadId";
				colvarNacionalidadId.DataType = DbType.Int32;
				colvarNacionalidadId.MaxLength = 0;
				colvarNacionalidadId.AutoIncrement = false;
				colvarNacionalidadId.IsNullable = true;
				colvarNacionalidadId.IsPrimaryKey = false;
				colvarNacionalidadId.IsForeignKey = false;
				colvarNacionalidadId.IsReadOnly = false;
				colvarNacionalidadId.DefaultSetting = @"";
				colvarNacionalidadId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNacionalidadId);
				
				TableSchema.TableColumn colvarFechaConstitucion = new TableSchema.TableColumn(schema);
				colvarFechaConstitucion.ColumnName = "FechaConstitucion";
				colvarFechaConstitucion.DataType = DbType.DateTime;
				colvarFechaConstitucion.MaxLength = 0;
				colvarFechaConstitucion.AutoIncrement = false;
				colvarFechaConstitucion.IsNullable = true;
				colvarFechaConstitucion.IsPrimaryKey = false;
				colvarFechaConstitucion.IsForeignKey = false;
				colvarFechaConstitucion.IsReadOnly = false;
				colvarFechaConstitucion.DefaultSetting = @"";
				colvarFechaConstitucion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaConstitucion);
				
				TableSchema.TableColumn colvarDuracionSociedad = new TableSchema.TableColumn(schema);
				colvarDuracionSociedad.ColumnName = "DuracionSociedad";
				colvarDuracionSociedad.DataType = DbType.AnsiString;
				colvarDuracionSociedad.MaxLength = 30;
				colvarDuracionSociedad.AutoIncrement = false;
				colvarDuracionSociedad.IsNullable = true;
				colvarDuracionSociedad.IsPrimaryKey = false;
				colvarDuracionSociedad.IsForeignKey = false;
				colvarDuracionSociedad.IsReadOnly = false;
				colvarDuracionSociedad.DefaultSetting = @"";
				colvarDuracionSociedad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDuracionSociedad);
				
				TableSchema.TableColumn colvarFechaAsamblea = new TableSchema.TableColumn(schema);
				colvarFechaAsamblea.ColumnName = "FechaAsamblea";
				colvarFechaAsamblea.DataType = DbType.DateTime;
				colvarFechaAsamblea.MaxLength = 0;
				colvarFechaAsamblea.AutoIncrement = false;
				colvarFechaAsamblea.IsNullable = true;
				colvarFechaAsamblea.IsPrimaryKey = false;
				colvarFechaAsamblea.IsForeignKey = false;
				colvarFechaAsamblea.IsReadOnly = false;
				colvarFechaAsamblea.DefaultSetting = @"";
				colvarFechaAsamblea.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaAsamblea);
				
				TableSchema.TableColumn colvarDuraccionDirectiva = new TableSchema.TableColumn(schema);
				colvarDuraccionDirectiva.ColumnName = "DuraccionDirectiva";
				colvarDuraccionDirectiva.DataType = DbType.Int32;
				colvarDuraccionDirectiva.MaxLength = 0;
				colvarDuraccionDirectiva.AutoIncrement = false;
				colvarDuraccionDirectiva.IsNullable = true;
				colvarDuraccionDirectiva.IsPrimaryKey = false;
				colvarDuraccionDirectiva.IsForeignKey = false;
				colvarDuraccionDirectiva.IsReadOnly = false;
				colvarDuraccionDirectiva.DefaultSetting = @"";
				colvarDuraccionDirectiva.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDuraccionDirectiva);
				
				TableSchema.TableColumn colvarEstatusId = new TableSchema.TableColumn(schema);
				colvarEstatusId.ColumnName = "EstatusId";
				colvarEstatusId.DataType = DbType.Int32;
				colvarEstatusId.MaxLength = 0;
				colvarEstatusId.AutoIncrement = false;
				colvarEstatusId.IsNullable = true;
				colvarEstatusId.IsPrimaryKey = false;
				colvarEstatusId.IsForeignKey = false;
				colvarEstatusId.IsReadOnly = false;
				colvarEstatusId.DefaultSetting = @"";
				colvarEstatusId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstatusId);
				
				TableSchema.TableColumn colvarEsEnteRegulado = new TableSchema.TableColumn(schema);
				colvarEsEnteRegulado.ColumnName = "EsEnteRegulado";
				colvarEsEnteRegulado.DataType = DbType.Boolean;
				colvarEsEnteRegulado.MaxLength = 0;
				colvarEsEnteRegulado.AutoIncrement = false;
				colvarEsEnteRegulado.IsNullable = false;
				colvarEsEnteRegulado.IsPrimaryKey = false;
				colvarEsEnteRegulado.IsForeignKey = false;
				colvarEsEnteRegulado.IsReadOnly = false;
				
						colvarEsEnteRegulado.DefaultSetting = @"((0))";
				colvarEsEnteRegulado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEsEnteRegulado);
				
				TableSchema.TableColumn colvarTipoEnteReguladoId = new TableSchema.TableColumn(schema);
				colvarTipoEnteReguladoId.ColumnName = "TipoEnteReguladoId";
				colvarTipoEnteReguladoId.DataType = DbType.Int32;
				colvarTipoEnteReguladoId.MaxLength = 0;
				colvarTipoEnteReguladoId.AutoIncrement = false;
				colvarTipoEnteReguladoId.IsNullable = true;
				colvarTipoEnteReguladoId.IsPrimaryKey = false;
				colvarTipoEnteReguladoId.IsForeignKey = false;
				colvarTipoEnteReguladoId.IsReadOnly = false;
				colvarTipoEnteReguladoId.DefaultSetting = @"";
				colvarTipoEnteReguladoId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoEnteReguladoId);
				
				TableSchema.TableColumn colvarNoResolucion = new TableSchema.TableColumn(schema);
				colvarNoResolucion.ColumnName = "NoResolucion";
				colvarNoResolucion.DataType = DbType.String;
				colvarNoResolucion.MaxLength = 15;
				colvarNoResolucion.AutoIncrement = false;
				colvarNoResolucion.IsNullable = true;
				colvarNoResolucion.IsPrimaryKey = false;
				colvarNoResolucion.IsForeignKey = false;
				colvarNoResolucion.IsReadOnly = false;
				colvarNoResolucion.DefaultSetting = @"";
				colvarNoResolucion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoResolucion);
				
				TableSchema.TableColumn colvarNumeroNaveIndustrial = new TableSchema.TableColumn(schema);
				colvarNumeroNaveIndustrial.ColumnName = "NumeroNaveIndustrial";
				colvarNumeroNaveIndustrial.DataType = DbType.String;
				colvarNumeroNaveIndustrial.MaxLength = 20;
				colvarNumeroNaveIndustrial.AutoIncrement = false;
				colvarNumeroNaveIndustrial.IsNullable = true;
				colvarNumeroNaveIndustrial.IsPrimaryKey = false;
				colvarNumeroNaveIndustrial.IsForeignKey = false;
				colvarNumeroNaveIndustrial.IsReadOnly = false;
				colvarNumeroNaveIndustrial.DefaultSetting = @"";
				colvarNumeroNaveIndustrial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNumeroNaveIndustrial);
				
				TableSchema.TableColumn colvarNombreSiglas = new TableSchema.TableColumn(schema);
				colvarNombreSiglas.ColumnName = "NombreSiglas";
				colvarNombreSiglas.DataType = DbType.String;
				colvarNombreSiglas.MaxLength = 255;
				colvarNombreSiglas.AutoIncrement = false;
				colvarNombreSiglas.IsNullable = true;
				colvarNombreSiglas.IsPrimaryKey = false;
				colvarNombreSiglas.IsForeignKey = false;
				colvarNombreSiglas.IsReadOnly = false;
				colvarNombreSiglas.DefaultSetting = @"";
				colvarNombreSiglas.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreSiglas);
				
				TableSchema.TableColumn colvarSiglasConfig = new TableSchema.TableColumn(schema);
				colvarSiglasConfig.ColumnName = "SiglasConfig";
				colvarSiglasConfig.DataType = DbType.String;
				colvarSiglasConfig.MaxLength = 5;
				colvarSiglasConfig.AutoIncrement = false;
				colvarSiglasConfig.IsNullable = true;
				colvarSiglasConfig.IsPrimaryKey = false;
				colvarSiglasConfig.IsForeignKey = false;
				colvarSiglasConfig.IsReadOnly = false;
				colvarSiglasConfig.DefaultSetting = @"";
				colvarSiglasConfig.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSiglasConfig);
				
				TableSchema.TableColumn colvarSuscripcion = new TableSchema.TableColumn(schema);
				colvarSuscripcion.ColumnName = "Suscripcion";
				colvarSuscripcion.DataType = DbType.String;
				colvarSuscripcion.MaxLength = 2;
				colvarSuscripcion.AutoIncrement = false;
				colvarSuscripcion.IsNullable = true;
				colvarSuscripcion.IsPrimaryKey = false;
				colvarSuscripcion.IsForeignKey = false;
				colvarSuscripcion.IsReadOnly = false;
				colvarSuscripcion.DefaultSetting = @"";
				colvarSuscripcion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSuscripcion);
				
				TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
				colvarFechaModificacion.ColumnName = "FechaModificacion";
				colvarFechaModificacion.DataType = DbType.DateTime;
				colvarFechaModificacion.MaxLength = 0;
				colvarFechaModificacion.AutoIncrement = false;
				colvarFechaModificacion.IsNullable = false;
				colvarFechaModificacion.IsPrimaryKey = false;
				colvarFechaModificacion.IsForeignKey = false;
				colvarFechaModificacion.IsReadOnly = false;
				
						colvarFechaModificacion.DefaultSetting = @"(getdate())";
				colvarFechaModificacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaModificacion);
				
				TableSchema.TableColumn colvarRowguid = new TableSchema.TableColumn(schema);
				colvarRowguid.ColumnName = "rowguid";
				colvarRowguid.DataType = DbType.Guid;
				colvarRowguid.MaxLength = 0;
				colvarRowguid.AutoIncrement = false;
				colvarRowguid.IsNullable = false;
				colvarRowguid.IsPrimaryKey = false;
				colvarRowguid.IsForeignKey = false;
				colvarRowguid.IsReadOnly = false;
				
						colvarRowguid.DefaultSetting = @"(newid())";
				colvarRowguid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRowguid);
				
				TableSchema.TableColumn colvarDireccionId = new TableSchema.TableColumn(schema);
				colvarDireccionId.ColumnName = "DireccionId";
				colvarDireccionId.DataType = DbType.Int32;
				colvarDireccionId.MaxLength = 0;
				colvarDireccionId.AutoIncrement = false;
				colvarDireccionId.IsNullable = true;
				colvarDireccionId.IsPrimaryKey = false;
				colvarDireccionId.IsForeignKey = false;
				colvarDireccionId.IsReadOnly = false;
				colvarDireccionId.DefaultSetting = @"";
				colvarDireccionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDireccionId);
				
				TableSchema.TableColumn colvarTipoSociedad = new TableSchema.TableColumn(schema);
				colvarTipoSociedad.ColumnName = "TipoSociedad";
				colvarTipoSociedad.DataType = DbType.AnsiString;
				colvarTipoSociedad.MaxLength = 100;
				colvarTipoSociedad.AutoIncrement = false;
				colvarTipoSociedad.IsNullable = true;
				colvarTipoSociedad.IsPrimaryKey = false;
				colvarTipoSociedad.IsForeignKey = false;
				colvarTipoSociedad.IsReadOnly = false;
				colvarTipoSociedad.DefaultSetting = @"";
				colvarTipoSociedad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoSociedad);
				
				TableSchema.TableColumn colvarSufijo = new TableSchema.TableColumn(schema);
				colvarSufijo.ColumnName = "Sufijo";
				colvarSufijo.DataType = DbType.AnsiString;
				colvarSufijo.MaxLength = 10;
				colvarSufijo.AutoIncrement = false;
				colvarSufijo.IsNullable = true;
				colvarSufijo.IsPrimaryKey = false;
				colvarSufijo.IsForeignKey = false;
				colvarSufijo.IsReadOnly = false;
				colvarSufijo.DefaultSetting = @"";
				colvarSufijo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSufijo);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["SrmProvider"].AddSchema("Sociedades",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("SociedadId")]
		[Bindable(true)]
		public int SociedadId 
		{
			get { return GetColumnValue<int>(Columns.SociedadId); }
			set { SetColumnValue(Columns.SociedadId, value); }
		}
		  
		[XmlAttribute("TipoSociedadId")]
		[Bindable(true)]
		public int? TipoSociedadId 
		{
			get { return GetColumnValue<int?>(Columns.TipoSociedadId); }
			set { SetColumnValue(Columns.TipoSociedadId, value); }
		}
		  
		[XmlAttribute("NombreSocial")]
		[Bindable(true)]
		public string NombreSocial 
		{
			get { return GetColumnValue<string>(Columns.NombreSocial); }
			set { SetColumnValue(Columns.NombreSocial, value); }
		}
		  
		[XmlAttribute("Rnc")]
		[Bindable(true)]
		public string Rnc 
		{
			get { return GetColumnValue<string>(Columns.Rnc); }
			set { SetColumnValue(Columns.Rnc, value); }
		}
		  
		[XmlAttribute("EsNacional")]
		[Bindable(true)]
		public bool EsNacional 
		{
			get { return GetColumnValue<bool>(Columns.EsNacional); }
			set { SetColumnValue(Columns.EsNacional, value); }
		}
		  
		[XmlAttribute("NacionalidadId")]
		[Bindable(true)]
		public int? NacionalidadId 
		{
			get { return GetColumnValue<int?>(Columns.NacionalidadId); }
			set { SetColumnValue(Columns.NacionalidadId, value); }
		}
		  
		[XmlAttribute("FechaConstitucion")]
		[Bindable(true)]
		public DateTime? FechaConstitucion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaConstitucion); }
			set { SetColumnValue(Columns.FechaConstitucion, value); }
		}
		  
		[XmlAttribute("DuracionSociedad")]
		[Bindable(true)]
		public string DuracionSociedad 
		{
			get { return GetColumnValue<string>(Columns.DuracionSociedad); }
			set { SetColumnValue(Columns.DuracionSociedad, value); }
		}
		  
		[XmlAttribute("FechaAsamblea")]
		[Bindable(true)]
		public DateTime? FechaAsamblea 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaAsamblea); }
			set { SetColumnValue(Columns.FechaAsamblea, value); }
		}
		  
		[XmlAttribute("DuraccionDirectiva")]
		[Bindable(true)]
		public int? DuraccionDirectiva 
		{
			get { return GetColumnValue<int?>(Columns.DuraccionDirectiva); }
			set { SetColumnValue(Columns.DuraccionDirectiva, value); }
		}
		  
		[XmlAttribute("EstatusId")]
		[Bindable(true)]
		public int? EstatusId 
		{
			get { return GetColumnValue<int?>(Columns.EstatusId); }
			set { SetColumnValue(Columns.EstatusId, value); }
		}
		  
		[XmlAttribute("EsEnteRegulado")]
		[Bindable(true)]
		public bool EsEnteRegulado 
		{
			get { return GetColumnValue<bool>(Columns.EsEnteRegulado); }
			set { SetColumnValue(Columns.EsEnteRegulado, value); }
		}
		  
		[XmlAttribute("TipoEnteReguladoId")]
		[Bindable(true)]
		public int? TipoEnteReguladoId 
		{
			get { return GetColumnValue<int?>(Columns.TipoEnteReguladoId); }
			set { SetColumnValue(Columns.TipoEnteReguladoId, value); }
		}
		  
		[XmlAttribute("NoResolucion")]
		[Bindable(true)]
		public string NoResolucion 
		{
			get { return GetColumnValue<string>(Columns.NoResolucion); }
			set { SetColumnValue(Columns.NoResolucion, value); }
		}
		  
		[XmlAttribute("NumeroNaveIndustrial")]
		[Bindable(true)]
		public string NumeroNaveIndustrial 
		{
			get { return GetColumnValue<string>(Columns.NumeroNaveIndustrial); }
			set { SetColumnValue(Columns.NumeroNaveIndustrial, value); }
		}
		  
		[XmlAttribute("NombreSiglas")]
		[Bindable(true)]
		public string NombreSiglas 
		{
			get { return GetColumnValue<string>(Columns.NombreSiglas); }
			set { SetColumnValue(Columns.NombreSiglas, value); }
		}
		  
		[XmlAttribute("SiglasConfig")]
		[Bindable(true)]
		public string SiglasConfig 
		{
			get { return GetColumnValue<string>(Columns.SiglasConfig); }
			set { SetColumnValue(Columns.SiglasConfig, value); }
		}
		  
		[XmlAttribute("Suscripcion")]
		[Bindable(true)]
		public string Suscripcion 
		{
			get { return GetColumnValue<string>(Columns.Suscripcion); }
			set { SetColumnValue(Columns.Suscripcion, value); }
		}
		  
		[XmlAttribute("FechaModificacion")]
		[Bindable(true)]
		public DateTime FechaModificacion 
		{
			get { return GetColumnValue<DateTime>(Columns.FechaModificacion); }
			set { SetColumnValue(Columns.FechaModificacion, value); }
		}
		  
		[XmlAttribute("Rowguid")]
		[Bindable(true)]
		public Guid Rowguid 
		{
			get { return GetColumnValue<Guid>(Columns.Rowguid); }
			set { SetColumnValue(Columns.Rowguid, value); }
		}
		  
		[XmlAttribute("DireccionId")]
		[Bindable(true)]
		public int? DireccionId 
		{
			get { return GetColumnValue<int?>(Columns.DireccionId); }
			set { SetColumnValue(Columns.DireccionId, value); }
		}
		  
		[XmlAttribute("TipoSociedad")]
		[Bindable(true)]
		public string TipoSociedad 
		{
			get { return GetColumnValue<string>(Columns.TipoSociedad); }
			set { SetColumnValue(Columns.TipoSociedad, value); }
		}
		  
		[XmlAttribute("Sufijo")]
		[Bindable(true)]
		public string Sufijo 
		{
			get { return GetColumnValue<string>(Columns.Sufijo); }
			set { SetColumnValue(Columns.Sufijo, value); }
		}
		
		#endregion
		
		
		#region PrimaryKey Methods		
		
        protected override void SetPrimaryKey(object oValue)
        {
            base.SetPrimaryKey(oValue);
            
            SetPKValues();
        }
        
		
		public CamaraComercio.DataAccess.SRM.SociedadesRegistrosCollection SociedadesRegistrosRecords()
		{
			return new CamaraComercio.DataAccess.SRM.SociedadesRegistrosCollection().Where(SociedadesRegistros.Columns.SociedadId, SociedadId).Load();
		}
		public CamaraComercio.DataAccess.SRM.SuscursalesCollection SuscursalesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.SuscursalesCollection().Where(Suscursales.Columns.SociedadId, SociedadId).Load();
		}
		#endregion
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varTipoSociedadId,string varNombreSocial,string varRnc,bool varEsNacional,int? varNacionalidadId,DateTime? varFechaConstitucion,string varDuracionSociedad,DateTime? varFechaAsamblea,int? varDuraccionDirectiva,int? varEstatusId,bool varEsEnteRegulado,int? varTipoEnteReguladoId,string varNoResolucion,string varNumeroNaveIndustrial,string varNombreSiglas,string varSiglasConfig,string varSuscripcion,DateTime varFechaModificacion,Guid varRowguid,int? varDireccionId,string varTipoSociedad,string varSufijo)
		{
			Sociedades item = new Sociedades();
			
			item.TipoSociedadId = varTipoSociedadId;
			
			item.NombreSocial = varNombreSocial;
			
			item.Rnc = varRnc;
			
			item.EsNacional = varEsNacional;
			
			item.NacionalidadId = varNacionalidadId;
			
			item.FechaConstitucion = varFechaConstitucion;
			
			item.DuracionSociedad = varDuracionSociedad;
			
			item.FechaAsamblea = varFechaAsamblea;
			
			item.DuraccionDirectiva = varDuraccionDirectiva;
			
			item.EstatusId = varEstatusId;
			
			item.EsEnteRegulado = varEsEnteRegulado;
			
			item.TipoEnteReguladoId = varTipoEnteReguladoId;
			
			item.NoResolucion = varNoResolucion;
			
			item.NumeroNaveIndustrial = varNumeroNaveIndustrial;
			
			item.NombreSiglas = varNombreSiglas;
			
			item.SiglasConfig = varSiglasConfig;
			
			item.Suscripcion = varSuscripcion;
			
			item.FechaModificacion = varFechaModificacion;
			
			item.Rowguid = varRowguid;
			
			item.DireccionId = varDireccionId;
			
			item.TipoSociedad = varTipoSociedad;
			
			item.Sufijo = varSufijo;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varSociedadId,int? varTipoSociedadId,string varNombreSocial,string varRnc,bool varEsNacional,int? varNacionalidadId,DateTime? varFechaConstitucion,string varDuracionSociedad,DateTime? varFechaAsamblea,int? varDuraccionDirectiva,int? varEstatusId,bool varEsEnteRegulado,int? varTipoEnteReguladoId,string varNoResolucion,string varNumeroNaveIndustrial,string varNombreSiglas,string varSiglasConfig,string varSuscripcion,DateTime varFechaModificacion,Guid varRowguid,int? varDireccionId,string varTipoSociedad,string varSufijo)
		{
			Sociedades item = new Sociedades();
			
				item.SociedadId = varSociedadId;
			
				item.TipoSociedadId = varTipoSociedadId;
			
				item.NombreSocial = varNombreSocial;
			
				item.Rnc = varRnc;
			
				item.EsNacional = varEsNacional;
			
				item.NacionalidadId = varNacionalidadId;
			
				item.FechaConstitucion = varFechaConstitucion;
			
				item.DuracionSociedad = varDuracionSociedad;
			
				item.FechaAsamblea = varFechaAsamblea;
			
				item.DuraccionDirectiva = varDuraccionDirectiva;
			
				item.EstatusId = varEstatusId;
			
				item.EsEnteRegulado = varEsEnteRegulado;
			
				item.TipoEnteReguladoId = varTipoEnteReguladoId;
			
				item.NoResolucion = varNoResolucion;
			
				item.NumeroNaveIndustrial = varNumeroNaveIndustrial;
			
				item.NombreSiglas = varNombreSiglas;
			
				item.SiglasConfig = varSiglasConfig;
			
				item.Suscripcion = varSuscripcion;
			
				item.FechaModificacion = varFechaModificacion;
			
				item.Rowguid = varRowguid;
			
				item.DireccionId = varDireccionId;
			
				item.TipoSociedad = varTipoSociedad;
			
				item.Sufijo = varSufijo;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn SociedadIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoSociedadIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreSocialColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn RncColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn EsNacionalColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NacionalidadIdColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaConstitucionColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn DuracionSociedadColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaAsambleaColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn DuraccionDirectivaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn EstatusIdColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn EsEnteReguladoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoEnteReguladoIdColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NoResolucionColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NumeroNaveIndustrialColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreSiglasColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn SiglasConfigColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn SuscripcionColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaModificacionColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn RowguidColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionIdColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoSociedadColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn SufijoColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string SociedadId = @"SociedadId";
			 public static string TipoSociedadId = @"TipoSociedadId";
			 public static string NombreSocial = @"NombreSocial";
			 public static string Rnc = @"Rnc";
			 public static string EsNacional = @"EsNacional";
			 public static string NacionalidadId = @"NacionalidadId";
			 public static string FechaConstitucion = @"FechaConstitucion";
			 public static string DuracionSociedad = @"DuracionSociedad";
			 public static string FechaAsamblea = @"FechaAsamblea";
			 public static string DuraccionDirectiva = @"DuraccionDirectiva";
			 public static string EstatusId = @"EstatusId";
			 public static string EsEnteRegulado = @"EsEnteRegulado";
			 public static string TipoEnteReguladoId = @"TipoEnteReguladoId";
			 public static string NoResolucion = @"NoResolucion";
			 public static string NumeroNaveIndustrial = @"NumeroNaveIndustrial";
			 public static string NombreSiglas = @"NombreSiglas";
			 public static string SiglasConfig = @"SiglasConfig";
			 public static string Suscripcion = @"Suscripcion";
			 public static string FechaModificacion = @"FechaModificacion";
			 public static string Rowguid = @"rowguid";
			 public static string DireccionId = @"DireccionId";
			 public static string TipoSociedad = @"TipoSociedad";
			 public static string Sufijo = @"Sufijo";
						
		}
		#endregion
		
		#region Update PK Collections
		
        public void SetPKValues()
        {
}
        #endregion
    
        #region Deep Save
		
        public void DeepSave()
        {
            Save();
            
}
        #endregion
	}
}
