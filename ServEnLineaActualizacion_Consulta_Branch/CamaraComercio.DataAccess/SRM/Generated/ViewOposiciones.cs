using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewOposiciones class.
    /// </summary>
    [Serializable]
    public partial class ViewOposicionesCollection : ReadOnlyList<ViewOposiciones, ViewOposicionesCollection>
    {        
        public ViewOposicionesCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_Oposiciones view.
    /// </summary>
    [Serializable]
    public partial class ViewOposiciones : ReadOnlyRecord<ViewOposiciones>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_Oposiciones", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"Sistema";
                //columns
                
                TableSchema.TableColumn colvarOposicionId = new TableSchema.TableColumn(schema);
                colvarOposicionId.ColumnName = "OposicionId";
                colvarOposicionId.DataType = DbType.Int32;
                colvarOposicionId.MaxLength = 0;
                colvarOposicionId.AutoIncrement = false;
                colvarOposicionId.IsNullable = false;
                colvarOposicionId.IsPrimaryKey = false;
                colvarOposicionId.IsForeignKey = false;
                colvarOposicionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarOposicionId);
                
                TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
                colvarTransaccionId.ColumnName = "TransaccionId";
                colvarTransaccionId.DataType = DbType.Int32;
                colvarTransaccionId.MaxLength = 0;
                colvarTransaccionId.AutoIncrement = false;
                colvarTransaccionId.IsNullable = true;
                colvarTransaccionId.IsPrimaryKey = false;
                colvarTransaccionId.IsForeignKey = false;
                colvarTransaccionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTransaccionId);
                
                TableSchema.TableColumn colvarNumeroActo = new TableSchema.TableColumn(schema);
                colvarNumeroActo.ColumnName = "NumeroActo";
                colvarNumeroActo.DataType = DbType.String;
                colvarNumeroActo.MaxLength = 20;
                colvarNumeroActo.AutoIncrement = false;
                colvarNumeroActo.IsNullable = true;
                colvarNumeroActo.IsPrimaryKey = false;
                colvarNumeroActo.IsForeignKey = false;
                colvarNumeroActo.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumeroActo);
                
                TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
                colvarFecha.ColumnName = "Fecha";
                colvarFecha.DataType = DbType.DateTime;
                colvarFecha.MaxLength = 0;
                colvarFecha.AutoIncrement = false;
                colvarFecha.IsNullable = false;
                colvarFecha.IsPrimaryKey = false;
                colvarFecha.IsForeignKey = false;
                colvarFecha.IsReadOnly = false;
                
                schema.Columns.Add(colvarFecha);
                
                TableSchema.TableColumn colvarApoderado = new TableSchema.TableColumn(schema);
                colvarApoderado.ColumnName = "Apoderado";
                colvarApoderado.DataType = DbType.AnsiString;
                colvarApoderado.MaxLength = 50;
                colvarApoderado.AutoIncrement = false;
                colvarApoderado.IsNullable = true;
                colvarApoderado.IsPrimaryKey = false;
                colvarApoderado.IsForeignKey = false;
                colvarApoderado.IsReadOnly = false;
                
                schema.Columns.Add(colvarApoderado);
                
                TableSchema.TableColumn colvarTipoSentenciaId = new TableSchema.TableColumn(schema);
                colvarTipoSentenciaId.ColumnName = "TipoSentenciaId";
                colvarTipoSentenciaId.DataType = DbType.Int32;
                colvarTipoSentenciaId.MaxLength = 0;
                colvarTipoSentenciaId.AutoIncrement = false;
                colvarTipoSentenciaId.IsNullable = false;
                colvarTipoSentenciaId.IsPrimaryKey = false;
                colvarTipoSentenciaId.IsForeignKey = false;
                colvarTipoSentenciaId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoSentenciaId);
                
                TableSchema.TableColumn colvarComentario = new TableSchema.TableColumn(schema);
                colvarComentario.ColumnName = "Comentario";
                colvarComentario.DataType = DbType.AnsiString;
                colvarComentario.MaxLength = -1;
                colvarComentario.AutoIncrement = false;
                colvarComentario.IsNullable = false;
                colvarComentario.IsPrimaryKey = false;
                colvarComentario.IsForeignKey = false;
                colvarComentario.IsReadOnly = false;
                
                schema.Columns.Add(colvarComentario);
                
                TableSchema.TableColumn colvarSentencia = new TableSchema.TableColumn(schema);
                colvarSentencia.ColumnName = "Sentencia";
                colvarSentencia.DataType = DbType.String;
                colvarSentencia.MaxLength = 100;
                colvarSentencia.AutoIncrement = false;
                colvarSentencia.IsNullable = false;
                colvarSentencia.IsPrimaryKey = false;
                colvarSentencia.IsForeignKey = false;
                colvarSentencia.IsReadOnly = false;
                
                schema.Columns.Add(colvarSentencia);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_Oposiciones",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewOposiciones()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewOposiciones(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewOposiciones(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewOposiciones(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OposicionId")]
        [Bindable(true)]
        public int OposicionId 
	    {
		    get
		    {
			    return GetColumnValue<int>("OposicionId");
		    }
            set 
		    {
			    SetColumnValue("OposicionId", value);
            }
        }
	      
        [XmlAttribute("TransaccionId")]
        [Bindable(true)]
        public int? TransaccionId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TransaccionId");
		    }
            set 
		    {
			    SetColumnValue("TransaccionId", value);
            }
        }
	      
        [XmlAttribute("NumeroActo")]
        [Bindable(true)]
        public string NumeroActo 
	    {
		    get
		    {
			    return GetColumnValue<string>("NumeroActo");
		    }
            set 
		    {
			    SetColumnValue("NumeroActo", value);
            }
        }
	      
        [XmlAttribute("Fecha")]
        [Bindable(true)]
        public DateTime Fecha 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Fecha");
		    }
            set 
		    {
			    SetColumnValue("Fecha", value);
            }
        }
	      
        [XmlAttribute("Apoderado")]
        [Bindable(true)]
        public string Apoderado 
	    {
		    get
		    {
			    return GetColumnValue<string>("Apoderado");
		    }
            set 
		    {
			    SetColumnValue("Apoderado", value);
            }
        }
	      
        [XmlAttribute("TipoSentenciaId")]
        [Bindable(true)]
        public int TipoSentenciaId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoSentenciaId");
		    }
            set 
		    {
			    SetColumnValue("TipoSentenciaId", value);
            }
        }
	      
        [XmlAttribute("Comentario")]
        [Bindable(true)]
        public string Comentario 
	    {
		    get
		    {
			    return GetColumnValue<string>("Comentario");
		    }
            set 
		    {
			    SetColumnValue("Comentario", value);
            }
        }
	      
        [XmlAttribute("Sentencia")]
        [Bindable(true)]
        public string Sentencia 
	    {
		    get
		    {
			    return GetColumnValue<string>("Sentencia");
		    }
            set 
		    {
			    SetColumnValue("Sentencia", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OposicionId = @"OposicionId";
            
            public static string TransaccionId = @"TransaccionId";
            
            public static string NumeroActo = @"NumeroActo";
            
            public static string Fecha = @"Fecha";
            
            public static string Apoderado = @"Apoderado";
            
            public static string TipoSentenciaId = @"TipoSentenciaId";
            
            public static string Comentario = @"Comentario";
            
            public static string Sentencia = @"Sentencia";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
