//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.SRM
{
    public partial class Direcciones
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    		public static string DireccionId = @"DireccionId";
    public static string Calle = @"Calle";
    public static string Numero = @"Numero";
    public static string CiudadId = @"CiudadId";
    public static string SectorId = @"SectorId";
    public static string ApartadoPostal = @"ApartadoPostal";
    public static string TelefonoCasa = @"TelefonoCasa";
    public static string TelefonoOficina = @"TelefonoOficina";
    public static string Extension = @"Extension";
    public static string Fax = @"Fax";
    public static string Email = @"Email";
    public static string SitioWeb = @"SitioWeb";
    public static string FechaModificacion = @"FechaModificacion";
    public static string CiudadDescripcion = @"CiudadDescripcion";
    public static string SectorDescripcion = @"SectorDescripcion";
    public static string PaisId = @"PaisId";
    public static string PaisDescripcion = @"PaisDescripcion";
    public static string SectorDgiiId = @"SectorDgiiId";
    public static string SectorDgii = @"SectorDgii";
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int DireccionId
        {
            get;
            set;
        }
    
        public virtual string Calle
        {
            get;
            set;
        }
    
        public virtual string Numero
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CiudadId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SectorId
        {
            get;
            set;
        }
    
        public virtual string ApartadoPostal
        {
            get;
            set;
        }
    
        public virtual string TelefonoCasa
        {
            get;
            set;
        }
    
        public virtual string TelefonoOficina
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Extension
        {
            get;
            set;
        }
    
        public virtual string Fax
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual string SitioWeb
        {
            get;
            set;
        }
    
        public virtual System.DateTime FechaModificacion
        {
            get;
            set;
        }
    
        public virtual System.Guid rowguid
        {
            get;
            set;
        }
    
        public virtual string CiudadDescripcion
        {
            get;
            set;
        }
    
        public virtual string SectorDescripcion
        {
            get;
            set;
        }
    
        public virtual Nullable<int> PaisId
        {
            get;
            set;
        }
    
        public virtual string PaisDescripcion
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SectorDgiiId
        {
            get;
            set;
        }
    
        public virtual string SectorDgii
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<PersonasDirecciones> PersonasDirecciones
        {
            get
            {
                if (_personasDirecciones == null)
                {
                    var newCollection = new FixupCollection<PersonasDirecciones>();
                    newCollection.CollectionChanged += FixupPersonasDirecciones;
                    _personasDirecciones = newCollection;
                }
                return _personasDirecciones;
            }
            set
            {
                if (!ReferenceEquals(_personasDirecciones, value))
                {
                    var previousValue = _personasDirecciones as FixupCollection<PersonasDirecciones>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPersonasDirecciones;
                    }
                    _personasDirecciones = value;
                    var newValue = value as FixupCollection<PersonasDirecciones>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPersonasDirecciones;
                    }
                }
            }
        }
        private ICollection<PersonasDirecciones> _personasDirecciones;
    
        public virtual ICollection<Registros> Registros
        {
            get
            {
                if (_registros == null)
                {
                    var newCollection = new FixupCollection<Registros>();
                    newCollection.CollectionChanged += FixupRegistros;
                    _registros = newCollection;
                }
                return _registros;
            }
            set
            {
                if (!ReferenceEquals(_registros, value))
                {
                    var previousValue = _registros as FixupCollection<Registros>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRegistros;
                    }
                    _registros = value;
                    var newValue = value as FixupCollection<Registros>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRegistros;
                    }
                }
            }
        }
        private ICollection<Registros> _registros;

        #endregion

        #region Association Fixup
    
        private void FixupPersonasDirecciones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PersonasDirecciones item in e.NewItems)
                {
                    item.Direcciones = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersonasDirecciones item in e.OldItems)
                {
                    if (ReferenceEquals(item.Direcciones, this))
                    {
                        item.Direcciones = null;
                    }
                }
            }
        }
    
        private void FixupRegistros(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Registros item in e.NewItems)
                {
                    item.Direcciones = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Registros item in e.OldItems)
                {
                    if (ReferenceEquals(item.Direcciones, this))
                    {
                        item.Direcciones = null;
                    }
                }
            }
        }

        #endregion

    }
}
