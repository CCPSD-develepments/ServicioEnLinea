using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewFactura class.
    /// </summary>
    [Serializable]
    public partial class ViewFacturaCollection : ReadOnlyList<ViewFactura, ViewFacturaCollection>
    {        
        public ViewFacturaCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_Factura view.
    /// </summary>
    [Serializable]
    public partial class ViewFactura : ReadOnlyRecord<ViewFactura>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_Factura", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"Transaccion";
                //columns
                
                TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
                colvarTransaccionId.ColumnName = "TransaccionId";
                colvarTransaccionId.DataType = DbType.Int32;
                colvarTransaccionId.MaxLength = 0;
                colvarTransaccionId.AutoIncrement = false;
                colvarTransaccionId.IsNullable = false;
                colvarTransaccionId.IsPrimaryKey = false;
                colvarTransaccionId.IsForeignKey = false;
                colvarTransaccionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTransaccionId);
                
                TableSchema.TableColumn colvarTransaccion = new TableSchema.TableColumn(schema);
                colvarTransaccion.ColumnName = "Transaccion";
                colvarTransaccion.DataType = DbType.AnsiString;
                colvarTransaccion.MaxLength = 50;
                colvarTransaccion.AutoIncrement = false;
                colvarTransaccion.IsNullable = true;
                colvarTransaccion.IsPrimaryKey = false;
                colvarTransaccion.IsForeignKey = false;
                colvarTransaccion.IsReadOnly = false;
                
                schema.Columns.Add(colvarTransaccion);
                
                TableSchema.TableColumn colvarServicio = new TableSchema.TableColumn(schema);
                colvarServicio.ColumnName = "Servicio";
                colvarServicio.DataType = DbType.AnsiString;
                colvarServicio.MaxLength = 250;
                colvarServicio.AutoIncrement = false;
                colvarServicio.IsNullable = true;
                colvarServicio.IsPrimaryKey = false;
                colvarServicio.IsForeignKey = false;
                colvarServicio.IsReadOnly = false;
                
                schema.Columns.Add(colvarServicio);
                
                TableSchema.TableColumn colvarSalicitante = new TableSchema.TableColumn(schema);
                colvarSalicitante.ColumnName = "Salicitante";
                colvarSalicitante.DataType = DbType.AnsiString;
                colvarSalicitante.MaxLength = 255;
                colvarSalicitante.AutoIncrement = false;
                colvarSalicitante.IsNullable = true;
                colvarSalicitante.IsPrimaryKey = false;
                colvarSalicitante.IsForeignKey = false;
                colvarSalicitante.IsReadOnly = false;
                
                schema.Columns.Add(colvarSalicitante);
                
                TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
                colvarFecha.ColumnName = "Fecha";
                colvarFecha.DataType = DbType.DateTime;
                colvarFecha.MaxLength = 0;
                colvarFecha.AutoIncrement = false;
                colvarFecha.IsNullable = false;
                colvarFecha.IsPrimaryKey = false;
                colvarFecha.IsForeignKey = false;
                colvarFecha.IsReadOnly = false;
                
                schema.Columns.Add(colvarFecha);
                
                TableSchema.TableColumn colvarFlowId = new TableSchema.TableColumn(schema);
                colvarFlowId.ColumnName = "FlowId";
                colvarFlowId.DataType = DbType.Guid;
                colvarFlowId.MaxLength = 0;
                colvarFlowId.AutoIncrement = false;
                colvarFlowId.IsNullable = true;
                colvarFlowId.IsPrimaryKey = false;
                colvarFlowId.IsForeignKey = false;
                colvarFlowId.IsReadOnly = false;
                
                schema.Columns.Add(colvarFlowId);
                
                TableSchema.TableColumn colvarNumeroRegistro = new TableSchema.TableColumn(schema);
                colvarNumeroRegistro.ColumnName = "NumeroRegistro";
                colvarNumeroRegistro.DataType = DbType.Int32;
                colvarNumeroRegistro.MaxLength = 0;
                colvarNumeroRegistro.AutoIncrement = false;
                colvarNumeroRegistro.IsNullable = true;
                colvarNumeroRegistro.IsPrimaryKey = false;
                colvarNumeroRegistro.IsForeignKey = false;
                colvarNumeroRegistro.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumeroRegistro);
                
                TableSchema.TableColumn colvarNombre = new TableSchema.TableColumn(schema);
                colvarNombre.ColumnName = "Nombre";
                colvarNombre.DataType = DbType.String;
                colvarNombre.MaxLength = 501;
                colvarNombre.AutoIncrement = false;
                colvarNombre.IsNullable = true;
                colvarNombre.IsPrimaryKey = false;
                colvarNombre.IsForeignKey = false;
                colvarNombre.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombre);
                
                TableSchema.TableColumn colvarCostoTotalOriginales = new TableSchema.TableColumn(schema);
                colvarCostoTotalOriginales.ColumnName = "CostoTotalOriginales";
                colvarCostoTotalOriginales.DataType = DbType.Currency;
                colvarCostoTotalOriginales.MaxLength = 0;
                colvarCostoTotalOriginales.AutoIncrement = false;
                colvarCostoTotalOriginales.IsNullable = false;
                colvarCostoTotalOriginales.IsPrimaryKey = false;
                colvarCostoTotalOriginales.IsForeignKey = false;
                colvarCostoTotalOriginales.IsReadOnly = false;
                
                schema.Columns.Add(colvarCostoTotalOriginales);
                
                TableSchema.TableColumn colvarCostoTotalCopias = new TableSchema.TableColumn(schema);
                colvarCostoTotalCopias.ColumnName = "CostoTotalCopias";
                colvarCostoTotalCopias.DataType = DbType.Currency;
                colvarCostoTotalCopias.MaxLength = 0;
                colvarCostoTotalCopias.AutoIncrement = false;
                colvarCostoTotalCopias.IsNullable = false;
                colvarCostoTotalCopias.IsPrimaryKey = false;
                colvarCostoTotalCopias.IsForeignKey = false;
                colvarCostoTotalCopias.IsReadOnly = false;
                
                schema.Columns.Add(colvarCostoTotalCopias);
                
                TableSchema.TableColumn colvarCostoServicio = new TableSchema.TableColumn(schema);
                colvarCostoServicio.ColumnName = "CostoServicio";
                colvarCostoServicio.DataType = DbType.Int32;
                colvarCostoServicio.MaxLength = 0;
                colvarCostoServicio.AutoIncrement = false;
                colvarCostoServicio.IsNullable = false;
                colvarCostoServicio.IsPrimaryKey = false;
                colvarCostoServicio.IsForeignKey = false;
                colvarCostoServicio.IsReadOnly = false;
                
                schema.Columns.Add(colvarCostoServicio);
                
                TableSchema.TableColumn colvarSufijoTrans = new TableSchema.TableColumn(schema);
                colvarSufijoTrans.ColumnName = "SufijoTrans";
                colvarSufijoTrans.DataType = DbType.AnsiString;
                colvarSufijoTrans.MaxLength = 2;
                colvarSufijoTrans.AutoIncrement = false;
                colvarSufijoTrans.IsNullable = true;
                colvarSufijoTrans.IsPrimaryKey = false;
                colvarSufijoTrans.IsForeignKey = false;
                colvarSufijoTrans.IsReadOnly = false;
                
                schema.Columns.Add(colvarSufijoTrans);
                
                TableSchema.TableColumn colvarPrioridad = new TableSchema.TableColumn(schema);
                colvarPrioridad.ColumnName = "Prioridad";
                colvarPrioridad.DataType = DbType.String;
                colvarPrioridad.MaxLength = 1;
                colvarPrioridad.AutoIncrement = false;
                colvarPrioridad.IsNullable = true;
                colvarPrioridad.IsPrimaryKey = false;
                colvarPrioridad.IsForeignKey = false;
                colvarPrioridad.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrioridad);
                
                TableSchema.TableColumn colvarNcf = new TableSchema.TableColumn(schema);
                colvarNcf.ColumnName = "NCF";
                colvarNcf.DataType = DbType.AnsiString;
                colvarNcf.MaxLength = 20;
                colvarNcf.AutoIncrement = false;
                colvarNcf.IsNullable = true;
                colvarNcf.IsPrimaryKey = false;
                colvarNcf.IsForeignKey = false;
                colvarNcf.IsReadOnly = false;
                
                schema.Columns.Add(colvarNcf);
                
                TableSchema.TableColumn colvarCapitalAutorizado = new TableSchema.TableColumn(schema);
                colvarCapitalAutorizado.ColumnName = "CapitalAutorizado";
                colvarCapitalAutorizado.DataType = DbType.Decimal;
                colvarCapitalAutorizado.MaxLength = 0;
                colvarCapitalAutorizado.AutoIncrement = false;
                colvarCapitalAutorizado.IsNullable = true;
                colvarCapitalAutorizado.IsPrimaryKey = false;
                colvarCapitalAutorizado.IsForeignKey = false;
                colvarCapitalAutorizado.IsReadOnly = false;
                
                schema.Columns.Add(colvarCapitalAutorizado);
                
                TableSchema.TableColumn colvarCapitalModificado = new TableSchema.TableColumn(schema);
                colvarCapitalModificado.ColumnName = "CapitalModificado";
                colvarCapitalModificado.DataType = DbType.Decimal;
                colvarCapitalModificado.MaxLength = 0;
                colvarCapitalModificado.AutoIncrement = false;
                colvarCapitalModificado.IsNullable = true;
                colvarCapitalModificado.IsPrimaryKey = false;
                colvarCapitalModificado.IsForeignKey = false;
                colvarCapitalModificado.IsReadOnly = false;
                
                schema.Columns.Add(colvarCapitalModificado);
                
                TableSchema.TableColumn colvarCapitalSociedad = new TableSchema.TableColumn(schema);
                colvarCapitalSociedad.ColumnName = "CapitalSociedad";
                colvarCapitalSociedad.DataType = DbType.Decimal;
                colvarCapitalSociedad.MaxLength = 0;
                colvarCapitalSociedad.AutoIncrement = false;
                colvarCapitalSociedad.IsNullable = true;
                colvarCapitalSociedad.IsPrimaryKey = false;
                colvarCapitalSociedad.IsForeignKey = false;
                colvarCapitalSociedad.IsReadOnly = false;
                
                schema.Columns.Add(colvarCapitalSociedad);
                
                TableSchema.TableColumn colvarReceptor = new TableSchema.TableColumn(schema);
                colvarReceptor.ColumnName = "Receptor";
                colvarReceptor.DataType = DbType.AnsiString;
                colvarReceptor.MaxLength = 15;
                colvarReceptor.AutoIncrement = false;
                colvarReceptor.IsNullable = true;
                colvarReceptor.IsPrimaryKey = false;
                colvarReceptor.IsForeignKey = false;
                colvarReceptor.IsReadOnly = false;
                
                schema.Columns.Add(colvarReceptor);
                
                TableSchema.TableColumn colvarHoraInicio = new TableSchema.TableColumn(schema);
                colvarHoraInicio.ColumnName = "HoraInicio";
                colvarHoraInicio.DataType = DbType.DateTime;
                colvarHoraInicio.MaxLength = 0;
                colvarHoraInicio.AutoIncrement = false;
                colvarHoraInicio.IsNullable = true;
                colvarHoraInicio.IsPrimaryKey = false;
                colvarHoraInicio.IsForeignKey = false;
                colvarHoraInicio.IsReadOnly = false;
                
                schema.Columns.Add(colvarHoraInicio);
                
                TableSchema.TableColumn colvarHoraFinal = new TableSchema.TableColumn(schema);
                colvarHoraFinal.ColumnName = "HoraFinal";
                colvarHoraFinal.DataType = DbType.DateTime;
                colvarHoraFinal.MaxLength = 0;
                colvarHoraFinal.AutoIncrement = false;
                colvarHoraFinal.IsNullable = true;
                colvarHoraFinal.IsPrimaryKey = false;
                colvarHoraFinal.IsForeignKey = false;
                colvarHoraFinal.IsReadOnly = false;
                
                schema.Columns.Add(colvarHoraFinal);
                
                TableSchema.TableColumn colvarTipoNcf = new TableSchema.TableColumn(schema);
                colvarTipoNcf.ColumnName = "TipoNcf";
                colvarTipoNcf.DataType = DbType.String;
                colvarTipoNcf.MaxLength = 150;
                colvarTipoNcf.AutoIncrement = false;
                colvarTipoNcf.IsNullable = true;
                colvarTipoNcf.IsPrimaryKey = false;
                colvarTipoNcf.IsForeignKey = false;
                colvarTipoNcf.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoNcf);
                
                TableSchema.TableColumn colvarRNCSolicitante = new TableSchema.TableColumn(schema);
                colvarRNCSolicitante.ColumnName = "RNCSolicitante";
                colvarRNCSolicitante.DataType = DbType.AnsiString;
                colvarRNCSolicitante.MaxLength = 15;
                colvarRNCSolicitante.AutoIncrement = false;
                colvarRNCSolicitante.IsNullable = true;
                colvarRNCSolicitante.IsPrimaryKey = false;
                colvarRNCSolicitante.IsForeignKey = false;
                colvarRNCSolicitante.IsReadOnly = false;
                
                schema.Columns.Add(colvarRNCSolicitante);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_Factura",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewFactura()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewFactura(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewFactura(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewFactura(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("TransaccionId")]
        [Bindable(true)]
        public int TransaccionId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TransaccionId");
		    }
            set 
		    {
			    SetColumnValue("TransaccionId", value);
            }
        }
	      
        [XmlAttribute("Transaccion")]
        [Bindable(true)]
        public string Transaccion 
	    {
		    get
		    {
			    return GetColumnValue<string>("Transaccion");
		    }
            set 
		    {
			    SetColumnValue("Transaccion", value);
            }
        }
	      
        [XmlAttribute("Servicio")]
        [Bindable(true)]
        public string Servicio 
	    {
		    get
		    {
			    return GetColumnValue<string>("Servicio");
		    }
            set 
		    {
			    SetColumnValue("Servicio", value);
            }
        }
	      
        [XmlAttribute("Salicitante")]
        [Bindable(true)]
        public string Salicitante 
	    {
		    get
		    {
			    return GetColumnValue<string>("Salicitante");
		    }
            set 
		    {
			    SetColumnValue("Salicitante", value);
            }
        }
	      
        [XmlAttribute("Fecha")]
        [Bindable(true)]
        public DateTime Fecha 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Fecha");
		    }
            set 
		    {
			    SetColumnValue("Fecha", value);
            }
        }
	      
        [XmlAttribute("FlowId")]
        [Bindable(true)]
        public Guid? FlowId 
	    {
		    get
		    {
			    return GetColumnValue<Guid?>("FlowId");
		    }
            set 
		    {
			    SetColumnValue("FlowId", value);
            }
        }
	      
        [XmlAttribute("NumeroRegistro")]
        [Bindable(true)]
        public int? NumeroRegistro 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NumeroRegistro");
		    }
            set 
		    {
			    SetColumnValue("NumeroRegistro", value);
            }
        }
	      
        [XmlAttribute("Nombre")]
        [Bindable(true)]
        public string Nombre 
	    {
		    get
		    {
			    return GetColumnValue<string>("Nombre");
		    }
            set 
		    {
			    SetColumnValue("Nombre", value);
            }
        }
	      
        [XmlAttribute("CostoTotalOriginales")]
        [Bindable(true)]
        public decimal CostoTotalOriginales 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("CostoTotalOriginales");
		    }
            set 
		    {
			    SetColumnValue("CostoTotalOriginales", value);
            }
        }
	      
        [XmlAttribute("CostoTotalCopias")]
        [Bindable(true)]
        public decimal CostoTotalCopias 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("CostoTotalCopias");
		    }
            set 
		    {
			    SetColumnValue("CostoTotalCopias", value);
            }
        }
	      
        [XmlAttribute("CostoServicio")]
        [Bindable(true)]
        public int CostoServicio 
	    {
		    get
		    {
			    return GetColumnValue<int>("CostoServicio");
		    }
            set 
		    {
			    SetColumnValue("CostoServicio", value);
            }
        }
	      
        [XmlAttribute("SufijoTrans")]
        [Bindable(true)]
        public string SufijoTrans 
	    {
		    get
		    {
			    return GetColumnValue<string>("SufijoTrans");
		    }
            set 
		    {
			    SetColumnValue("SufijoTrans", value);
            }
        }
	      
        [XmlAttribute("Prioridad")]
        [Bindable(true)]
        public string Prioridad 
	    {
		    get
		    {
			    return GetColumnValue<string>("Prioridad");
		    }
            set 
		    {
			    SetColumnValue("Prioridad", value);
            }
        }
	      
        [XmlAttribute("Ncf")]
        [Bindable(true)]
        public string Ncf 
	    {
		    get
		    {
			    return GetColumnValue<string>("NCF");
		    }
            set 
		    {
			    SetColumnValue("NCF", value);
            }
        }
	      
        [XmlAttribute("CapitalAutorizado")]
        [Bindable(true)]
        public decimal? CapitalAutorizado 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CapitalAutorizado");
		    }
            set 
		    {
			    SetColumnValue("CapitalAutorizado", value);
            }
        }
	      
        [XmlAttribute("CapitalModificado")]
        [Bindable(true)]
        public decimal? CapitalModificado 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CapitalModificado");
		    }
            set 
		    {
			    SetColumnValue("CapitalModificado", value);
            }
        }
	      
        [XmlAttribute("CapitalSociedad")]
        [Bindable(true)]
        public decimal? CapitalSociedad 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CapitalSociedad");
		    }
            set 
		    {
			    SetColumnValue("CapitalSociedad", value);
            }
        }
	      
        [XmlAttribute("Receptor")]
        [Bindable(true)]
        public string Receptor 
	    {
		    get
		    {
			    return GetColumnValue<string>("Receptor");
		    }
            set 
		    {
			    SetColumnValue("Receptor", value);
            }
        }
	      
        [XmlAttribute("HoraInicio")]
        [Bindable(true)]
        public DateTime? HoraInicio 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("HoraInicio");
		    }
            set 
		    {
			    SetColumnValue("HoraInicio", value);
            }
        }
	      
        [XmlAttribute("HoraFinal")]
        [Bindable(true)]
        public DateTime? HoraFinal 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("HoraFinal");
		    }
            set 
		    {
			    SetColumnValue("HoraFinal", value);
            }
        }
	      
        [XmlAttribute("TipoNcf")]
        [Bindable(true)]
        public string TipoNcf 
	    {
		    get
		    {
			    return GetColumnValue<string>("TipoNcf");
		    }
            set 
		    {
			    SetColumnValue("TipoNcf", value);
            }
        }
	      
        [XmlAttribute("RNCSolicitante")]
        [Bindable(true)]
        public string RNCSolicitante 
	    {
		    get
		    {
			    return GetColumnValue<string>("RNCSolicitante");
		    }
            set 
		    {
			    SetColumnValue("RNCSolicitante", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string TransaccionId = @"TransaccionId";
            
            public static string Transaccion = @"Transaccion";
            
            public static string Servicio = @"Servicio";
            
            public static string Salicitante = @"Salicitante";
            
            public static string Fecha = @"Fecha";
            
            public static string FlowId = @"FlowId";
            
            public static string NumeroRegistro = @"NumeroRegistro";
            
            public static string Nombre = @"Nombre";
            
            public static string CostoTotalOriginales = @"CostoTotalOriginales";
            
            public static string CostoTotalCopias = @"CostoTotalCopias";
            
            public static string CostoServicio = @"CostoServicio";
            
            public static string SufijoTrans = @"SufijoTrans";
            
            public static string Prioridad = @"Prioridad";
            
            public static string Ncf = @"NCF";
            
            public static string CapitalAutorizado = @"CapitalAutorizado";
            
            public static string CapitalModificado = @"CapitalModificado";
            
            public static string CapitalSociedad = @"CapitalSociedad";
            
            public static string Receptor = @"Receptor";
            
            public static string HoraInicio = @"HoraInicio";
            
            public static string HoraFinal = @"HoraFinal";
            
            public static string TipoNcf = @"TipoNcf";
            
            public static string RNCSolicitante = @"RNCSolicitante";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
