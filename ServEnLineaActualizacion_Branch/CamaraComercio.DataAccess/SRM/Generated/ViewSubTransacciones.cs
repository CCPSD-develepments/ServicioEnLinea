using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewSubTransacciones class.
    /// </summary>
    [Serializable]
    public partial class ViewSubTransaccionesCollection : ReadOnlyList<ViewSubTransacciones, ViewSubTransaccionesCollection>
    {        
        public ViewSubTransaccionesCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_SubTransacciones view.
    /// </summary>
    [Serializable]
    public partial class ViewSubTransacciones : ReadOnlyRecord<ViewSubTransacciones>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_SubTransacciones", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"Transaccion";
                //columns
                
                TableSchema.TableColumn colvarSubTransaccionId = new TableSchema.TableColumn(schema);
                colvarSubTransaccionId.ColumnName = "SubTransaccionId";
                colvarSubTransaccionId.DataType = DbType.Int32;
                colvarSubTransaccionId.MaxLength = 0;
                colvarSubTransaccionId.AutoIncrement = false;
                colvarSubTransaccionId.IsNullable = false;
                colvarSubTransaccionId.IsPrimaryKey = false;
                colvarSubTransaccionId.IsForeignKey = false;
                colvarSubTransaccionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarSubTransaccionId);
                
                TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
                colvarTransaccionId.ColumnName = "TransaccionId";
                colvarTransaccionId.DataType = DbType.Int32;
                colvarTransaccionId.MaxLength = 0;
                colvarTransaccionId.AutoIncrement = false;
                colvarTransaccionId.IsNullable = false;
                colvarTransaccionId.IsPrimaryKey = false;
                colvarTransaccionId.IsForeignKey = false;
                colvarTransaccionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTransaccionId);
                
                TableSchema.TableColumn colvarTipoTransaccionId = new TableSchema.TableColumn(schema);
                colvarTipoTransaccionId.ColumnName = "TipoTransaccionId";
                colvarTipoTransaccionId.DataType = DbType.Int32;
                colvarTipoTransaccionId.MaxLength = 0;
                colvarTipoTransaccionId.AutoIncrement = false;
                colvarTipoTransaccionId.IsNullable = false;
                colvarTipoTransaccionId.IsPrimaryKey = false;
                colvarTipoTransaccionId.IsForeignKey = false;
                colvarTipoTransaccionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoTransaccionId);
                
                TableSchema.TableColumn colvarTipoServicioId = new TableSchema.TableColumn(schema);
                colvarTipoServicioId.ColumnName = "TipoServicioId";
                colvarTipoServicioId.DataType = DbType.Int32;
                colvarTipoServicioId.MaxLength = 0;
                colvarTipoServicioId.AutoIncrement = false;
                colvarTipoServicioId.IsNullable = false;
                colvarTipoServicioId.IsPrimaryKey = false;
                colvarTipoServicioId.IsForeignKey = false;
                colvarTipoServicioId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoServicioId);
                
                TableSchema.TableColumn colvarDestinoTraslado = new TableSchema.TableColumn(schema);
                colvarDestinoTraslado.ColumnName = "DestinoTraslado";
                colvarDestinoTraslado.DataType = DbType.AnsiString;
                colvarDestinoTraslado.MaxLength = 150;
                colvarDestinoTraslado.AutoIncrement = false;
                colvarDestinoTraslado.IsNullable = true;
                colvarDestinoTraslado.IsPrimaryKey = false;
                colvarDestinoTraslado.IsForeignKey = false;
                colvarDestinoTraslado.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinoTraslado);
                
                TableSchema.TableColumn colvarFlowId = new TableSchema.TableColumn(schema);
                colvarFlowId.ColumnName = "FlowId";
                colvarFlowId.DataType = DbType.Guid;
                colvarFlowId.MaxLength = 0;
                colvarFlowId.AutoIncrement = false;
                colvarFlowId.IsNullable = true;
                colvarFlowId.IsPrimaryKey = false;
                colvarFlowId.IsForeignKey = false;
                colvarFlowId.IsReadOnly = false;
                
                schema.Columns.Add(colvarFlowId);
                
                TableSchema.TableColumn colvarEstatus = new TableSchema.TableColumn(schema);
                colvarEstatus.ColumnName = "Estatus";
                colvarEstatus.DataType = DbType.Int32;
                colvarEstatus.MaxLength = 0;
                colvarEstatus.AutoIncrement = false;
                colvarEstatus.IsNullable = false;
                colvarEstatus.IsPrimaryKey = false;
                colvarEstatus.IsForeignKey = false;
                colvarEstatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstatus);
                
                TableSchema.TableColumn colvarEstatus2 = new TableSchema.TableColumn(schema);
                colvarEstatus2.ColumnName = "Estatus2";
                colvarEstatus2.DataType = DbType.Int32;
                colvarEstatus2.MaxLength = 0;
                colvarEstatus2.AutoIncrement = false;
                colvarEstatus2.IsNullable = true;
                colvarEstatus2.IsPrimaryKey = false;
                colvarEstatus2.IsForeignKey = false;
                colvarEstatus2.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstatus2);
                
                TableSchema.TableColumn colvarCustomString1 = new TableSchema.TableColumn(schema);
                colvarCustomString1.ColumnName = "CustomString1";
                colvarCustomString1.DataType = DbType.String;
                colvarCustomString1.MaxLength = 250;
                colvarCustomString1.AutoIncrement = false;
                colvarCustomString1.IsNullable = true;
                colvarCustomString1.IsPrimaryKey = false;
                colvarCustomString1.IsForeignKey = false;
                colvarCustomString1.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomString1);
                
                TableSchema.TableColumn colvarCustomString2 = new TableSchema.TableColumn(schema);
                colvarCustomString2.ColumnName = "CustomString2";
                colvarCustomString2.DataType = DbType.String;
                colvarCustomString2.MaxLength = 250;
                colvarCustomString2.AutoIncrement = false;
                colvarCustomString2.IsNullable = true;
                colvarCustomString2.IsPrimaryKey = false;
                colvarCustomString2.IsForeignKey = false;
                colvarCustomString2.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomString2);
                
                TableSchema.TableColumn colvarCustomString3 = new TableSchema.TableColumn(schema);
                colvarCustomString3.ColumnName = "CustomString3";
                colvarCustomString3.DataType = DbType.String;
                colvarCustomString3.MaxLength = 250;
                colvarCustomString3.AutoIncrement = false;
                colvarCustomString3.IsNullable = true;
                colvarCustomString3.IsPrimaryKey = false;
                colvarCustomString3.IsForeignKey = false;
                colvarCustomString3.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomString3);
                
                TableSchema.TableColumn colvarCustomInt1 = new TableSchema.TableColumn(schema);
                colvarCustomInt1.ColumnName = "CustomInt1";
                colvarCustomInt1.DataType = DbType.Int32;
                colvarCustomInt1.MaxLength = 0;
                colvarCustomInt1.AutoIncrement = false;
                colvarCustomInt1.IsNullable = true;
                colvarCustomInt1.IsPrimaryKey = false;
                colvarCustomInt1.IsForeignKey = false;
                colvarCustomInt1.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomInt1);
                
                TableSchema.TableColumn colvarCustomInt2 = new TableSchema.TableColumn(schema);
                colvarCustomInt2.ColumnName = "CustomInt2";
                colvarCustomInt2.DataType = DbType.Int32;
                colvarCustomInt2.MaxLength = 0;
                colvarCustomInt2.AutoIncrement = false;
                colvarCustomInt2.IsNullable = true;
                colvarCustomInt2.IsPrimaryKey = false;
                colvarCustomInt2.IsForeignKey = false;
                colvarCustomInt2.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomInt2);
                
                TableSchema.TableColumn colvarCustomInt3 = new TableSchema.TableColumn(schema);
                colvarCustomInt3.ColumnName = "CustomInt3";
                colvarCustomInt3.DataType = DbType.Int32;
                colvarCustomInt3.MaxLength = 0;
                colvarCustomInt3.AutoIncrement = false;
                colvarCustomInt3.IsNullable = true;
                colvarCustomInt3.IsPrimaryKey = false;
                colvarCustomInt3.IsForeignKey = false;
                colvarCustomInt3.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomInt3);
                
                TableSchema.TableColumn colvarCustomDateTime1 = new TableSchema.TableColumn(schema);
                colvarCustomDateTime1.ColumnName = "CustomDateTime1";
                colvarCustomDateTime1.DataType = DbType.DateTime;
                colvarCustomDateTime1.MaxLength = 0;
                colvarCustomDateTime1.AutoIncrement = false;
                colvarCustomDateTime1.IsNullable = true;
                colvarCustomDateTime1.IsPrimaryKey = false;
                colvarCustomDateTime1.IsForeignKey = false;
                colvarCustomDateTime1.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomDateTime1);
                
                TableSchema.TableColumn colvarCustomDateTime2 = new TableSchema.TableColumn(schema);
                colvarCustomDateTime2.ColumnName = "CustomDateTime2";
                colvarCustomDateTime2.DataType = DbType.DateTime;
                colvarCustomDateTime2.MaxLength = 0;
                colvarCustomDateTime2.AutoIncrement = false;
                colvarCustomDateTime2.IsNullable = true;
                colvarCustomDateTime2.IsPrimaryKey = false;
                colvarCustomDateTime2.IsForeignKey = false;
                colvarCustomDateTime2.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomDateTime2);
                
                TableSchema.TableColumn colvarCustomDecimal1 = new TableSchema.TableColumn(schema);
                colvarCustomDecimal1.ColumnName = "CustomDecimal1";
                colvarCustomDecimal1.DataType = DbType.Decimal;
                colvarCustomDecimal1.MaxLength = 0;
                colvarCustomDecimal1.AutoIncrement = false;
                colvarCustomDecimal1.IsNullable = true;
                colvarCustomDecimal1.IsPrimaryKey = false;
                colvarCustomDecimal1.IsForeignKey = false;
                colvarCustomDecimal1.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomDecimal1);
                
                TableSchema.TableColumn colvarCustomDecimal2 = new TableSchema.TableColumn(schema);
                colvarCustomDecimal2.ColumnName = "CustomDecimal2";
                colvarCustomDecimal2.DataType = DbType.Decimal;
                colvarCustomDecimal2.MaxLength = 0;
                colvarCustomDecimal2.AutoIncrement = false;
                colvarCustomDecimal2.IsNullable = true;
                colvarCustomDecimal2.IsPrimaryKey = false;
                colvarCustomDecimal2.IsForeignKey = false;
                colvarCustomDecimal2.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomDecimal2);
                
                TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
                colvarFechaModificacion.ColumnName = "FechaModificacion";
                colvarFechaModificacion.DataType = DbType.DateTime;
                colvarFechaModificacion.MaxLength = 0;
                colvarFechaModificacion.AutoIncrement = false;
                colvarFechaModificacion.IsNullable = false;
                colvarFechaModificacion.IsPrimaryKey = false;
                colvarFechaModificacion.IsForeignKey = false;
                colvarFechaModificacion.IsReadOnly = false;
                
                schema.Columns.Add(colvarFechaModificacion);
                
                TableSchema.TableColumn colvarRowguid = new TableSchema.TableColumn(schema);
                colvarRowguid.ColumnName = "rowguid";
                colvarRowguid.DataType = DbType.Guid;
                colvarRowguid.MaxLength = 0;
                colvarRowguid.AutoIncrement = false;
                colvarRowguid.IsNullable = false;
                colvarRowguid.IsPrimaryKey = false;
                colvarRowguid.IsForeignKey = false;
                colvarRowguid.IsReadOnly = false;
                
                schema.Columns.Add(colvarRowguid);
                
                TableSchema.TableColumn colvarTipoTransaccion = new TableSchema.TableColumn(schema);
                colvarTipoTransaccion.ColumnName = "TipoTransaccion";
                colvarTipoTransaccion.DataType = DbType.AnsiString;
                colvarTipoTransaccion.MaxLength = 50;
                colvarTipoTransaccion.AutoIncrement = false;
                colvarTipoTransaccion.IsNullable = true;
                colvarTipoTransaccion.IsPrimaryKey = false;
                colvarTipoTransaccion.IsForeignKey = false;
                colvarTipoTransaccion.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoTransaccion);
                
                TableSchema.TableColumn colvarTransSufijo = new TableSchema.TableColumn(schema);
                colvarTransSufijo.ColumnName = "TransSufijo";
                colvarTransSufijo.DataType = DbType.AnsiString;
                colvarTransSufijo.MaxLength = 2;
                colvarTransSufijo.AutoIncrement = false;
                colvarTransSufijo.IsNullable = true;
                colvarTransSufijo.IsPrimaryKey = false;
                colvarTransSufijo.IsForeignKey = false;
                colvarTransSufijo.IsReadOnly = false;
                
                schema.Columns.Add(colvarTransSufijo);
                
                TableSchema.TableColumn colvarEstatusTransaccion = new TableSchema.TableColumn(schema);
                colvarEstatusTransaccion.ColumnName = "EstatusTransaccion";
                colvarEstatusTransaccion.DataType = DbType.String;
                colvarEstatusTransaccion.MaxLength = 25;
                colvarEstatusTransaccion.AutoIncrement = false;
                colvarEstatusTransaccion.IsNullable = true;
                colvarEstatusTransaccion.IsPrimaryKey = false;
                colvarEstatusTransaccion.IsForeignKey = false;
                colvarEstatusTransaccion.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstatusTransaccion);
                
                TableSchema.TableColumn colvarFlowStatus = new TableSchema.TableColumn(schema);
                colvarFlowStatus.ColumnName = "FlowStatus";
                colvarFlowStatus.DataType = DbType.String;
                colvarFlowStatus.MaxLength = 25;
                colvarFlowStatus.AutoIncrement = false;
                colvarFlowStatus.IsNullable = true;
                colvarFlowStatus.IsPrimaryKey = false;
                colvarFlowStatus.IsForeignKey = false;
                colvarFlowStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarFlowStatus);
                
                TableSchema.TableColumn colvarCompania = new TableSchema.TableColumn(schema);
                colvarCompania.ColumnName = "Compania";
                colvarCompania.DataType = DbType.String;
                colvarCompania.MaxLength = 501;
                colvarCompania.AutoIncrement = false;
                colvarCompania.IsNullable = true;
                colvarCompania.IsPrimaryKey = false;
                colvarCompania.IsForeignKey = false;
                colvarCompania.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompania);
                
                TableSchema.TableColumn colvarTipoServicio = new TableSchema.TableColumn(schema);
                colvarTipoServicio.ColumnName = "TipoServicio";
                colvarTipoServicio.DataType = DbType.AnsiString;
                colvarTipoServicio.MaxLength = 250;
                colvarTipoServicio.AutoIncrement = false;
                colvarTipoServicio.IsNullable = true;
                colvarTipoServicio.IsPrimaryKey = false;
                colvarTipoServicio.IsForeignKey = false;
                colvarTipoServicio.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoServicio);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_SubTransacciones",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewSubTransacciones()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewSubTransacciones(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewSubTransacciones(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewSubTransacciones(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("SubTransaccionId")]
        [Bindable(true)]
        public int SubTransaccionId 
	    {
		    get
		    {
			    return GetColumnValue<int>("SubTransaccionId");
		    }
            set 
		    {
			    SetColumnValue("SubTransaccionId", value);
            }
        }
	      
        [XmlAttribute("TransaccionId")]
        [Bindable(true)]
        public int TransaccionId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TransaccionId");
		    }
            set 
		    {
			    SetColumnValue("TransaccionId", value);
            }
        }
	      
        [XmlAttribute("TipoTransaccionId")]
        [Bindable(true)]
        public int TipoTransaccionId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoTransaccionId");
		    }
            set 
		    {
			    SetColumnValue("TipoTransaccionId", value);
            }
        }
	      
        [XmlAttribute("TipoServicioId")]
        [Bindable(true)]
        public int TipoServicioId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoServicioId");
		    }
            set 
		    {
			    SetColumnValue("TipoServicioId", value);
            }
        }
	      
        [XmlAttribute("DestinoTraslado")]
        [Bindable(true)]
        public string DestinoTraslado 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestinoTraslado");
		    }
            set 
		    {
			    SetColumnValue("DestinoTraslado", value);
            }
        }
	      
        [XmlAttribute("FlowId")]
        [Bindable(true)]
        public Guid? FlowId 
	    {
		    get
		    {
			    return GetColumnValue<Guid?>("FlowId");
		    }
            set 
		    {
			    SetColumnValue("FlowId", value);
            }
        }
	      
        [XmlAttribute("Estatus")]
        [Bindable(true)]
        public int Estatus 
	    {
		    get
		    {
			    return GetColumnValue<int>("Estatus");
		    }
            set 
		    {
			    SetColumnValue("Estatus", value);
            }
        }
	      
        [XmlAttribute("Estatus2")]
        [Bindable(true)]
        public int? Estatus2 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Estatus2");
		    }
            set 
		    {
			    SetColumnValue("Estatus2", value);
            }
        }
	      
        [XmlAttribute("CustomString1")]
        [Bindable(true)]
        public string CustomString1 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomString1");
		    }
            set 
		    {
			    SetColumnValue("CustomString1", value);
            }
        }
	      
        [XmlAttribute("CustomString2")]
        [Bindable(true)]
        public string CustomString2 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomString2");
		    }
            set 
		    {
			    SetColumnValue("CustomString2", value);
            }
        }
	      
        [XmlAttribute("CustomString3")]
        [Bindable(true)]
        public string CustomString3 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomString3");
		    }
            set 
		    {
			    SetColumnValue("CustomString3", value);
            }
        }
	      
        [XmlAttribute("CustomInt1")]
        [Bindable(true)]
        public int? CustomInt1 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CustomInt1");
		    }
            set 
		    {
			    SetColumnValue("CustomInt1", value);
            }
        }
	      
        [XmlAttribute("CustomInt2")]
        [Bindable(true)]
        public int? CustomInt2 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CustomInt2");
		    }
            set 
		    {
			    SetColumnValue("CustomInt2", value);
            }
        }
	      
        [XmlAttribute("CustomInt3")]
        [Bindable(true)]
        public int? CustomInt3 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CustomInt3");
		    }
            set 
		    {
			    SetColumnValue("CustomInt3", value);
            }
        }
	      
        [XmlAttribute("CustomDateTime1")]
        [Bindable(true)]
        public DateTime? CustomDateTime1 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CustomDateTime1");
		    }
            set 
		    {
			    SetColumnValue("CustomDateTime1", value);
            }
        }
	      
        [XmlAttribute("CustomDateTime2")]
        [Bindable(true)]
        public DateTime? CustomDateTime2 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CustomDateTime2");
		    }
            set 
		    {
			    SetColumnValue("CustomDateTime2", value);
            }
        }
	      
        [XmlAttribute("CustomDecimal1")]
        [Bindable(true)]
        public decimal? CustomDecimal1 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CustomDecimal1");
		    }
            set 
		    {
			    SetColumnValue("CustomDecimal1", value);
            }
        }
	      
        [XmlAttribute("CustomDecimal2")]
        [Bindable(true)]
        public decimal? CustomDecimal2 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CustomDecimal2");
		    }
            set 
		    {
			    SetColumnValue("CustomDecimal2", value);
            }
        }
	      
        [XmlAttribute("FechaModificacion")]
        [Bindable(true)]
        public DateTime FechaModificacion 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("FechaModificacion");
		    }
            set 
		    {
			    SetColumnValue("FechaModificacion", value);
            }
        }
	      
        [XmlAttribute("Rowguid")]
        [Bindable(true)]
        public Guid Rowguid 
	    {
		    get
		    {
			    return GetColumnValue<Guid>("rowguid");
		    }
            set 
		    {
			    SetColumnValue("rowguid", value);
            }
        }
	      
        [XmlAttribute("TipoTransaccion")]
        [Bindable(true)]
        public string TipoTransaccion 
	    {
		    get
		    {
			    return GetColumnValue<string>("TipoTransaccion");
		    }
            set 
		    {
			    SetColumnValue("TipoTransaccion", value);
            }
        }
	      
        [XmlAttribute("TransSufijo")]
        [Bindable(true)]
        public string TransSufijo 
	    {
		    get
		    {
			    return GetColumnValue<string>("TransSufijo");
		    }
            set 
		    {
			    SetColumnValue("TransSufijo", value);
            }
        }
	      
        [XmlAttribute("EstatusTransaccion")]
        [Bindable(true)]
        public string EstatusTransaccion 
	    {
		    get
		    {
			    return GetColumnValue<string>("EstatusTransaccion");
		    }
            set 
		    {
			    SetColumnValue("EstatusTransaccion", value);
            }
        }
	      
        [XmlAttribute("FlowStatus")]
        [Bindable(true)]
        public string FlowStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("FlowStatus");
		    }
            set 
		    {
			    SetColumnValue("FlowStatus", value);
            }
        }
	      
        [XmlAttribute("Compania")]
        [Bindable(true)]
        public string Compania 
	    {
		    get
		    {
			    return GetColumnValue<string>("Compania");
		    }
            set 
		    {
			    SetColumnValue("Compania", value);
            }
        }
	      
        [XmlAttribute("TipoServicio")]
        [Bindable(true)]
        public string TipoServicio 
	    {
		    get
		    {
			    return GetColumnValue<string>("TipoServicio");
		    }
            set 
		    {
			    SetColumnValue("TipoServicio", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string SubTransaccionId = @"SubTransaccionId";
            
            public static string TransaccionId = @"TransaccionId";
            
            public static string TipoTransaccionId = @"TipoTransaccionId";
            
            public static string TipoServicioId = @"TipoServicioId";
            
            public static string DestinoTraslado = @"DestinoTraslado";
            
            public static string FlowId = @"FlowId";
            
            public static string Estatus = @"Estatus";
            
            public static string Estatus2 = @"Estatus2";
            
            public static string CustomString1 = @"CustomString1";
            
            public static string CustomString2 = @"CustomString2";
            
            public static string CustomString3 = @"CustomString3";
            
            public static string CustomInt1 = @"CustomInt1";
            
            public static string CustomInt2 = @"CustomInt2";
            
            public static string CustomInt3 = @"CustomInt3";
            
            public static string CustomDateTime1 = @"CustomDateTime1";
            
            public static string CustomDateTime2 = @"CustomDateTime2";
            
            public static string CustomDecimal1 = @"CustomDecimal1";
            
            public static string CustomDecimal2 = @"CustomDecimal2";
            
            public static string FechaModificacion = @"FechaModificacion";
            
            public static string Rowguid = @"rowguid";
            
            public static string TipoTransaccion = @"TipoTransaccion";
            
            public static string TransSufijo = @"TransSufijo";
            
            public static string EstatusTransaccion = @"EstatusTransaccion";
            
            public static string FlowStatus = @"FlowStatus";
            
            public static string Compania = @"Compania";
            
            public static string TipoServicio = @"TipoServicio";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
