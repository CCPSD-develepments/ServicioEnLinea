using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
	/// <summary>
	/// Strongly-typed collection for the TransaccionLog class.
	/// </summary>
    [Serializable]
	public partial class TransaccionLogCollection : ActiveList<TransaccionLog, TransaccionLogCollection>
	{	   
		public TransaccionLogCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TransaccionLogCollection</returns>
		public TransaccionLogCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TransaccionLog o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the TransaccionLog table.
	/// </summary>
	[Serializable]
	public partial class TransaccionLog : ActiveRecord<TransaccionLog>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TransaccionLog()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TransaccionLog(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TransaccionLog(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TransaccionLog(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("TransaccionLog", TableType.Table, DataService.GetInstance("SrmProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"Historico";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "Id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarNumeroRegistro = new TableSchema.TableColumn(schema);
				colvarNumeroRegistro.ColumnName = "NumeroRegistro";
				colvarNumeroRegistro.DataType = DbType.Int32;
				colvarNumeroRegistro.MaxLength = 0;
				colvarNumeroRegistro.AutoIncrement = false;
				colvarNumeroRegistro.IsNullable = false;
				colvarNumeroRegistro.IsPrimaryKey = false;
				colvarNumeroRegistro.IsForeignKey = false;
				colvarNumeroRegistro.IsReadOnly = false;
				colvarNumeroRegistro.DefaultSetting = @"";
				colvarNumeroRegistro.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNumeroRegistro);
				
				TableSchema.TableColumn colvarEmpresaId = new TableSchema.TableColumn(schema);
				colvarEmpresaId.ColumnName = "EmpresaId";
				colvarEmpresaId.DataType = DbType.Int32;
				colvarEmpresaId.MaxLength = 0;
				colvarEmpresaId.AutoIncrement = false;
				colvarEmpresaId.IsNullable = false;
				colvarEmpresaId.IsPrimaryKey = false;
				colvarEmpresaId.IsForeignKey = false;
				colvarEmpresaId.IsReadOnly = false;
				colvarEmpresaId.DefaultSetting = @"";
				colvarEmpresaId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmpresaId);
				
				TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
				colvarTransaccionId.ColumnName = "TransaccionId";
				colvarTransaccionId.DataType = DbType.Int32;
				colvarTransaccionId.MaxLength = 0;
				colvarTransaccionId.AutoIncrement = false;
				colvarTransaccionId.IsNullable = true;
				colvarTransaccionId.IsPrimaryKey = false;
				colvarTransaccionId.IsForeignKey = false;
				colvarTransaccionId.IsReadOnly = false;
				colvarTransaccionId.DefaultSetting = @"";
				colvarTransaccionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTransaccionId);
				
				TableSchema.TableColumn colvarUsuario = new TableSchema.TableColumn(schema);
				colvarUsuario.ColumnName = "Usuario";
				colvarUsuario.DataType = DbType.AnsiString;
				colvarUsuario.MaxLength = 250;
				colvarUsuario.AutoIncrement = false;
				colvarUsuario.IsNullable = false;
				colvarUsuario.IsPrimaryKey = false;
				colvarUsuario.IsForeignKey = false;
				colvarUsuario.IsReadOnly = false;
				colvarUsuario.DefaultSetting = @"";
				colvarUsuario.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUsuario);
				
				TableSchema.TableColumn colvarMaquina = new TableSchema.TableColumn(schema);
				colvarMaquina.ColumnName = "Maquina";
				colvarMaquina.DataType = DbType.AnsiString;
				colvarMaquina.MaxLength = 250;
				colvarMaquina.AutoIncrement = false;
				colvarMaquina.IsNullable = false;
				colvarMaquina.IsPrimaryKey = false;
				colvarMaquina.IsForeignKey = false;
				colvarMaquina.IsReadOnly = false;
				colvarMaquina.DefaultSetting = @"";
				colvarMaquina.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaquina);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "Fecha";
				colvarFecha.DataType = DbType.AnsiString;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = false;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				colvarFecha.DefaultSetting = @"";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarHora = new TableSchema.TableColumn(schema);
				colvarHora.ColumnName = "Hora";
				colvarHora.DataType = DbType.AnsiString;
				colvarHora.MaxLength = 0;
				colvarHora.AutoIncrement = false;
				colvarHora.IsNullable = false;
				colvarHora.IsPrimaryKey = false;
				colvarHora.IsForeignKey = false;
				colvarHora.IsReadOnly = false;
				colvarHora.DefaultSetting = @"";
				colvarHora.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHora);
				
				TableSchema.TableColumn colvarCambios = new TableSchema.TableColumn(schema);
				colvarCambios.ColumnName = "Cambios";
				colvarCambios.DataType = DbType.AnsiString;
				colvarCambios.MaxLength = -1;
				colvarCambios.AutoIncrement = false;
				colvarCambios.IsNullable = false;
				colvarCambios.IsPrimaryKey = false;
				colvarCambios.IsForeignKey = false;
				colvarCambios.IsReadOnly = false;
				colvarCambios.DefaultSetting = @"";
				colvarCambios.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCambios);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["SrmProvider"].AddSchema("TransaccionLog",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("NumeroRegistro")]
		[Bindable(true)]
		public int NumeroRegistro 
		{
			get { return GetColumnValue<int>(Columns.NumeroRegistro); }
			set { SetColumnValue(Columns.NumeroRegistro, value); }
		}
		  
		[XmlAttribute("EmpresaId")]
		[Bindable(true)]
		public int EmpresaId 
		{
			get { return GetColumnValue<int>(Columns.EmpresaId); }
			set { SetColumnValue(Columns.EmpresaId, value); }
		}
		  
		[XmlAttribute("TransaccionId")]
		[Bindable(true)]
		public int? TransaccionId 
		{
			get { return GetColumnValue<int?>(Columns.TransaccionId); }
			set { SetColumnValue(Columns.TransaccionId, value); }
		}
		  
		[XmlAttribute("Usuario")]
		[Bindable(true)]
		public string Usuario 
		{
			get { return GetColumnValue<string>(Columns.Usuario); }
			set { SetColumnValue(Columns.Usuario, value); }
		}
		  
		[XmlAttribute("Maquina")]
		[Bindable(true)]
		public string Maquina 
		{
			get { return GetColumnValue<string>(Columns.Maquina); }
			set { SetColumnValue(Columns.Maquina, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public string Fecha 
		{
			get { return GetColumnValue<string>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("Hora")]
		[Bindable(true)]
		public string Hora 
		{
			get { return GetColumnValue<string>(Columns.Hora); }
			set { SetColumnValue(Columns.Hora, value); }
		}
		  
		[XmlAttribute("Cambios")]
		[Bindable(true)]
		public string Cambios 
		{
			get { return GetColumnValue<string>(Columns.Cambios); }
			set { SetColumnValue(Columns.Cambios, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varNumeroRegistro,int varEmpresaId,int? varTransaccionId,string varUsuario,string varMaquina,string varFecha,string varHora,string varCambios)
		{
			TransaccionLog item = new TransaccionLog();
			
			item.NumeroRegistro = varNumeroRegistro;
			
			item.EmpresaId = varEmpresaId;
			
			item.TransaccionId = varTransaccionId;
			
			item.Usuario = varUsuario;
			
			item.Maquina = varMaquina;
			
			item.Fecha = varFecha;
			
			item.Hora = varHora;
			
			item.Cambios = varCambios;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,int varNumeroRegistro,int varEmpresaId,int? varTransaccionId,string varUsuario,string varMaquina,string varFecha,string varHora,string varCambios)
		{
			TransaccionLog item = new TransaccionLog();
			
				item.Id = varId;
			
				item.NumeroRegistro = varNumeroRegistro;
			
				item.EmpresaId = varEmpresaId;
			
				item.TransaccionId = varTransaccionId;
			
				item.Usuario = varUsuario;
			
				item.Maquina = varMaquina;
			
				item.Fecha = varFecha;
			
				item.Hora = varHora;
			
				item.Cambios = varCambios;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn NumeroRegistroColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn EmpresaIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TransaccionIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn UsuarioColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MaquinaColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn HoraColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CambiosColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"Id";
			 public static string NumeroRegistro = @"NumeroRegistro";
			 public static string EmpresaId = @"EmpresaId";
			 public static string TransaccionId = @"TransaccionId";
			 public static string Usuario = @"Usuario";
			 public static string Maquina = @"Maquina";
			 public static string Fecha = @"Fecha";
			 public static string Hora = @"Hora";
			 public static string Cambios = @"Cambios";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
