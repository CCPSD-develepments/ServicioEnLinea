using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewSeguimiento class.
    /// </summary>
    [Serializable]
    public partial class ViewSeguimientoCollection : ReadOnlyList<ViewSeguimiento, ViewSeguimientoCollection>
    {        
        public ViewSeguimientoCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_Seguimiento view.
    /// </summary>
    [Serializable]
    public partial class ViewSeguimiento : ReadOnlyRecord<ViewSeguimiento>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_Seguimiento", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"Transaccion";
                //columns
                
                TableSchema.TableColumn colvarSeguimientoId = new TableSchema.TableColumn(schema);
                colvarSeguimientoId.ColumnName = "SeguimientoId";
                colvarSeguimientoId.DataType = DbType.Int32;
                colvarSeguimientoId.MaxLength = 0;
                colvarSeguimientoId.AutoIncrement = false;
                colvarSeguimientoId.IsNullable = false;
                colvarSeguimientoId.IsPrimaryKey = false;
                colvarSeguimientoId.IsForeignKey = false;
                colvarSeguimientoId.IsReadOnly = false;
                
                schema.Columns.Add(colvarSeguimientoId);
                
                TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
                colvarTransaccionId.ColumnName = "TransaccionId";
                colvarTransaccionId.DataType = DbType.Int32;
                colvarTransaccionId.MaxLength = 0;
                colvarTransaccionId.AutoIncrement = false;
                colvarTransaccionId.IsNullable = false;
                colvarTransaccionId.IsPrimaryKey = false;
                colvarTransaccionId.IsForeignKey = false;
                colvarTransaccionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTransaccionId);
                
                TableSchema.TableColumn colvarEstado = new TableSchema.TableColumn(schema);
                colvarEstado.ColumnName = "Estado";
                colvarEstado.DataType = DbType.Int32;
                colvarEstado.MaxLength = 0;
                colvarEstado.AutoIncrement = false;
                colvarEstado.IsNullable = false;
                colvarEstado.IsPrimaryKey = false;
                colvarEstado.IsForeignKey = false;
                colvarEstado.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstado);
                
                TableSchema.TableColumn colvarComentario = new TableSchema.TableColumn(schema);
                colvarComentario.ColumnName = "Comentario";
                colvarComentario.DataType = DbType.AnsiString;
                colvarComentario.MaxLength = 2147483647;
                colvarComentario.AutoIncrement = false;
                colvarComentario.IsNullable = false;
                colvarComentario.IsPrimaryKey = false;
                colvarComentario.IsForeignKey = false;
                colvarComentario.IsReadOnly = false;
                
                schema.Columns.Add(colvarComentario);
                
                TableSchema.TableColumn colvarUsuarioId = new TableSchema.TableColumn(schema);
                colvarUsuarioId.ColumnName = "UsuarioId";
                colvarUsuarioId.DataType = DbType.Int32;
                colvarUsuarioId.MaxLength = 0;
                colvarUsuarioId.AutoIncrement = false;
                colvarUsuarioId.IsNullable = false;
                colvarUsuarioId.IsPrimaryKey = false;
                colvarUsuarioId.IsForeignKey = false;
                colvarUsuarioId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUsuarioId);
                
                TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
                colvarFechaModificacion.ColumnName = "FechaModificacion";
                colvarFechaModificacion.DataType = DbType.DateTime;
                colvarFechaModificacion.MaxLength = 0;
                colvarFechaModificacion.AutoIncrement = false;
                colvarFechaModificacion.IsNullable = false;
                colvarFechaModificacion.IsPrimaryKey = false;
                colvarFechaModificacion.IsForeignKey = false;
                colvarFechaModificacion.IsReadOnly = false;
                
                schema.Columns.Add(colvarFechaModificacion);
                
                TableSchema.TableColumn colvarIsDefault = new TableSchema.TableColumn(schema);
                colvarIsDefault.ColumnName = "IsDefault";
                colvarIsDefault.DataType = DbType.Boolean;
                colvarIsDefault.MaxLength = 0;
                colvarIsDefault.AutoIncrement = false;
                colvarIsDefault.IsNullable = true;
                colvarIsDefault.IsPrimaryKey = false;
                colvarIsDefault.IsForeignKey = false;
                colvarIsDefault.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsDefault);
                
                TableSchema.TableColumn colvarTipoComentario = new TableSchema.TableColumn(schema);
                colvarTipoComentario.ColumnName = "TipoComentario";
                colvarTipoComentario.DataType = DbType.Int32;
                colvarTipoComentario.MaxLength = 0;
                colvarTipoComentario.AutoIncrement = false;
                colvarTipoComentario.IsNullable = true;
                colvarTipoComentario.IsPrimaryKey = false;
                colvarTipoComentario.IsForeignKey = false;
                colvarTipoComentario.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoComentario);
                
                TableSchema.TableColumn colvarNombreCompleto = new TableSchema.TableColumn(schema);
                colvarNombreCompleto.ColumnName = "NombreCompleto";
                colvarNombreCompleto.DataType = DbType.String;
                colvarNombreCompleto.MaxLength = 100;
                colvarNombreCompleto.AutoIncrement = false;
                colvarNombreCompleto.IsNullable = true;
                colvarNombreCompleto.IsPrimaryKey = false;
                colvarNombreCompleto.IsForeignKey = false;
                colvarNombreCompleto.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreCompleto);
                
                TableSchema.TableColumn colvarNombreUsuario = new TableSchema.TableColumn(schema);
                colvarNombreUsuario.ColumnName = "NombreUsuario";
                colvarNombreUsuario.DataType = DbType.String;
                colvarNombreUsuario.MaxLength = 30;
                colvarNombreUsuario.AutoIncrement = false;
                colvarNombreUsuario.IsNullable = false;
                colvarNombreUsuario.IsPrimaryKey = false;
                colvarNombreUsuario.IsForeignKey = false;
                colvarNombreUsuario.IsReadOnly = false;
                
                schema.Columns.Add(colvarNombreUsuario);
                
                TableSchema.TableColumn colvarUsuarioAsignadoNombre = new TableSchema.TableColumn(schema);
                colvarUsuarioAsignadoNombre.ColumnName = "UsuarioAsignadoNombre";
                colvarUsuarioAsignadoNombre.DataType = DbType.String;
                colvarUsuarioAsignadoNombre.MaxLength = 100;
                colvarUsuarioAsignadoNombre.AutoIncrement = false;
                colvarUsuarioAsignadoNombre.IsNullable = true;
                colvarUsuarioAsignadoNombre.IsPrimaryKey = false;
                colvarUsuarioAsignadoNombre.IsForeignKey = false;
                colvarUsuarioAsignadoNombre.IsReadOnly = false;
                
                schema.Columns.Add(colvarUsuarioAsignadoNombre);
                
                TableSchema.TableColumn colvarUsuarioAsignadoNombreUsuario = new TableSchema.TableColumn(schema);
                colvarUsuarioAsignadoNombreUsuario.ColumnName = "UsuarioAsignadoNombreUsuario";
                colvarUsuarioAsignadoNombreUsuario.DataType = DbType.String;
                colvarUsuarioAsignadoNombreUsuario.MaxLength = 30;
                colvarUsuarioAsignadoNombreUsuario.AutoIncrement = false;
                colvarUsuarioAsignadoNombreUsuario.IsNullable = true;
                colvarUsuarioAsignadoNombreUsuario.IsPrimaryKey = false;
                colvarUsuarioAsignadoNombreUsuario.IsForeignKey = false;
                colvarUsuarioAsignadoNombreUsuario.IsReadOnly = false;
                
                schema.Columns.Add(colvarUsuarioAsignadoNombreUsuario);
                
                TableSchema.TableColumn colvarEstatusTransaccion = new TableSchema.TableColumn(schema);
                colvarEstatusTransaccion.ColumnName = "EstatusTransaccion";
                colvarEstatusTransaccion.DataType = DbType.String;
                colvarEstatusTransaccion.MaxLength = 25;
                colvarEstatusTransaccion.AutoIncrement = false;
                colvarEstatusTransaccion.IsNullable = false;
                colvarEstatusTransaccion.IsPrimaryKey = false;
                colvarEstatusTransaccion.IsForeignKey = false;
                colvarEstatusTransaccion.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstatusTransaccion);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_Seguimiento",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewSeguimiento()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewSeguimiento(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewSeguimiento(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewSeguimiento(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("SeguimientoId")]
        [Bindable(true)]
        public int SeguimientoId 
	    {
		    get
		    {
			    return GetColumnValue<int>("SeguimientoId");
		    }
            set 
		    {
			    SetColumnValue("SeguimientoId", value);
            }
        }
	      
        [XmlAttribute("TransaccionId")]
        [Bindable(true)]
        public int TransaccionId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TransaccionId");
		    }
            set 
		    {
			    SetColumnValue("TransaccionId", value);
            }
        }
	      
        [XmlAttribute("Estado")]
        [Bindable(true)]
        public int Estado 
	    {
		    get
		    {
			    return GetColumnValue<int>("Estado");
		    }
            set 
		    {
			    SetColumnValue("Estado", value);
            }
        }
	      
        [XmlAttribute("Comentario")]
        [Bindable(true)]
        public string Comentario 
	    {
		    get
		    {
			    return GetColumnValue<string>("Comentario");
		    }
            set 
		    {
			    SetColumnValue("Comentario", value);
            }
        }
	      
        [XmlAttribute("UsuarioId")]
        [Bindable(true)]
        public int UsuarioId 
	    {
		    get
		    {
			    return GetColumnValue<int>("UsuarioId");
		    }
            set 
		    {
			    SetColumnValue("UsuarioId", value);
            }
        }
	      
        [XmlAttribute("FechaModificacion")]
        [Bindable(true)]
        public DateTime FechaModificacion 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("FechaModificacion");
		    }
            set 
		    {
			    SetColumnValue("FechaModificacion", value);
            }
        }
	      
        [XmlAttribute("IsDefault")]
        [Bindable(true)]
        public bool? IsDefault 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("IsDefault");
		    }
            set 
		    {
			    SetColumnValue("IsDefault", value);
            }
        }
	      
        [XmlAttribute("TipoComentario")]
        [Bindable(true)]
        public int? TipoComentario 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TipoComentario");
		    }
            set 
		    {
			    SetColumnValue("TipoComentario", value);
            }
        }
	      
        [XmlAttribute("NombreCompleto")]
        [Bindable(true)]
        public string NombreCompleto 
	    {
		    get
		    {
			    return GetColumnValue<string>("NombreCompleto");
		    }
            set 
		    {
			    SetColumnValue("NombreCompleto", value);
            }
        }
	      
        [XmlAttribute("NombreUsuario")]
        [Bindable(true)]
        public string NombreUsuario 
	    {
		    get
		    {
			    return GetColumnValue<string>("NombreUsuario");
		    }
            set 
		    {
			    SetColumnValue("NombreUsuario", value);
            }
        }
	      
        [XmlAttribute("UsuarioAsignadoNombre")]
        [Bindable(true)]
        public string UsuarioAsignadoNombre 
	    {
		    get
		    {
			    return GetColumnValue<string>("UsuarioAsignadoNombre");
		    }
            set 
		    {
			    SetColumnValue("UsuarioAsignadoNombre", value);
            }
        }
	      
        [XmlAttribute("UsuarioAsignadoNombreUsuario")]
        [Bindable(true)]
        public string UsuarioAsignadoNombreUsuario 
	    {
		    get
		    {
			    return GetColumnValue<string>("UsuarioAsignadoNombreUsuario");
		    }
            set 
		    {
			    SetColumnValue("UsuarioAsignadoNombreUsuario", value);
            }
        }
	      
        [XmlAttribute("EstatusTransaccion")]
        [Bindable(true)]
        public string EstatusTransaccion 
	    {
		    get
		    {
			    return GetColumnValue<string>("EstatusTransaccion");
		    }
            set 
		    {
			    SetColumnValue("EstatusTransaccion", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string SeguimientoId = @"SeguimientoId";
            
            public static string TransaccionId = @"TransaccionId";
            
            public static string Estado = @"Estado";
            
            public static string Comentario = @"Comentario";
            
            public static string UsuarioId = @"UsuarioId";
            
            public static string FechaModificacion = @"FechaModificacion";
            
            public static string IsDefault = @"IsDefault";
            
            public static string TipoComentario = @"TipoComentario";
            
            public static string NombreCompleto = @"NombreCompleto";
            
            public static string NombreUsuario = @"NombreUsuario";
            
            public static string UsuarioAsignadoNombre = @"UsuarioAsignadoNombre";
            
            public static string UsuarioAsignadoNombreUsuario = @"UsuarioAsignadoNombreUsuario";
            
            public static string EstatusTransaccion = @"EstatusTransaccion";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
