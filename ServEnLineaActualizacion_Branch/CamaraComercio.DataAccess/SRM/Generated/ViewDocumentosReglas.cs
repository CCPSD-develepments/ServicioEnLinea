using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewDocumentosReglas class.
    /// </summary>
    [Serializable]
    public partial class ViewDocumentosReglasCollection : ReadOnlyList<ViewDocumentosReglas, ViewDocumentosReglasCollection>
    {        
        public ViewDocumentosReglasCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_DocumentosReglas view.
    /// </summary>
    [Serializable]
    public partial class ViewDocumentosReglas : ReadOnlyRecord<ViewDocumentosReglas>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_DocumentosReglas", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"Transaccion";
                //columns
                
                TableSchema.TableColumn colvarDocumentoReglaId = new TableSchema.TableColumn(schema);
                colvarDocumentoReglaId.ColumnName = "DocumentoReglaId";
                colvarDocumentoReglaId.DataType = DbType.Int32;
                colvarDocumentoReglaId.MaxLength = 0;
                colvarDocumentoReglaId.AutoIncrement = false;
                colvarDocumentoReglaId.IsNullable = false;
                colvarDocumentoReglaId.IsPrimaryKey = false;
                colvarDocumentoReglaId.IsForeignKey = false;
                colvarDocumentoReglaId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDocumentoReglaId);
                
                TableSchema.TableColumn colvarDocumentoId = new TableSchema.TableColumn(schema);
                colvarDocumentoId.ColumnName = "DocumentoId";
                colvarDocumentoId.DataType = DbType.Int32;
                colvarDocumentoId.MaxLength = 0;
                colvarDocumentoId.AutoIncrement = false;
                colvarDocumentoId.IsNullable = false;
                colvarDocumentoId.IsPrimaryKey = false;
                colvarDocumentoId.IsForeignKey = false;
                colvarDocumentoId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDocumentoId);
                
                TableSchema.TableColumn colvarTipoReglaDocumentoId = new TableSchema.TableColumn(schema);
                colvarTipoReglaDocumentoId.ColumnName = "TipoReglaDocumentoId";
                colvarTipoReglaDocumentoId.DataType = DbType.Int32;
                colvarTipoReglaDocumentoId.MaxLength = 0;
                colvarTipoReglaDocumentoId.AutoIncrement = false;
                colvarTipoReglaDocumentoId.IsNullable = false;
                colvarTipoReglaDocumentoId.IsPrimaryKey = false;
                colvarTipoReglaDocumentoId.IsForeignKey = false;
                colvarTipoReglaDocumentoId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoReglaDocumentoId);
                
                TableSchema.TableColumn colvarReglaDocumento = new TableSchema.TableColumn(schema);
                colvarReglaDocumento.ColumnName = "ReglaDocumento";
                colvarReglaDocumento.DataType = DbType.AnsiString;
                colvarReglaDocumento.MaxLength = -1;
                colvarReglaDocumento.AutoIncrement = false;
                colvarReglaDocumento.IsNullable = false;
                colvarReglaDocumento.IsPrimaryKey = false;
                colvarReglaDocumento.IsForeignKey = false;
                colvarReglaDocumento.IsReadOnly = false;
                
                schema.Columns.Add(colvarReglaDocumento);
                
                TableSchema.TableColumn colvarDocumento = new TableSchema.TableColumn(schema);
                colvarDocumento.ColumnName = "Documento";
                colvarDocumento.DataType = DbType.String;
                colvarDocumento.MaxLength = 150;
                colvarDocumento.AutoIncrement = false;
                colvarDocumento.IsNullable = false;
                colvarDocumento.IsPrimaryKey = false;
                colvarDocumento.IsForeignKey = false;
                colvarDocumento.IsReadOnly = false;
                
                schema.Columns.Add(colvarDocumento);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_DocumentosReglas",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewDocumentosReglas()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewDocumentosReglas(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewDocumentosReglas(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewDocumentosReglas(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("DocumentoReglaId")]
        [Bindable(true)]
        public int DocumentoReglaId 
	    {
		    get
		    {
			    return GetColumnValue<int>("DocumentoReglaId");
		    }
            set 
		    {
			    SetColumnValue("DocumentoReglaId", value);
            }
        }
	      
        [XmlAttribute("DocumentoId")]
        [Bindable(true)]
        public int DocumentoId 
	    {
		    get
		    {
			    return GetColumnValue<int>("DocumentoId");
		    }
            set 
		    {
			    SetColumnValue("DocumentoId", value);
            }
        }
	      
        [XmlAttribute("TipoReglaDocumentoId")]
        [Bindable(true)]
        public int TipoReglaDocumentoId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoReglaDocumentoId");
		    }
            set 
		    {
			    SetColumnValue("TipoReglaDocumentoId", value);
            }
        }
	      
        [XmlAttribute("ReglaDocumento")]
        [Bindable(true)]
        public string ReglaDocumento 
	    {
		    get
		    {
			    return GetColumnValue<string>("ReglaDocumento");
		    }
            set 
		    {
			    SetColumnValue("ReglaDocumento", value);
            }
        }
	      
        [XmlAttribute("Documento")]
        [Bindable(true)]
        public string Documento 
	    {
		    get
		    {
			    return GetColumnValue<string>("Documento");
		    }
            set 
		    {
			    SetColumnValue("Documento", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string DocumentoReglaId = @"DocumentoReglaId";
            
            public static string DocumentoId = @"DocumentoId";
            
            public static string TipoReglaDocumentoId = @"TipoReglaDocumentoId";
            
            public static string ReglaDocumento = @"ReglaDocumento";
            
            public static string Documento = @"Documento";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
