using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.OficinaVirtual
{
	/// <summary>
	/// Strongly-typed collection for the EmpresasPorUsuario class.
	/// </summary>
    [Serializable]
	public partial class EmpresasPorUsuarioCollection : ActiveList<EmpresasPorUsuario, EmpresasPorUsuarioCollection>
	{	   
		public EmpresasPorUsuarioCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>EmpresasPorUsuarioCollection</returns>
		public EmpresasPorUsuarioCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                EmpresasPorUsuario o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the EmpresasPorUsuario table.
	/// </summary>
	[Serializable]
	public partial class EmpresasPorUsuario : ActiveRecord<EmpresasPorUsuario>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public EmpresasPorUsuario()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public EmpresasPorUsuario(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public EmpresasPorUsuario(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public EmpresasPorUsuario(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("EmpresasPorUsuario", TableType.Table, DataService.GetInstance("OficinaVirtualProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"OFV";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarUsuario = new TableSchema.TableColumn(schema);
				colvarUsuario.ColumnName = "Usuario";
				colvarUsuario.DataType = DbType.String;
				colvarUsuario.MaxLength = 50;
				colvarUsuario.AutoIncrement = false;
				colvarUsuario.IsNullable = false;
				colvarUsuario.IsPrimaryKey = false;
				colvarUsuario.IsForeignKey = false;
				colvarUsuario.IsReadOnly = false;
				colvarUsuario.DefaultSetting = @"";
				colvarUsuario.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUsuario);
				
				TableSchema.TableColumn colvarFechaSolicitud = new TableSchema.TableColumn(schema);
				colvarFechaSolicitud.ColumnName = "FechaSolicitud";
				colvarFechaSolicitud.DataType = DbType.DateTime;
				colvarFechaSolicitud.MaxLength = 0;
				colvarFechaSolicitud.AutoIncrement = false;
				colvarFechaSolicitud.IsNullable = false;
				colvarFechaSolicitud.IsPrimaryKey = false;
				colvarFechaSolicitud.IsForeignKey = false;
				colvarFechaSolicitud.IsReadOnly = false;
				colvarFechaSolicitud.DefaultSetting = @"";
				colvarFechaSolicitud.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaSolicitud);
				
				TableSchema.TableColumn colvarFechaCreacion = new TableSchema.TableColumn(schema);
				colvarFechaCreacion.ColumnName = "FechaCreacion";
				colvarFechaCreacion.DataType = DbType.DateTime;
				colvarFechaCreacion.MaxLength = 0;
				colvarFechaCreacion.AutoIncrement = false;
				colvarFechaCreacion.IsNullable = true;
				colvarFechaCreacion.IsPrimaryKey = false;
				colvarFechaCreacion.IsForeignKey = false;
				colvarFechaCreacion.IsReadOnly = false;
				colvarFechaCreacion.DefaultSetting = @"";
				colvarFechaCreacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaCreacion);
				
				TableSchema.TableColumn colvarFechaUltModificacion = new TableSchema.TableColumn(schema);
				colvarFechaUltModificacion.ColumnName = "FechaUltModificacion";
				colvarFechaUltModificacion.DataType = DbType.DateTime;
				colvarFechaUltModificacion.MaxLength = 0;
				colvarFechaUltModificacion.AutoIncrement = false;
				colvarFechaUltModificacion.IsNullable = true;
				colvarFechaUltModificacion.IsPrimaryKey = false;
				colvarFechaUltModificacion.IsForeignKey = false;
				colvarFechaUltModificacion.IsReadOnly = false;
				colvarFechaUltModificacion.DefaultSetting = @"";
				colvarFechaUltModificacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaUltModificacion);
				
				TableSchema.TableColumn colvarEstado = new TableSchema.TableColumn(schema);
				colvarEstado.ColumnName = "Estado";
				colvarEstado.DataType = DbType.Int16;
				colvarEstado.MaxLength = 0;
				colvarEstado.AutoIncrement = false;
				colvarEstado.IsNullable = false;
				colvarEstado.IsPrimaryKey = false;
				colvarEstado.IsForeignKey = false;
				colvarEstado.IsReadOnly = false;
				colvarEstado.DefaultSetting = @"";
				colvarEstado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstado);
				
				TableSchema.TableColumn colvarCamaraID = new TableSchema.TableColumn(schema);
				colvarCamaraID.ColumnName = "CamaraID";
				colvarCamaraID.DataType = DbType.AnsiStringFixedLength;
				colvarCamaraID.MaxLength = 3;
				colvarCamaraID.AutoIncrement = false;
				colvarCamaraID.IsNullable = true;
				colvarCamaraID.IsPrimaryKey = false;
				colvarCamaraID.IsForeignKey = true;
				colvarCamaraID.IsReadOnly = false;
				colvarCamaraID.DefaultSetting = @"";
				
					colvarCamaraID.ForeignKeyTableName = "Camaras";
				schema.Columns.Add(colvarCamaraID);
				
				TableSchema.TableColumn colvarNoRegistro = new TableSchema.TableColumn(schema);
				colvarNoRegistro.ColumnName = "NoRegistro";
				colvarNoRegistro.DataType = DbType.Int32;
				colvarNoRegistro.MaxLength = 0;
				colvarNoRegistro.AutoIncrement = false;
				colvarNoRegistro.IsNullable = true;
				colvarNoRegistro.IsPrimaryKey = false;
				colvarNoRegistro.IsForeignKey = false;
				colvarNoRegistro.IsReadOnly = false;
				colvarNoRegistro.DefaultSetting = @"";
				colvarNoRegistro.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoRegistro);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["OficinaVirtualProvider"].AddSchema("EmpresasPorUsuario",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("Usuario")]
		[Bindable(true)]
		public string Usuario 
		{
			get { return GetColumnValue<string>(Columns.Usuario); }
			set { SetColumnValue(Columns.Usuario, value); }
		}
		  
		[XmlAttribute("FechaSolicitud")]
		[Bindable(true)]
		public DateTime FechaSolicitud 
		{
			get { return GetColumnValue<DateTime>(Columns.FechaSolicitud); }
			set { SetColumnValue(Columns.FechaSolicitud, value); }
		}
		  
		[XmlAttribute("FechaCreacion")]
		[Bindable(true)]
		public DateTime? FechaCreacion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaCreacion); }
			set { SetColumnValue(Columns.FechaCreacion, value); }
		}
		  
		[XmlAttribute("FechaUltModificacion")]
		[Bindable(true)]
		public DateTime? FechaUltModificacion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaUltModificacion); }
			set { SetColumnValue(Columns.FechaUltModificacion, value); }
		}
		  
		[XmlAttribute("Estado")]
		[Bindable(true)]
		public short Estado 
		{
			get { return GetColumnValue<short>(Columns.Estado); }
			set { SetColumnValue(Columns.Estado, value); }
		}
		  
		[XmlAttribute("CamaraID")]
		[Bindable(true)]
		public string CamaraID 
		{
			get { return GetColumnValue<string>(Columns.CamaraID); }
			set { SetColumnValue(Columns.CamaraID, value); }
		}
		  
		[XmlAttribute("NoRegistro")]
		[Bindable(true)]
		public int? NoRegistro 
		{
			get { return GetColumnValue<int?>(Columns.NoRegistro); }
			set { SetColumnValue(Columns.NoRegistro, value); }
		}
		
		#endregion
		
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a Camaras ActiveRecord object related to this EmpresasPorUsuario
		/// 
		/// </summary>
		public CamaraComercio.DataAccess.OficinaVirtual.Camaras Camaras
		{
			get { return CamaraComercio.DataAccess.OficinaVirtual.Camaras.FetchByID(this.CamaraID); }
			set { SetColumnValue("CamaraID", value.Id); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varUsuario,DateTime varFechaSolicitud,DateTime? varFechaCreacion,DateTime? varFechaUltModificacion,short varEstado,string varCamaraID,int? varNoRegistro)
		{
			EmpresasPorUsuario item = new EmpresasPorUsuario();
			
			item.Usuario = varUsuario;
			
			item.FechaSolicitud = varFechaSolicitud;
			
			item.FechaCreacion = varFechaCreacion;
			
			item.FechaUltModificacion = varFechaUltModificacion;
			
			item.Estado = varEstado;
			
			item.CamaraID = varCamaraID;
			
			item.NoRegistro = varNoRegistro;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varUsuario,DateTime varFechaSolicitud,DateTime? varFechaCreacion,DateTime? varFechaUltModificacion,short varEstado,string varCamaraID,int? varNoRegistro)
		{
			EmpresasPorUsuario item = new EmpresasPorUsuario();
			
				item.Id = varId;
			
				item.Usuario = varUsuario;
			
				item.FechaSolicitud = varFechaSolicitud;
			
				item.FechaCreacion = varFechaCreacion;
			
				item.FechaUltModificacion = varFechaUltModificacion;
			
				item.Estado = varEstado;
			
				item.CamaraID = varCamaraID;
			
				item.NoRegistro = varNoRegistro;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn UsuarioColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaSolicitudColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaCreacionColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaUltModificacionColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn EstadoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn CamaraIDColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NoRegistroColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string Usuario = @"Usuario";
			 public static string FechaSolicitud = @"FechaSolicitud";
			 public static string FechaCreacion = @"FechaCreacion";
			 public static string FechaUltModificacion = @"FechaUltModificacion";
			 public static string Estado = @"Estado";
			 public static string CamaraID = @"CamaraID";
			 public static string NoRegistro = @"NoRegistro";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
