//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CamaraComercio.DataAccess.EF.CamaraComun
{
    public partial class ServicioDocumentoRequerido
    {
        #region Property Metadata
    	
    	public struct PropColumns
    	{
    			public static string TipoSociedadId = @"TipoSociedadId";	
    	public static string ServicioId = @"ServicioId";	
    	public static string TipoDocumentoId = @"TipoDocumentoId";	
    	public static string Requerido = @"Requerido";	
    	public static string Grupo = @"Grupo";	
    	public static string SiteVisible = @"SiteVisible";	
     
    	}
        #endregion

        #region Primitive Properties
    
        public virtual int TipoSociedadId
        {
            get { return _tipoSociedadId; }
            set
            {
                if (_tipoSociedadId != value)
                {
                    if (TipoSociedad != null && TipoSociedad.TipoSociedadId != value)
                    {
                        TipoSociedad = null;
                    }
                    _tipoSociedadId = value;
                }
            }
        }
        private int _tipoSociedadId;
    
        public virtual int ServicioId
        {
            get { return _servicioId; }
            set
            {
                if (_servicioId != value)
                {
                    if (Servicio != null && Servicio.ServicioId != value)
                    {
                        Servicio = null;
                    }
                    _servicioId = value;
                }
            }
        }
        private int _servicioId;
    
        public virtual int TipoDocumentoId
        {
            get { return _tipoDocumentoId; }
            set
            {
                if (_tipoDocumentoId != value)
                {
                    if (TipoDocumento != null && TipoDocumento.TipoDocumentoId != value)
                    {
                        TipoDocumento = null;
                    }
                    _tipoDocumentoId = value;
                }
            }
        }
        private int _tipoDocumentoId;
    
        public virtual bool Requerido
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Grupo
        {
            get;
            set;
        }
    
        public virtual bool SiteVisible
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual TipoDocumento TipoDocumento
        {
            get { return _tipoDocumento; }
            set
            {
                if (!ReferenceEquals(_tipoDocumento, value))
                {
                    var previousValue = _tipoDocumento;
                    _tipoDocumento = value;
                    FixupTipoDocumento(previousValue);
                }
            }
        }
        private TipoDocumento _tipoDocumento;
    
        public virtual TipoSociedad TipoSociedad
        {
            get { return _tipoSociedad; }
            set
            {
                if (!ReferenceEquals(_tipoSociedad, value))
                {
                    var previousValue = _tipoSociedad;
                    _tipoSociedad = value;
                    FixupTipoSociedad(previousValue);
                }
            }
        }
        private TipoSociedad _tipoSociedad;
    
        public virtual Servicio Servicio
        {
            get { return _servicio; }
            set
            {
                if (!ReferenceEquals(_servicio, value))
                {
                    var previousValue = _servicio;
                    _servicio = value;
                    FixupServicio(previousValue);
                }
            }
        }
        private Servicio _servicio;

        #endregion

        #region Association Fixup
    
        private void FixupTipoDocumento(TipoDocumento previousValue)
        {
            if (previousValue != null && previousValue.ServicioDocumentoRequerido.Contains(this))
            {
                previousValue.ServicioDocumentoRequerido.Remove(this);
            }
    
            if (TipoDocumento != null)
            {
                if (!TipoDocumento.ServicioDocumentoRequerido.Contains(this))
                {
                    TipoDocumento.ServicioDocumentoRequerido.Add(this);
                }
                if (TipoDocumentoId != TipoDocumento.TipoDocumentoId)
                {
                    TipoDocumentoId = TipoDocumento.TipoDocumentoId;
                }
            }
        }
    
        private void FixupTipoSociedad(TipoSociedad previousValue)
        {
            if (previousValue != null && previousValue.ServicioDocumentoRequerido.Contains(this))
            {
                previousValue.ServicioDocumentoRequerido.Remove(this);
            }
    
            if (TipoSociedad != null)
            {
                if (!TipoSociedad.ServicioDocumentoRequerido.Contains(this))
                {
                    TipoSociedad.ServicioDocumentoRequerido.Add(this);
                }
                if (TipoSociedadId != TipoSociedad.TipoSociedadId)
                {
                    TipoSociedadId = TipoSociedad.TipoSociedadId;
                }
            }
        }
    
        private void FixupServicio(Servicio previousValue)
        {
            if (previousValue != null && previousValue.ServicioDocumentoRequerido.Contains(this))
            {
                previousValue.ServicioDocumentoRequerido.Remove(this);
            }
    
            if (Servicio != null)
            {
                if (!Servicio.ServicioDocumentoRequerido.Contains(this))
                {
                    Servicio.ServicioDocumentoRequerido.Add(this);
                }
                if (ServicioId != Servicio.ServicioId)
                {
                    ServicioId = Servicio.ServicioId;
                }
            }
        }

        #endregion

    }
}
