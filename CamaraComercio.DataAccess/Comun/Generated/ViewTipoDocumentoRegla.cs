using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.Comun{
    /// <summary>
    /// Strongly-typed collection for the ViewTipoDocumentoRegla class.
    /// </summary>
    [Serializable]
    public partial class ViewTipoDocumentoReglaCollection : ReadOnlyList<ViewTipoDocumentoRegla, ViewTipoDocumentoReglaCollection>
    {        
        public ViewTipoDocumentoReglaCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_TipoDocumentoRegla view.
    /// </summary>
    [Serializable]
    public partial class ViewTipoDocumentoRegla : ReadOnlyRecord<ViewTipoDocumentoRegla>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_TipoDocumentoRegla", TableType.View, DataService.GetInstance("ComunProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarTipoReglaDocumentoId = new TableSchema.TableColumn(schema);
                colvarTipoReglaDocumentoId.ColumnName = "TipoReglaDocumentoId";
                colvarTipoReglaDocumentoId.DataType = DbType.Int32;
                colvarTipoReglaDocumentoId.MaxLength = 0;
                colvarTipoReglaDocumentoId.AutoIncrement = false;
                colvarTipoReglaDocumentoId.IsNullable = false;
                colvarTipoReglaDocumentoId.IsPrimaryKey = false;
                colvarTipoReglaDocumentoId.IsForeignKey = false;
                colvarTipoReglaDocumentoId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoReglaDocumentoId);
                
                TableSchema.TableColumn colvarTipoDocumentoId = new TableSchema.TableColumn(schema);
                colvarTipoDocumentoId.ColumnName = "TipoDocumentoId";
                colvarTipoDocumentoId.DataType = DbType.Int32;
                colvarTipoDocumentoId.MaxLength = 0;
                colvarTipoDocumentoId.AutoIncrement = false;
                colvarTipoDocumentoId.IsNullable = false;
                colvarTipoDocumentoId.IsPrimaryKey = false;
                colvarTipoDocumentoId.IsForeignKey = false;
                colvarTipoDocumentoId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoDocumentoId);
                
                TableSchema.TableColumn colvarTipoReglaId = new TableSchema.TableColumn(schema);
                colvarTipoReglaId.ColumnName = "TipoReglaId";
                colvarTipoReglaId.DataType = DbType.Int32;
                colvarTipoReglaId.MaxLength = 0;
                colvarTipoReglaId.AutoIncrement = false;
                colvarTipoReglaId.IsNullable = false;
                colvarTipoReglaId.IsPrimaryKey = false;
                colvarTipoReglaId.IsForeignKey = false;
                colvarTipoReglaId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoReglaId);
                
                TableSchema.TableColumn colvarRegla = new TableSchema.TableColumn(schema);
                colvarRegla.ColumnName = "Regla";
                colvarRegla.DataType = DbType.AnsiString;
                colvarRegla.MaxLength = -1;
                colvarRegla.AutoIncrement = false;
                colvarRegla.IsNullable = false;
                colvarRegla.IsPrimaryKey = false;
                colvarRegla.IsForeignKey = false;
                colvarRegla.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegla);
                
                TableSchema.TableColumn colvarValidado = new TableSchema.TableColumn(schema);
                colvarValidado.ColumnName = "Validado";
                colvarValidado.DataType = DbType.Boolean;
                colvarValidado.MaxLength = 0;
                colvarValidado.AutoIncrement = false;
                colvarValidado.IsNullable = true;
                colvarValidado.IsPrimaryKey = false;
                colvarValidado.IsForeignKey = false;
                colvarValidado.IsReadOnly = false;
                
                schema.Columns.Add(colvarValidado);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ComunProvider"].AddSchema("cvw_TipoDocumentoRegla",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewTipoDocumentoRegla()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewTipoDocumentoRegla(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewTipoDocumentoRegla(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewTipoDocumentoRegla(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("TipoReglaDocumentoId")]
        [Bindable(true)]
        public int TipoReglaDocumentoId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoReglaDocumentoId");
		    }
            set 
		    {
			    SetColumnValue("TipoReglaDocumentoId", value);
            }
        }
	      
        [XmlAttribute("TipoDocumentoId")]
        [Bindable(true)]
        public int TipoDocumentoId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoDocumentoId");
		    }
            set 
		    {
			    SetColumnValue("TipoDocumentoId", value);
            }
        }
	      
        [XmlAttribute("TipoReglaId")]
        [Bindable(true)]
        public int TipoReglaId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoReglaId");
		    }
            set 
		    {
			    SetColumnValue("TipoReglaId", value);
            }
        }
	      
        [XmlAttribute("Regla")]
        [Bindable(true)]
        public string Regla 
	    {
		    get
		    {
			    return GetColumnValue<string>("Regla");
		    }
            set 
		    {
			    SetColumnValue("Regla", value);
            }
        }
	      
        [XmlAttribute("Validado")]
        [Bindable(true)]
        public bool? Validado 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("Validado");
		    }
            set 
		    {
			    SetColumnValue("Validado", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string TipoReglaDocumentoId = @"TipoReglaDocumentoId";
            
            public static string TipoDocumentoId = @"TipoDocumentoId";
            
            public static string TipoReglaId = @"TipoReglaId";
            
            public static string Regla = @"Regla";
            
            public static string Validado = @"Validado";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
