using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM{
    /// <summary>
    /// Strongly-typed collection for the ViewRegistrosOposiciones class.
    /// </summary>
    [Serializable]
    public partial class ViewRegistrosOposicionesCollection : ReadOnlyList<ViewRegistrosOposiciones, ViewRegistrosOposicionesCollection>
    {        
        public ViewRegistrosOposicionesCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the cvw_RegistrosOposiciones view.
    /// </summary>
    [Serializable]
    public partial class ViewRegistrosOposiciones : ReadOnlyRecord<ViewRegistrosOposiciones>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("cvw_RegistrosOposiciones", TableType.View, DataService.GetInstance("SrmProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"Sistema";
                //columns
                
                TableSchema.TableColumn colvarRegistroOposicionId = new TableSchema.TableColumn(schema);
                colvarRegistroOposicionId.ColumnName = "RegistroOposicionId";
                colvarRegistroOposicionId.DataType = DbType.Int32;
                colvarRegistroOposicionId.MaxLength = 0;
                colvarRegistroOposicionId.AutoIncrement = false;
                colvarRegistroOposicionId.IsNullable = false;
                colvarRegistroOposicionId.IsPrimaryKey = false;
                colvarRegistroOposicionId.IsForeignKey = false;
                colvarRegistroOposicionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegistroOposicionId);
                
                TableSchema.TableColumn colvarOposicionId = new TableSchema.TableColumn(schema);
                colvarOposicionId.ColumnName = "OposicionId";
                colvarOposicionId.DataType = DbType.Int32;
                colvarOposicionId.MaxLength = 0;
                colvarOposicionId.AutoIncrement = false;
                colvarOposicionId.IsNullable = false;
                colvarOposicionId.IsPrimaryKey = false;
                colvarOposicionId.IsForeignKey = false;
                colvarOposicionId.IsReadOnly = false;
                
                schema.Columns.Add(colvarOposicionId);
                
                TableSchema.TableColumn colvarRegistroId = new TableSchema.TableColumn(schema);
                colvarRegistroId.ColumnName = "RegistroId";
                colvarRegistroId.DataType = DbType.Int32;
                colvarRegistroId.MaxLength = 0;
                colvarRegistroId.AutoIncrement = false;
                colvarRegistroId.IsNullable = false;
                colvarRegistroId.IsPrimaryKey = false;
                colvarRegistroId.IsForeignKey = false;
                colvarRegistroId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegistroId);
                
                TableSchema.TableColumn colvarRequirientes = new TableSchema.TableColumn(schema);
                colvarRequirientes.ColumnName = "Requirientes";
                colvarRequirientes.DataType = DbType.AnsiString;
                colvarRequirientes.MaxLength = -1;
                colvarRequirientes.AutoIncrement = false;
                colvarRequirientes.IsNullable = false;
                colvarRequirientes.IsPrimaryKey = false;
                colvarRequirientes.IsForeignKey = false;
                colvarRequirientes.IsReadOnly = false;
                
                schema.Columns.Add(colvarRequirientes);
                
                TableSchema.TableColumn colvarPrioridad = new TableSchema.TableColumn(schema);
                colvarPrioridad.ColumnName = "Prioridad";
                colvarPrioridad.DataType = DbType.Boolean;
                colvarPrioridad.MaxLength = 0;
                colvarPrioridad.AutoIncrement = false;
                colvarPrioridad.IsNullable = false;
                colvarPrioridad.IsPrimaryKey = false;
                colvarPrioridad.IsForeignKey = false;
                colvarPrioridad.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrioridad);
                
                TableSchema.TableColumn colvarCerrada = new TableSchema.TableColumn(schema);
                colvarCerrada.ColumnName = "Cerrada";
                colvarCerrada.DataType = DbType.Boolean;
                colvarCerrada.MaxLength = 0;
                colvarCerrada.AutoIncrement = false;
                colvarCerrada.IsNullable = false;
                colvarCerrada.IsPrimaryKey = false;
                colvarCerrada.IsForeignKey = false;
                colvarCerrada.IsReadOnly = false;
                
                schema.Columns.Add(colvarCerrada);
                
                TableSchema.TableColumn colvarFechaCierre = new TableSchema.TableColumn(schema);
                colvarFechaCierre.ColumnName = "FechaCierre";
                colvarFechaCierre.DataType = DbType.DateTime;
                colvarFechaCierre.MaxLength = 0;
                colvarFechaCierre.AutoIncrement = false;
                colvarFechaCierre.IsNullable = true;
                colvarFechaCierre.IsPrimaryKey = false;
                colvarFechaCierre.IsForeignKey = false;
                colvarFechaCierre.IsReadOnly = false;
                
                schema.Columns.Add(colvarFechaCierre);
                
                TableSchema.TableColumn colvarApoderado = new TableSchema.TableColumn(schema);
                colvarApoderado.ColumnName = "Apoderado";
                colvarApoderado.DataType = DbType.AnsiString;
                colvarApoderado.MaxLength = 50;
                colvarApoderado.AutoIncrement = false;
                colvarApoderado.IsNullable = true;
                colvarApoderado.IsPrimaryKey = false;
                colvarApoderado.IsForeignKey = false;
                colvarApoderado.IsReadOnly = false;
                
                schema.Columns.Add(colvarApoderado);
                
                TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
                colvarFecha.ColumnName = "Fecha";
                colvarFecha.DataType = DbType.DateTime;
                colvarFecha.MaxLength = 0;
                colvarFecha.AutoIncrement = false;
                colvarFecha.IsNullable = false;
                colvarFecha.IsPrimaryKey = false;
                colvarFecha.IsForeignKey = false;
                colvarFecha.IsReadOnly = false;
                
                schema.Columns.Add(colvarFecha);
                
                TableSchema.TableColumn colvarNumeroActo = new TableSchema.TableColumn(schema);
                colvarNumeroActo.ColumnName = "NumeroActo";
                colvarNumeroActo.DataType = DbType.String;
                colvarNumeroActo.MaxLength = 20;
                colvarNumeroActo.AutoIncrement = false;
                colvarNumeroActo.IsNullable = true;
                colvarNumeroActo.IsPrimaryKey = false;
                colvarNumeroActo.IsForeignKey = false;
                colvarNumeroActo.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumeroActo);
                
                TableSchema.TableColumn colvarTipoSentenciaId = new TableSchema.TableColumn(schema);
                colvarTipoSentenciaId.ColumnName = "TipoSentenciaId";
                colvarTipoSentenciaId.DataType = DbType.Int32;
                colvarTipoSentenciaId.MaxLength = 0;
                colvarTipoSentenciaId.AutoIncrement = false;
                colvarTipoSentenciaId.IsNullable = false;
                colvarTipoSentenciaId.IsPrimaryKey = false;
                colvarTipoSentenciaId.IsForeignKey = false;
                colvarTipoSentenciaId.IsReadOnly = false;
                
                schema.Columns.Add(colvarTipoSentenciaId);
                
                TableSchema.TableColumn colvarSentencia = new TableSchema.TableColumn(schema);
                colvarSentencia.ColumnName = "Sentencia";
                colvarSentencia.DataType = DbType.String;
                colvarSentencia.MaxLength = 100;
                colvarSentencia.AutoIncrement = false;
                colvarSentencia.IsNullable = true;
                colvarSentencia.IsPrimaryKey = false;
                colvarSentencia.IsForeignKey = false;
                colvarSentencia.IsReadOnly = false;
                
                schema.Columns.Add(colvarSentencia);
                
                TableSchema.TableColumn colvarSintesis = new TableSchema.TableColumn(schema);
                colvarSintesis.ColumnName = "Sintesis";
                colvarSintesis.DataType = DbType.AnsiString;
                colvarSintesis.MaxLength = -1;
                colvarSintesis.AutoIncrement = false;
                colvarSintesis.IsNullable = false;
                colvarSintesis.IsPrimaryKey = false;
                colvarSintesis.IsForeignKey = false;
                colvarSintesis.IsReadOnly = false;
                
                schema.Columns.Add(colvarSintesis);
                
                TableSchema.TableColumn colvarDemandado = new TableSchema.TableColumn(schema);
                colvarDemandado.ColumnName = "Demandado";
                colvarDemandado.DataType = DbType.String;
                colvarDemandado.MaxLength = 420;
                colvarDemandado.AutoIncrement = false;
                colvarDemandado.IsNullable = true;
                colvarDemandado.IsPrimaryKey = false;
                colvarDemandado.IsForeignKey = false;
                colvarDemandado.IsReadOnly = false;
                
                schema.Columns.Add(colvarDemandado);
                
                TableSchema.TableColumn colvarNumeroRegistro = new TableSchema.TableColumn(schema);
                colvarNumeroRegistro.ColumnName = "NumeroRegistro";
                colvarNumeroRegistro.DataType = DbType.Int32;
                colvarNumeroRegistro.MaxLength = 0;
                colvarNumeroRegistro.AutoIncrement = false;
                colvarNumeroRegistro.IsNullable = true;
                colvarNumeroRegistro.IsPrimaryKey = false;
                colvarNumeroRegistro.IsForeignKey = false;
                colvarNumeroRegistro.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumeroRegistro);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SrmProvider"].AddSchema("cvw_RegistrosOposiciones",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewRegistrosOposiciones()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewRegistrosOposiciones(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewRegistrosOposiciones(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewRegistrosOposiciones(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("RegistroOposicionId")]
        [Bindable(true)]
        public int RegistroOposicionId 
	    {
		    get
		    {
			    return GetColumnValue<int>("RegistroOposicionId");
		    }
            set 
		    {
			    SetColumnValue("RegistroOposicionId", value);
            }
        }
	      
        [XmlAttribute("OposicionId")]
        [Bindable(true)]
        public int OposicionId 
	    {
		    get
		    {
			    return GetColumnValue<int>("OposicionId");
		    }
            set 
		    {
			    SetColumnValue("OposicionId", value);
            }
        }
	      
        [XmlAttribute("RegistroId")]
        [Bindable(true)]
        public int RegistroId 
	    {
		    get
		    {
			    return GetColumnValue<int>("RegistroId");
		    }
            set 
		    {
			    SetColumnValue("RegistroId", value);
            }
        }
	      
        [XmlAttribute("Requirientes")]
        [Bindable(true)]
        public string Requirientes 
	    {
		    get
		    {
			    return GetColumnValue<string>("Requirientes");
		    }
            set 
		    {
			    SetColumnValue("Requirientes", value);
            }
        }
	      
        [XmlAttribute("Prioridad")]
        [Bindable(true)]
        public bool Prioridad 
	    {
		    get
		    {
			    return GetColumnValue<bool>("Prioridad");
		    }
            set 
		    {
			    SetColumnValue("Prioridad", value);
            }
        }
	      
        [XmlAttribute("Cerrada")]
        [Bindable(true)]
        public bool Cerrada 
	    {
		    get
		    {
			    return GetColumnValue<bool>("Cerrada");
		    }
            set 
		    {
			    SetColumnValue("Cerrada", value);
            }
        }
	      
        [XmlAttribute("FechaCierre")]
        [Bindable(true)]
        public DateTime? FechaCierre 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("FechaCierre");
		    }
            set 
		    {
			    SetColumnValue("FechaCierre", value);
            }
        }
	      
        [XmlAttribute("Apoderado")]
        [Bindable(true)]
        public string Apoderado 
	    {
		    get
		    {
			    return GetColumnValue<string>("Apoderado");
		    }
            set 
		    {
			    SetColumnValue("Apoderado", value);
            }
        }
	      
        [XmlAttribute("Fecha")]
        [Bindable(true)]
        public DateTime Fecha 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Fecha");
		    }
            set 
		    {
			    SetColumnValue("Fecha", value);
            }
        }
	      
        [XmlAttribute("NumeroActo")]
        [Bindable(true)]
        public string NumeroActo 
	    {
		    get
		    {
			    return GetColumnValue<string>("NumeroActo");
		    }
            set 
		    {
			    SetColumnValue("NumeroActo", value);
            }
        }
	      
        [XmlAttribute("TipoSentenciaId")]
        [Bindable(true)]
        public int TipoSentenciaId 
	    {
		    get
		    {
			    return GetColumnValue<int>("TipoSentenciaId");
		    }
            set 
		    {
			    SetColumnValue("TipoSentenciaId", value);
            }
        }
	      
        [XmlAttribute("Sentencia")]
        [Bindable(true)]
        public string Sentencia 
	    {
		    get
		    {
			    return GetColumnValue<string>("Sentencia");
		    }
            set 
		    {
			    SetColumnValue("Sentencia", value);
            }
        }
	      
        [XmlAttribute("Sintesis")]
        [Bindable(true)]
        public string Sintesis 
	    {
		    get
		    {
			    return GetColumnValue<string>("Sintesis");
		    }
            set 
		    {
			    SetColumnValue("Sintesis", value);
            }
        }
	      
        [XmlAttribute("Demandado")]
        [Bindable(true)]
        public string Demandado 
	    {
		    get
		    {
			    return GetColumnValue<string>("Demandado");
		    }
            set 
		    {
			    SetColumnValue("Demandado", value);
            }
        }
	      
        [XmlAttribute("NumeroRegistro")]
        [Bindable(true)]
        public int? NumeroRegistro 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NumeroRegistro");
		    }
            set 
		    {
			    SetColumnValue("NumeroRegistro", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string RegistroOposicionId = @"RegistroOposicionId";
            
            public static string OposicionId = @"OposicionId";
            
            public static string RegistroId = @"RegistroId";
            
            public static string Requirientes = @"Requirientes";
            
            public static string Prioridad = @"Prioridad";
            
            public static string Cerrada = @"Cerrada";
            
            public static string FechaCierre = @"FechaCierre";
            
            public static string Apoderado = @"Apoderado";
            
            public static string Fecha = @"Fecha";
            
            public static string NumeroActo = @"NumeroActo";
            
            public static string TipoSentenciaId = @"TipoSentenciaId";
            
            public static string Sentencia = @"Sentencia";
            
            public static string Sintesis = @"Sintesis";
            
            public static string Demandado = @"Demandado";
            
            public static string NumeroRegistro = @"NumeroRegistro";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
