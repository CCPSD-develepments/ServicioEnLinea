using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
	/// <summary>
	/// Strongly-typed collection for the Transacciones class.
	/// </summary>
    [Serializable]
	public partial class TransaccionesCollection : ActiveList<Transacciones, TransaccionesCollection>
	{	   
		public TransaccionesCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TransaccionesCollection</returns>
		public TransaccionesCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Transacciones o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Transacciones table.
	/// </summary>
	[Serializable]
	public partial class Transacciones : ActiveRecord<Transacciones>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Transacciones()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Transacciones(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Transacciones(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Transacciones(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Transacciones", TableType.Table, DataService.GetInstance("SrmProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"Transaccion";
				//columns
				
				TableSchema.TableColumn colvarTransaccionId = new TableSchema.TableColumn(schema);
				colvarTransaccionId.ColumnName = "TransaccionId";
				colvarTransaccionId.DataType = DbType.Int32;
				colvarTransaccionId.MaxLength = 0;
				colvarTransaccionId.AutoIncrement = true;
				colvarTransaccionId.IsNullable = false;
				colvarTransaccionId.IsPrimaryKey = true;
				colvarTransaccionId.IsForeignKey = false;
				colvarTransaccionId.IsReadOnly = false;
				colvarTransaccionId.DefaultSetting = @"";
				colvarTransaccionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTransaccionId);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "Fecha";
				colvarFecha.DataType = DbType.DateTime;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = false;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				
						colvarFecha.DefaultSetting = @"(getdate())";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarTipoTransaccionId = new TableSchema.TableColumn(schema);
				colvarTipoTransaccionId.ColumnName = "TipoTransaccionId";
				colvarTipoTransaccionId.DataType = DbType.Int32;
				colvarTipoTransaccionId.MaxLength = 0;
				colvarTipoTransaccionId.AutoIncrement = false;
				colvarTipoTransaccionId.IsNullable = false;
				colvarTipoTransaccionId.IsPrimaryKey = false;
				colvarTipoTransaccionId.IsForeignKey = false;
				colvarTipoTransaccionId.IsReadOnly = false;
				colvarTipoTransaccionId.DefaultSetting = @"";
				colvarTipoTransaccionId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoTransaccionId);
				
				TableSchema.TableColumn colvarTipoServicioId = new TableSchema.TableColumn(schema);
				colvarTipoServicioId.ColumnName = "TipoServicioId";
				colvarTipoServicioId.DataType = DbType.Int32;
				colvarTipoServicioId.MaxLength = 0;
				colvarTipoServicioId.AutoIncrement = false;
				colvarTipoServicioId.IsNullable = false;
				colvarTipoServicioId.IsPrimaryKey = false;
				colvarTipoServicioId.IsForeignKey = false;
				colvarTipoServicioId.IsReadOnly = false;
				colvarTipoServicioId.DefaultSetting = @"";
				colvarTipoServicioId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoServicioId);
				
				TableSchema.TableColumn colvarSalicitante = new TableSchema.TableColumn(schema);
				colvarSalicitante.ColumnName = "Salicitante";
				colvarSalicitante.DataType = DbType.AnsiString;
				colvarSalicitante.MaxLength = 255;
				colvarSalicitante.AutoIncrement = false;
				colvarSalicitante.IsNullable = true;
				colvarSalicitante.IsPrimaryKey = false;
				colvarSalicitante.IsForeignKey = false;
				colvarSalicitante.IsReadOnly = false;
				colvarSalicitante.DefaultSetting = @"";
				colvarSalicitante.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSalicitante);
				
				TableSchema.TableColumn colvarRNCSolicitante = new TableSchema.TableColumn(schema);
				colvarRNCSolicitante.ColumnName = "RNCSolicitante";
				colvarRNCSolicitante.DataType = DbType.AnsiString;
				colvarRNCSolicitante.MaxLength = 15;
				colvarRNCSolicitante.AutoIncrement = false;
				colvarRNCSolicitante.IsNullable = true;
				colvarRNCSolicitante.IsPrimaryKey = false;
				colvarRNCSolicitante.IsForeignKey = false;
				colvarRNCSolicitante.IsReadOnly = false;
				colvarRNCSolicitante.DefaultSetting = @"";
				colvarRNCSolicitante.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRNCSolicitante);
				
				TableSchema.TableColumn colvarNombreContacto = new TableSchema.TableColumn(schema);
				colvarNombreContacto.ColumnName = "NombreContacto";
				colvarNombreContacto.DataType = DbType.AnsiString;
				colvarNombreContacto.MaxLength = 255;
				colvarNombreContacto.AutoIncrement = false;
				colvarNombreContacto.IsNullable = true;
				colvarNombreContacto.IsPrimaryKey = false;
				colvarNombreContacto.IsForeignKey = false;
				colvarNombreContacto.IsReadOnly = false;
				colvarNombreContacto.DefaultSetting = @"";
				colvarNombreContacto.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreContacto);
				
				TableSchema.TableColumn colvarTelefonoContacto = new TableSchema.TableColumn(schema);
				colvarTelefonoContacto.ColumnName = "TelefonoContacto";
				colvarTelefonoContacto.DataType = DbType.AnsiString;
				colvarTelefonoContacto.MaxLength = 15;
				colvarTelefonoContacto.AutoIncrement = false;
				colvarTelefonoContacto.IsNullable = true;
				colvarTelefonoContacto.IsPrimaryKey = false;
				colvarTelefonoContacto.IsForeignKey = false;
				colvarTelefonoContacto.IsReadOnly = false;
				colvarTelefonoContacto.DefaultSetting = @"";
				colvarTelefonoContacto.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTelefonoContacto);
				
				TableSchema.TableColumn colvarFaxContacto = new TableSchema.TableColumn(schema);
				colvarFaxContacto.ColumnName = "FaxContacto";
				colvarFaxContacto.DataType = DbType.AnsiString;
				colvarFaxContacto.MaxLength = 15;
				colvarFaxContacto.AutoIncrement = false;
				colvarFaxContacto.IsNullable = true;
				colvarFaxContacto.IsPrimaryKey = false;
				colvarFaxContacto.IsForeignKey = false;
				colvarFaxContacto.IsReadOnly = false;
				colvarFaxContacto.DefaultSetting = @"";
				colvarFaxContacto.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFaxContacto);
				
				TableSchema.TableColumn colvarNoReciboDGII = new TableSchema.TableColumn(schema);
				colvarNoReciboDGII.ColumnName = "NoReciboDGII";
				colvarNoReciboDGII.DataType = DbType.AnsiString;
				colvarNoReciboDGII.MaxLength = 15;
				colvarNoReciboDGII.AutoIncrement = false;
				colvarNoReciboDGII.IsNullable = true;
				colvarNoReciboDGII.IsPrimaryKey = false;
				colvarNoReciboDGII.IsForeignKey = false;
				colvarNoReciboDGII.IsReadOnly = false;
				colvarNoReciboDGII.DefaultSetting = @"";
				colvarNoReciboDGII.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoReciboDGII);
				
				TableSchema.TableColumn colvarFechaReciboDGII = new TableSchema.TableColumn(schema);
				colvarFechaReciboDGII.ColumnName = "FechaReciboDGII";
				colvarFechaReciboDGII.DataType = DbType.DateTime;
				colvarFechaReciboDGII.MaxLength = 0;
				colvarFechaReciboDGII.AutoIncrement = false;
				colvarFechaReciboDGII.IsNullable = true;
				colvarFechaReciboDGII.IsPrimaryKey = false;
				colvarFechaReciboDGII.IsForeignKey = false;
				colvarFechaReciboDGII.IsReadOnly = false;
				colvarFechaReciboDGII.DefaultSetting = @"";
				colvarFechaReciboDGII.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaReciboDGII);
				
				TableSchema.TableColumn colvarMontoDGII = new TableSchema.TableColumn(schema);
				colvarMontoDGII.ColumnName = "MontoDGII";
				colvarMontoDGII.DataType = DbType.Currency;
				colvarMontoDGII.MaxLength = 0;
				colvarMontoDGII.AutoIncrement = false;
				colvarMontoDGII.IsNullable = true;
				colvarMontoDGII.IsPrimaryKey = false;
				colvarMontoDGII.IsForeignKey = false;
				colvarMontoDGII.IsReadOnly = false;
				colvarMontoDGII.DefaultSetting = @"";
				colvarMontoDGII.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMontoDGII);
				
				TableSchema.TableColumn colvarDestinoTraslado = new TableSchema.TableColumn(schema);
				colvarDestinoTraslado.ColumnName = "DestinoTraslado";
				colvarDestinoTraslado.DataType = DbType.AnsiString;
				colvarDestinoTraslado.MaxLength = 150;
				colvarDestinoTraslado.AutoIncrement = false;
				colvarDestinoTraslado.IsNullable = true;
				colvarDestinoTraslado.IsPrimaryKey = false;
				colvarDestinoTraslado.IsForeignKey = false;
				colvarDestinoTraslado.IsReadOnly = false;
				colvarDestinoTraslado.DefaultSetting = @"";
				colvarDestinoTraslado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDestinoTraslado);
				
				TableSchema.TableColumn colvarComentario = new TableSchema.TableColumn(schema);
				colvarComentario.ColumnName = "Comentario";
				colvarComentario.DataType = DbType.String;
				colvarComentario.MaxLength = -1;
				colvarComentario.AutoIncrement = false;
				colvarComentario.IsNullable = true;
				colvarComentario.IsPrimaryKey = false;
				colvarComentario.IsForeignKey = false;
				colvarComentario.IsReadOnly = false;
				colvarComentario.DefaultSetting = @"";
				colvarComentario.ForeignKeyTableName = "";
				schema.Columns.Add(colvarComentario);
				
				TableSchema.TableColumn colvarComentarioHtml = new TableSchema.TableColumn(schema);
				colvarComentarioHtml.ColumnName = "ComentarioHtml";
				colvarComentarioHtml.DataType = DbType.String;
				colvarComentarioHtml.MaxLength = -1;
				colvarComentarioHtml.AutoIncrement = false;
				colvarComentarioHtml.IsNullable = true;
				colvarComentarioHtml.IsPrimaryKey = false;
				colvarComentarioHtml.IsForeignKey = false;
				colvarComentarioHtml.IsReadOnly = false;
				colvarComentarioHtml.DefaultSetting = @"";
				colvarComentarioHtml.ForeignKeyTableName = "";
				schema.Columns.Add(colvarComentarioHtml);
				
				TableSchema.TableColumn colvarFlowId = new TableSchema.TableColumn(schema);
				colvarFlowId.ColumnName = "FlowId";
				colvarFlowId.DataType = DbType.Guid;
				colvarFlowId.MaxLength = 0;
				colvarFlowId.AutoIncrement = false;
				colvarFlowId.IsNullable = true;
				colvarFlowId.IsPrimaryKey = false;
				colvarFlowId.IsForeignKey = false;
				colvarFlowId.IsReadOnly = false;
				colvarFlowId.DefaultSetting = @"";
				colvarFlowId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFlowId);
				
				TableSchema.TableColumn colvarEstatus = new TableSchema.TableColumn(schema);
				colvarEstatus.ColumnName = "Estatus";
				colvarEstatus.DataType = DbType.Int32;
				colvarEstatus.MaxLength = 0;
				colvarEstatus.AutoIncrement = false;
				colvarEstatus.IsNullable = false;
				colvarEstatus.IsPrimaryKey = false;
				colvarEstatus.IsForeignKey = false;
				colvarEstatus.IsReadOnly = false;
				
						colvarEstatus.DefaultSetting = @"((0))";
				colvarEstatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstatus);
				
				TableSchema.TableColumn colvarEstatus2 = new TableSchema.TableColumn(schema);
				colvarEstatus2.ColumnName = "Estatus2";
				colvarEstatus2.DataType = DbType.Int32;
				colvarEstatus2.MaxLength = 0;
				colvarEstatus2.AutoIncrement = false;
				colvarEstatus2.IsNullable = true;
				colvarEstatus2.IsPrimaryKey = false;
				colvarEstatus2.IsForeignKey = false;
				colvarEstatus2.IsReadOnly = false;
				colvarEstatus2.DefaultSetting = @"";
				colvarEstatus2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstatus2);
				
				TableSchema.TableColumn colvarPrioridad = new TableSchema.TableColumn(schema);
				colvarPrioridad.ColumnName = "Prioridad";
				colvarPrioridad.DataType = DbType.String;
				colvarPrioridad.MaxLength = 1;
				colvarPrioridad.AutoIncrement = false;
				colvarPrioridad.IsNullable = true;
				colvarPrioridad.IsPrimaryKey = false;
				colvarPrioridad.IsForeignKey = false;
				colvarPrioridad.IsReadOnly = false;
				colvarPrioridad.DefaultSetting = @"";
				colvarPrioridad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrioridad);
				
				TableSchema.TableColumn colvarCustomString1 = new TableSchema.TableColumn(schema);
				colvarCustomString1.ColumnName = "CustomString1";
				colvarCustomString1.DataType = DbType.String;
				colvarCustomString1.MaxLength = 250;
				colvarCustomString1.AutoIncrement = false;
				colvarCustomString1.IsNullable = true;
				colvarCustomString1.IsPrimaryKey = false;
				colvarCustomString1.IsForeignKey = false;
				colvarCustomString1.IsReadOnly = false;
				colvarCustomString1.DefaultSetting = @"";
				colvarCustomString1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomString1);
				
				TableSchema.TableColumn colvarCustomString2 = new TableSchema.TableColumn(schema);
				colvarCustomString2.ColumnName = "CustomString2";
				colvarCustomString2.DataType = DbType.String;
				colvarCustomString2.MaxLength = 250;
				colvarCustomString2.AutoIncrement = false;
				colvarCustomString2.IsNullable = true;
				colvarCustomString2.IsPrimaryKey = false;
				colvarCustomString2.IsForeignKey = false;
				colvarCustomString2.IsReadOnly = false;
				colvarCustomString2.DefaultSetting = @"";
				colvarCustomString2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomString2);
				
				TableSchema.TableColumn colvarCustomString3 = new TableSchema.TableColumn(schema);
				colvarCustomString3.ColumnName = "CustomString3";
				colvarCustomString3.DataType = DbType.String;
				colvarCustomString3.MaxLength = 250;
				colvarCustomString3.AutoIncrement = false;
				colvarCustomString3.IsNullable = true;
				colvarCustomString3.IsPrimaryKey = false;
				colvarCustomString3.IsForeignKey = false;
				colvarCustomString3.IsReadOnly = false;
				colvarCustomString3.DefaultSetting = @"";
				colvarCustomString3.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomString3);
				
				TableSchema.TableColumn colvarCustomInt1 = new TableSchema.TableColumn(schema);
				colvarCustomInt1.ColumnName = "CustomInt1";
				colvarCustomInt1.DataType = DbType.Int32;
				colvarCustomInt1.MaxLength = 0;
				colvarCustomInt1.AutoIncrement = false;
				colvarCustomInt1.IsNullable = true;
				colvarCustomInt1.IsPrimaryKey = false;
				colvarCustomInt1.IsForeignKey = false;
				colvarCustomInt1.IsReadOnly = false;
				colvarCustomInt1.DefaultSetting = @"";
				colvarCustomInt1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomInt1);
				
				TableSchema.TableColumn colvarCustomInt2 = new TableSchema.TableColumn(schema);
				colvarCustomInt2.ColumnName = "CustomInt2";
				colvarCustomInt2.DataType = DbType.Int32;
				colvarCustomInt2.MaxLength = 0;
				colvarCustomInt2.AutoIncrement = false;
				colvarCustomInt2.IsNullable = true;
				colvarCustomInt2.IsPrimaryKey = false;
				colvarCustomInt2.IsForeignKey = false;
				colvarCustomInt2.IsReadOnly = false;
				colvarCustomInt2.DefaultSetting = @"";
				colvarCustomInt2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomInt2);
				
				TableSchema.TableColumn colvarCustomInt3 = new TableSchema.TableColumn(schema);
				colvarCustomInt3.ColumnName = "CustomInt3";
				colvarCustomInt3.DataType = DbType.Int32;
				colvarCustomInt3.MaxLength = 0;
				colvarCustomInt3.AutoIncrement = false;
				colvarCustomInt3.IsNullable = true;
				colvarCustomInt3.IsPrimaryKey = false;
				colvarCustomInt3.IsForeignKey = false;
				colvarCustomInt3.IsReadOnly = false;
				colvarCustomInt3.DefaultSetting = @"";
				colvarCustomInt3.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomInt3);
				
				TableSchema.TableColumn colvarCustomDateTime1 = new TableSchema.TableColumn(schema);
				colvarCustomDateTime1.ColumnName = "CustomDateTime1";
				colvarCustomDateTime1.DataType = DbType.DateTime;
				colvarCustomDateTime1.MaxLength = 0;
				colvarCustomDateTime1.AutoIncrement = false;
				colvarCustomDateTime1.IsNullable = true;
				colvarCustomDateTime1.IsPrimaryKey = false;
				colvarCustomDateTime1.IsForeignKey = false;
				colvarCustomDateTime1.IsReadOnly = false;
				colvarCustomDateTime1.DefaultSetting = @"";
				colvarCustomDateTime1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomDateTime1);
				
				TableSchema.TableColumn colvarCustomDateTime2 = new TableSchema.TableColumn(schema);
				colvarCustomDateTime2.ColumnName = "CustomDateTime2";
				colvarCustomDateTime2.DataType = DbType.DateTime;
				colvarCustomDateTime2.MaxLength = 0;
				colvarCustomDateTime2.AutoIncrement = false;
				colvarCustomDateTime2.IsNullable = true;
				colvarCustomDateTime2.IsPrimaryKey = false;
				colvarCustomDateTime2.IsForeignKey = false;
				colvarCustomDateTime2.IsReadOnly = false;
				colvarCustomDateTime2.DefaultSetting = @"";
				colvarCustomDateTime2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomDateTime2);
				
				TableSchema.TableColumn colvarCustomDecimal1 = new TableSchema.TableColumn(schema);
				colvarCustomDecimal1.ColumnName = "CustomDecimal1";
				colvarCustomDecimal1.DataType = DbType.Decimal;
				colvarCustomDecimal1.MaxLength = 0;
				colvarCustomDecimal1.AutoIncrement = false;
				colvarCustomDecimal1.IsNullable = true;
				colvarCustomDecimal1.IsPrimaryKey = false;
				colvarCustomDecimal1.IsForeignKey = false;
				colvarCustomDecimal1.IsReadOnly = false;
				colvarCustomDecimal1.DefaultSetting = @"";
				colvarCustomDecimal1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomDecimal1);
				
				TableSchema.TableColumn colvarCustomDecimal2 = new TableSchema.TableColumn(schema);
				colvarCustomDecimal2.ColumnName = "CustomDecimal2";
				colvarCustomDecimal2.DataType = DbType.Decimal;
				colvarCustomDecimal2.MaxLength = 0;
				colvarCustomDecimal2.AutoIncrement = false;
				colvarCustomDecimal2.IsNullable = true;
				colvarCustomDecimal2.IsPrimaryKey = false;
				colvarCustomDecimal2.IsForeignKey = false;
				colvarCustomDecimal2.IsReadOnly = false;
				colvarCustomDecimal2.DefaultSetting = @"";
				colvarCustomDecimal2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustomDecimal2);
				
				TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
				colvarFechaModificacion.ColumnName = "FechaModificacion";
				colvarFechaModificacion.DataType = DbType.DateTime;
				colvarFechaModificacion.MaxLength = 0;
				colvarFechaModificacion.AutoIncrement = false;
				colvarFechaModificacion.IsNullable = true;
				colvarFechaModificacion.IsPrimaryKey = false;
				colvarFechaModificacion.IsForeignKey = false;
				colvarFechaModificacion.IsReadOnly = false;
				
						colvarFechaModificacion.DefaultSetting = @"(getdate())";
				colvarFechaModificacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaModificacion);
				
				TableSchema.TableColumn colvarRowguid = new TableSchema.TableColumn(schema);
				colvarRowguid.ColumnName = "rowguid";
				colvarRowguid.DataType = DbType.Guid;
				colvarRowguid.MaxLength = 0;
				colvarRowguid.AutoIncrement = false;
				colvarRowguid.IsNullable = true;
				colvarRowguid.IsPrimaryKey = false;
				colvarRowguid.IsForeignKey = false;
				colvarRowguid.IsReadOnly = false;
				
						colvarRowguid.DefaultSetting = @"(newid())";
				colvarRowguid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRowguid);
				
				TableSchema.TableColumn colvarTipo = new TableSchema.TableColumn(schema);
				colvarTipo.ColumnName = "Tipo";
				colvarTipo.DataType = DbType.Int32;
				colvarTipo.MaxLength = 0;
				colvarTipo.AutoIncrement = false;
				colvarTipo.IsNullable = true;
				colvarTipo.IsPrimaryKey = false;
				colvarTipo.IsForeignKey = false;
				colvarTipo.IsReadOnly = false;
				colvarTipo.DefaultSetting = @"";
				colvarTipo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipo);
				
				TableSchema.TableColumn colvarNcf = new TableSchema.TableColumn(schema);
				colvarNcf.ColumnName = "NCF";
				colvarNcf.DataType = DbType.AnsiString;
				colvarNcf.MaxLength = 20;
				colvarNcf.AutoIncrement = false;
				colvarNcf.IsNullable = true;
				colvarNcf.IsPrimaryKey = false;
				colvarNcf.IsForeignKey = false;
				colvarNcf.IsReadOnly = false;
				colvarNcf.DefaultSetting = @"";
				colvarNcf.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNcf);
				
				TableSchema.TableColumn colvarUsuarioId = new TableSchema.TableColumn(schema);
				colvarUsuarioId.ColumnName = "UsuarioId";
				colvarUsuarioId.DataType = DbType.Int32;
				colvarUsuarioId.MaxLength = 0;
				colvarUsuarioId.AutoIncrement = false;
				colvarUsuarioId.IsNullable = true;
				colvarUsuarioId.IsPrimaryKey = false;
				colvarUsuarioId.IsForeignKey = false;
				colvarUsuarioId.IsReadOnly = false;
				colvarUsuarioId.DefaultSetting = @"";
				colvarUsuarioId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUsuarioId);
				
				TableSchema.TableColumn colvarHoraInicio = new TableSchema.TableColumn(schema);
				colvarHoraInicio.ColumnName = "HoraInicio";
				colvarHoraInicio.DataType = DbType.DateTime;
				colvarHoraInicio.MaxLength = 0;
				colvarHoraInicio.AutoIncrement = false;
				colvarHoraInicio.IsNullable = true;
				colvarHoraInicio.IsPrimaryKey = false;
				colvarHoraInicio.IsForeignKey = false;
				colvarHoraInicio.IsReadOnly = false;
				colvarHoraInicio.DefaultSetting = @"";
				colvarHoraInicio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHoraInicio);
				
				TableSchema.TableColumn colvarHoraFinal = new TableSchema.TableColumn(schema);
				colvarHoraFinal.ColumnName = "HoraFinal";
				colvarHoraFinal.DataType = DbType.DateTime;
				colvarHoraFinal.MaxLength = 0;
				colvarHoraFinal.AutoIncrement = false;
				colvarHoraFinal.IsNullable = true;
				colvarHoraFinal.IsPrimaryKey = false;
				colvarHoraFinal.IsForeignKey = false;
				colvarHoraFinal.IsReadOnly = false;
				colvarHoraFinal.DefaultSetting = @"";
				colvarHoraFinal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHoraFinal);
				
				TableSchema.TableColumn colvarReceptor = new TableSchema.TableColumn(schema);
				colvarReceptor.ColumnName = "Receptor";
				colvarReceptor.DataType = DbType.AnsiString;
				colvarReceptor.MaxLength = 15;
				colvarReceptor.AutoIncrement = false;
				colvarReceptor.IsNullable = true;
				colvarReceptor.IsPrimaryKey = false;
				colvarReceptor.IsForeignKey = false;
				colvarReceptor.IsReadOnly = false;
				colvarReceptor.DefaultSetting = @"";
				colvarReceptor.ForeignKeyTableName = "";
				schema.Columns.Add(colvarReceptor);
				
				TableSchema.TableColumn colvarTipoNcf = new TableSchema.TableColumn(schema);
				colvarTipoNcf.ColumnName = "TipoNcf";
				colvarTipoNcf.DataType = DbType.String;
				colvarTipoNcf.MaxLength = 150;
				colvarTipoNcf.AutoIncrement = false;
				colvarTipoNcf.IsNullable = true;
				colvarTipoNcf.IsPrimaryKey = false;
				colvarTipoNcf.IsForeignKey = false;
				colvarTipoNcf.IsReadOnly = false;
				colvarTipoNcf.DefaultSetting = @"";
				colvarTipoNcf.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoNcf);
				
				TableSchema.TableColumn colvarUbicacionExpedienteId = new TableSchema.TableColumn(schema);
				colvarUbicacionExpedienteId.ColumnName = "UbicacionExpedienteId";
				colvarUbicacionExpedienteId.DataType = DbType.Int32;
				colvarUbicacionExpedienteId.MaxLength = 0;
				colvarUbicacionExpedienteId.AutoIncrement = false;
				colvarUbicacionExpedienteId.IsNullable = true;
				colvarUbicacionExpedienteId.IsPrimaryKey = false;
				colvarUbicacionExpedienteId.IsForeignKey = true;
				colvarUbicacionExpedienteId.IsReadOnly = false;
				colvarUbicacionExpedienteId.DefaultSetting = @"";
				
					colvarUbicacionExpedienteId.ForeignKeyTableName = "UbicacionesExpedientes";
				schema.Columns.Add(colvarUbicacionExpedienteId);
				
				TableSchema.TableColumn colvarUbicacionExterna = new TableSchema.TableColumn(schema);
				colvarUbicacionExterna.ColumnName = "UbicacionExterna";
				colvarUbicacionExterna.DataType = DbType.AnsiString;
				colvarUbicacionExterna.MaxLength = 100;
				colvarUbicacionExterna.AutoIncrement = false;
				colvarUbicacionExterna.IsNullable = true;
				colvarUbicacionExterna.IsPrimaryKey = false;
				colvarUbicacionExterna.IsForeignKey = false;
				colvarUbicacionExterna.IsReadOnly = false;
				colvarUbicacionExterna.DefaultSetting = @"";
				colvarUbicacionExterna.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUbicacionExterna);
				
				TableSchema.TableColumn colvarTipoServicio = new TableSchema.TableColumn(schema);
				colvarTipoServicio.ColumnName = "TipoServicio";
				colvarTipoServicio.DataType = DbType.AnsiString;
				colvarTipoServicio.MaxLength = 50;
				colvarTipoServicio.AutoIncrement = false;
				colvarTipoServicio.IsNullable = true;
				colvarTipoServicio.IsPrimaryKey = false;
				colvarTipoServicio.IsForeignKey = false;
				colvarTipoServicio.IsReadOnly = false;
				colvarTipoServicio.DefaultSetting = @"";
				colvarTipoServicio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoServicio);
				
				TableSchema.TableColumn colvarServicio = new TableSchema.TableColumn(schema);
				colvarServicio.ColumnName = "Servicio";
				colvarServicio.DataType = DbType.AnsiString;
				colvarServicio.MaxLength = 250;
				colvarServicio.AutoIncrement = false;
				colvarServicio.IsNullable = true;
				colvarServicio.IsPrimaryKey = false;
				colvarServicio.IsForeignKey = false;
				colvarServicio.IsReadOnly = false;
				colvarServicio.DefaultSetting = @"";
				colvarServicio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarServicio);
				
				TableSchema.TableColumn colvarTipoServicioSufijo = new TableSchema.TableColumn(schema);
				colvarTipoServicioSufijo.ColumnName = "TipoServicioSufijo";
				colvarTipoServicioSufijo.DataType = DbType.AnsiString;
				colvarTipoServicioSufijo.MaxLength = 2;
				colvarTipoServicioSufijo.AutoIncrement = false;
				colvarTipoServicioSufijo.IsNullable = true;
				colvarTipoServicioSufijo.IsPrimaryKey = false;
				colvarTipoServicioSufijo.IsForeignKey = false;
				colvarTipoServicioSufijo.IsReadOnly = false;
				colvarTipoServicioSufijo.DefaultSetting = @"";
				colvarTipoServicioSufijo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoServicioSufijo);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["SrmProvider"].AddSchema("Transacciones",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("TransaccionId")]
		[Bindable(true)]
		public int TransaccionId 
		{
			get { return GetColumnValue<int>(Columns.TransaccionId); }
			set { SetColumnValue(Columns.TransaccionId, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public DateTime Fecha 
		{
			get { return GetColumnValue<DateTime>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("TipoTransaccionId")]
		[Bindable(true)]
		public int TipoTransaccionId 
		{
			get { return GetColumnValue<int>(Columns.TipoTransaccionId); }
			set { SetColumnValue(Columns.TipoTransaccionId, value); }
		}
		  
		[XmlAttribute("TipoServicioId")]
		[Bindable(true)]
		public int TipoServicioId 
		{
			get { return GetColumnValue<int>(Columns.TipoServicioId); }
			set { SetColumnValue(Columns.TipoServicioId, value); }
		}
		  
		[XmlAttribute("Salicitante")]
		[Bindable(true)]
		public string Salicitante 
		{
			get { return GetColumnValue<string>(Columns.Salicitante); }
			set { SetColumnValue(Columns.Salicitante, value); }
		}
		  
		[XmlAttribute("RNCSolicitante")]
		[Bindable(true)]
		public string RNCSolicitante 
		{
			get { return GetColumnValue<string>(Columns.RNCSolicitante); }
			set { SetColumnValue(Columns.RNCSolicitante, value); }
		}
		  
		[XmlAttribute("NombreContacto")]
		[Bindable(true)]
		public string NombreContacto 
		{
			get { return GetColumnValue<string>(Columns.NombreContacto); }
			set { SetColumnValue(Columns.NombreContacto, value); }
		}
		  
		[XmlAttribute("TelefonoContacto")]
		[Bindable(true)]
		public string TelefonoContacto 
		{
			get { return GetColumnValue<string>(Columns.TelefonoContacto); }
			set { SetColumnValue(Columns.TelefonoContacto, value); }
		}
		  
		[XmlAttribute("FaxContacto")]
		[Bindable(true)]
		public string FaxContacto 
		{
			get { return GetColumnValue<string>(Columns.FaxContacto); }
			set { SetColumnValue(Columns.FaxContacto, value); }
		}
		  
		[XmlAttribute("NoReciboDGII")]
		[Bindable(true)]
		public string NoReciboDGII 
		{
			get { return GetColumnValue<string>(Columns.NoReciboDGII); }
			set { SetColumnValue(Columns.NoReciboDGII, value); }
		}
		  
		[XmlAttribute("FechaReciboDGII")]
		[Bindable(true)]
		public DateTime? FechaReciboDGII 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaReciboDGII); }
			set { SetColumnValue(Columns.FechaReciboDGII, value); }
		}
		  
		[XmlAttribute("MontoDGII")]
		[Bindable(true)]
		public decimal? MontoDGII 
		{
			get { return GetColumnValue<decimal?>(Columns.MontoDGII); }
			set { SetColumnValue(Columns.MontoDGII, value); }
		}
		  
		[XmlAttribute("DestinoTraslado")]
		[Bindable(true)]
		public string DestinoTraslado 
		{
			get { return GetColumnValue<string>(Columns.DestinoTraslado); }
			set { SetColumnValue(Columns.DestinoTraslado, value); }
		}
		  
		[XmlAttribute("Comentario")]
		[Bindable(true)]
		public string Comentario 
		{
			get { return GetColumnValue<string>(Columns.Comentario); }
			set { SetColumnValue(Columns.Comentario, value); }
		}
		  
		[XmlAttribute("ComentarioHtml")]
		[Bindable(true)]
		public string ComentarioHtml 
		{
			get { return GetColumnValue<string>(Columns.ComentarioHtml); }
			set { SetColumnValue(Columns.ComentarioHtml, value); }
		}
		  
		[XmlAttribute("FlowId")]
		[Bindable(true)]
		public Guid? FlowId 
		{
			get { return GetColumnValue<Guid?>(Columns.FlowId); }
			set { SetColumnValue(Columns.FlowId, value); }
		}
		  
		[XmlAttribute("Estatus")]
		[Bindable(true)]
		public int Estatus 
		{
			get { return GetColumnValue<int>(Columns.Estatus); }
			set { SetColumnValue(Columns.Estatus, value); }
		}
		  
		[XmlAttribute("Estatus2")]
		[Bindable(true)]
		public int? Estatus2 
		{
			get { return GetColumnValue<int?>(Columns.Estatus2); }
			set { SetColumnValue(Columns.Estatus2, value); }
		}
		  
		[XmlAttribute("Prioridad")]
		[Bindable(true)]
		public string Prioridad 
		{
			get { return GetColumnValue<string>(Columns.Prioridad); }
			set { SetColumnValue(Columns.Prioridad, value); }
		}
		  
		[XmlAttribute("CustomString1")]
		[Bindable(true)]
		public string CustomString1 
		{
			get { return GetColumnValue<string>(Columns.CustomString1); }
			set { SetColumnValue(Columns.CustomString1, value); }
		}
		  
		[XmlAttribute("CustomString2")]
		[Bindable(true)]
		public string CustomString2 
		{
			get { return GetColumnValue<string>(Columns.CustomString2); }
			set { SetColumnValue(Columns.CustomString2, value); }
		}
		  
		[XmlAttribute("CustomString3")]
		[Bindable(true)]
		public string CustomString3 
		{
			get { return GetColumnValue<string>(Columns.CustomString3); }
			set { SetColumnValue(Columns.CustomString3, value); }
		}
		  
		[XmlAttribute("CustomInt1")]
		[Bindable(true)]
		public int? CustomInt1 
		{
			get { return GetColumnValue<int?>(Columns.CustomInt1); }
			set { SetColumnValue(Columns.CustomInt1, value); }
		}
		  
		[XmlAttribute("CustomInt2")]
		[Bindable(true)]
		public int? CustomInt2 
		{
			get { return GetColumnValue<int?>(Columns.CustomInt2); }
			set { SetColumnValue(Columns.CustomInt2, value); }
		}
		  
		[XmlAttribute("CustomInt3")]
		[Bindable(true)]
		public int? CustomInt3 
		{
			get { return GetColumnValue<int?>(Columns.CustomInt3); }
			set { SetColumnValue(Columns.CustomInt3, value); }
		}
		  
		[XmlAttribute("CustomDateTime1")]
		[Bindable(true)]
		public DateTime? CustomDateTime1 
		{
			get { return GetColumnValue<DateTime?>(Columns.CustomDateTime1); }
			set { SetColumnValue(Columns.CustomDateTime1, value); }
		}
		  
		[XmlAttribute("CustomDateTime2")]
		[Bindable(true)]
		public DateTime? CustomDateTime2 
		{
			get { return GetColumnValue<DateTime?>(Columns.CustomDateTime2); }
			set { SetColumnValue(Columns.CustomDateTime2, value); }
		}
		  
		[XmlAttribute("CustomDecimal1")]
		[Bindable(true)]
		public decimal? CustomDecimal1 
		{
			get { return GetColumnValue<decimal?>(Columns.CustomDecimal1); }
			set { SetColumnValue(Columns.CustomDecimal1, value); }
		}
		  
		[XmlAttribute("CustomDecimal2")]
		[Bindable(true)]
		public decimal? CustomDecimal2 
		{
			get { return GetColumnValue<decimal?>(Columns.CustomDecimal2); }
			set { SetColumnValue(Columns.CustomDecimal2, value); }
		}
		  
		[XmlAttribute("FechaModificacion")]
		[Bindable(true)]
		public DateTime? FechaModificacion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaModificacion); }
			set { SetColumnValue(Columns.FechaModificacion, value); }
		}
		  
		[XmlAttribute("Rowguid")]
		[Bindable(true)]
		public Guid? Rowguid 
		{
			get { return GetColumnValue<Guid?>(Columns.Rowguid); }
			set { SetColumnValue(Columns.Rowguid, value); }
		}
		  
		[XmlAttribute("Tipo")]
		[Bindable(true)]
		public int? Tipo 
		{
			get { return GetColumnValue<int?>(Columns.Tipo); }
			set { SetColumnValue(Columns.Tipo, value); }
		}
		  
		[XmlAttribute("Ncf")]
		[Bindable(true)]
		public string Ncf 
		{
			get { return GetColumnValue<string>(Columns.Ncf); }
			set { SetColumnValue(Columns.Ncf, value); }
		}
		  
		[XmlAttribute("UsuarioId")]
		[Bindable(true)]
		public int? UsuarioId 
		{
			get { return GetColumnValue<int?>(Columns.UsuarioId); }
			set { SetColumnValue(Columns.UsuarioId, value); }
		}
		  
		[XmlAttribute("HoraInicio")]
		[Bindable(true)]
		public DateTime? HoraInicio 
		{
			get { return GetColumnValue<DateTime?>(Columns.HoraInicio); }
			set { SetColumnValue(Columns.HoraInicio, value); }
		}
		  
		[XmlAttribute("HoraFinal")]
		[Bindable(true)]
		public DateTime? HoraFinal 
		{
			get { return GetColumnValue<DateTime?>(Columns.HoraFinal); }
			set { SetColumnValue(Columns.HoraFinal, value); }
		}
		  
		[XmlAttribute("Receptor")]
		[Bindable(true)]
		public string Receptor 
		{
			get { return GetColumnValue<string>(Columns.Receptor); }
			set { SetColumnValue(Columns.Receptor, value); }
		}
		  
		[XmlAttribute("TipoNcf")]
		[Bindable(true)]
		public string TipoNcf 
		{
			get { return GetColumnValue<string>(Columns.TipoNcf); }
			set { SetColumnValue(Columns.TipoNcf, value); }
		}
		  
		[XmlAttribute("UbicacionExpedienteId")]
		[Bindable(true)]
		public int? UbicacionExpedienteId 
		{
			get { return GetColumnValue<int?>(Columns.UbicacionExpedienteId); }
			set { SetColumnValue(Columns.UbicacionExpedienteId, value); }
		}
		  
		[XmlAttribute("UbicacionExterna")]
		[Bindable(true)]
		public string UbicacionExterna 
		{
			get { return GetColumnValue<string>(Columns.UbicacionExterna); }
			set { SetColumnValue(Columns.UbicacionExterna, value); }
		}
		  
		[XmlAttribute("TipoServicio")]
		[Bindable(true)]
		public string TipoServicio 
		{
			get { return GetColumnValue<string>(Columns.TipoServicio); }
			set { SetColumnValue(Columns.TipoServicio, value); }
		}
		  
		[XmlAttribute("Servicio")]
		[Bindable(true)]
		public string Servicio 
		{
			get { return GetColumnValue<string>(Columns.Servicio); }
			set { SetColumnValue(Columns.Servicio, value); }
		}
		  
		[XmlAttribute("TipoServicioSufijo")]
		[Bindable(true)]
		public string TipoServicioSufijo 
		{
			get { return GetColumnValue<string>(Columns.TipoServicioSufijo); }
			set { SetColumnValue(Columns.TipoServicioSufijo, value); }
		}
		
		#endregion
		
		
		#region PrimaryKey Methods		
		
        protected override void SetPrimaryKey(object oValue)
        {
            base.SetPrimaryKey(oValue);
            
            SetPKValues();
        }
        
		
		public CamaraComercio.DataAccess.SRM.AngendaTransaccionesCollection AngendaTransaccionesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.AngendaTransaccionesCollection().Where(AngendaTransacciones.Columns.TransaccionId, TransaccionId).Load();
		}
		public CamaraComercio.DataAccess.SRM.AsignacionesCollection AsignacionesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.AsignacionesCollection().Where(Asignaciones.Columns.TransaccionId, TransaccionId).Load();
		}
		public CamaraComercio.DataAccess.SRM.DocumentosTransaccionesCollection DocumentosTransaccionesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.DocumentosTransaccionesCollection().Where(DocumentosTransacciones.Columns.TransaccionId, TransaccionId).Load();
		}
		public CamaraComercio.DataAccess.SRM.FormasPagosCollection FormasPagosRecords()
		{
			return new CamaraComercio.DataAccess.SRM.FormasPagosCollection().Where(FormasPagos.Columns.TransaccionId, TransaccionId).Load();
		}
		public CamaraComercio.DataAccess.SRM.NotificacionesTransaccionesCollection NotificacionesTransaccionesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.NotificacionesTransaccionesCollection().Where(NotificacionesTransacciones.Columns.TransaccionId, TransaccionId).Load();
		}
		public CamaraComercio.DataAccess.SRM.SeguimientoTransaccionesCollection SeguimientoTransaccionesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.SeguimientoTransaccionesCollection().Where(SeguimientoTransacciones.Columns.TransaccionId, TransaccionId).Load();
		}
		public CamaraComercio.DataAccess.SRM.SubTransaccionesCollection SubTransaccionesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.SubTransaccionesCollection().Where(SubTransacciones.Columns.TransaccionId, TransaccionId).Load();
		}
		public CamaraComercio.DataAccess.SRM.TransaccionDetalleCollection TransaccionDetalleRecords()
		{
			return new CamaraComercio.DataAccess.SRM.TransaccionDetalleCollection().Where(TransaccionDetalle.Columns.TransaccionId, TransaccionId).Load();
		}
		public CamaraComercio.DataAccess.SRM.TransaccionesPersonasCollection TransaccionesPersonasRecords()
		{
			return new CamaraComercio.DataAccess.SRM.TransaccionesPersonasCollection().Where(TransaccionesPersonas.Columns.TransaccionId, TransaccionId).Load();
		}
		public CamaraComercio.DataAccess.SRM.TransaccionesSociedadesCollection TransaccionesSociedadesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.TransaccionesSociedadesCollection().Where(TransaccionesSociedades.Columns.TransaccionId, TransaccionId).Load();
		}
		#endregion
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a UbicacionesExpedientes ActiveRecord object related to this Transacciones
		/// 
		/// </summary>
		public CamaraComercio.DataAccess.SRM.UbicacionesExpedientes UbicacionesExpedientes
		{
			get { return CamaraComercio.DataAccess.SRM.UbicacionesExpedientes.FetchByID(this.UbicacionExpedienteId); }
			set { SetColumnValue("UbicacionExpedienteId", value.Id); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(DateTime varFecha,int varTipoTransaccionId,int varTipoServicioId,string varSalicitante,string varRNCSolicitante,string varNombreContacto,string varTelefonoContacto,string varFaxContacto,string varNoReciboDGII,DateTime? varFechaReciboDGII,decimal? varMontoDGII,string varDestinoTraslado,string varComentario,string varComentarioHtml,Guid? varFlowId,int varEstatus,int? varEstatus2,string varPrioridad,string varCustomString1,string varCustomString2,string varCustomString3,int? varCustomInt1,int? varCustomInt2,int? varCustomInt3,DateTime? varCustomDateTime1,DateTime? varCustomDateTime2,decimal? varCustomDecimal1,decimal? varCustomDecimal2,DateTime? varFechaModificacion,Guid? varRowguid,int? varTipo,string varNcf,int? varUsuarioId,DateTime? varHoraInicio,DateTime? varHoraFinal,string varReceptor,string varTipoNcf,int? varUbicacionExpedienteId,string varUbicacionExterna,string varTipoServicio,string varServicio,string varTipoServicioSufijo)
		{
			Transacciones item = new Transacciones();
			
			item.Fecha = varFecha;
			
			item.TipoTransaccionId = varTipoTransaccionId;
			
			item.TipoServicioId = varTipoServicioId;
			
			item.Salicitante = varSalicitante;
			
			item.RNCSolicitante = varRNCSolicitante;
			
			item.NombreContacto = varNombreContacto;
			
			item.TelefonoContacto = varTelefonoContacto;
			
			item.FaxContacto = varFaxContacto;
			
			item.NoReciboDGII = varNoReciboDGII;
			
			item.FechaReciboDGII = varFechaReciboDGII;
			
			item.MontoDGII = varMontoDGII;
			
			item.DestinoTraslado = varDestinoTraslado;
			
			item.Comentario = varComentario;
			
			item.ComentarioHtml = varComentarioHtml;
			
			item.FlowId = varFlowId;
			
			item.Estatus = varEstatus;
			
			item.Estatus2 = varEstatus2;
			
			item.Prioridad = varPrioridad;
			
			item.CustomString1 = varCustomString1;
			
			item.CustomString2 = varCustomString2;
			
			item.CustomString3 = varCustomString3;
			
			item.CustomInt1 = varCustomInt1;
			
			item.CustomInt2 = varCustomInt2;
			
			item.CustomInt3 = varCustomInt3;
			
			item.CustomDateTime1 = varCustomDateTime1;
			
			item.CustomDateTime2 = varCustomDateTime2;
			
			item.CustomDecimal1 = varCustomDecimal1;
			
			item.CustomDecimal2 = varCustomDecimal2;
			
			item.FechaModificacion = varFechaModificacion;
			
			item.Rowguid = varRowguid;
			
			item.Tipo = varTipo;
			
			item.Ncf = varNcf;
			
			item.UsuarioId = varUsuarioId;
			
			item.HoraInicio = varHoraInicio;
			
			item.HoraFinal = varHoraFinal;
			
			item.Receptor = varReceptor;
			
			item.TipoNcf = varTipoNcf;
			
			item.UbicacionExpedienteId = varUbicacionExpedienteId;
			
			item.UbicacionExterna = varUbicacionExterna;
			
			item.TipoServicio = varTipoServicio;
			
			item.Servicio = varServicio;
			
			item.TipoServicioSufijo = varTipoServicioSufijo;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varTransaccionId,DateTime varFecha,int varTipoTransaccionId,int varTipoServicioId,string varSalicitante,string varRNCSolicitante,string varNombreContacto,string varTelefonoContacto,string varFaxContacto,string varNoReciboDGII,DateTime? varFechaReciboDGII,decimal? varMontoDGII,string varDestinoTraslado,string varComentario,string varComentarioHtml,Guid? varFlowId,int varEstatus,int? varEstatus2,string varPrioridad,string varCustomString1,string varCustomString2,string varCustomString3,int? varCustomInt1,int? varCustomInt2,int? varCustomInt3,DateTime? varCustomDateTime1,DateTime? varCustomDateTime2,decimal? varCustomDecimal1,decimal? varCustomDecimal2,DateTime? varFechaModificacion,Guid? varRowguid,int? varTipo,string varNcf,int? varUsuarioId,DateTime? varHoraInicio,DateTime? varHoraFinal,string varReceptor,string varTipoNcf,int? varUbicacionExpedienteId,string varUbicacionExterna,string varTipoServicio,string varServicio,string varTipoServicioSufijo)
		{
			Transacciones item = new Transacciones();
			
				item.TransaccionId = varTransaccionId;
			
				item.Fecha = varFecha;
			
				item.TipoTransaccionId = varTipoTransaccionId;
			
				item.TipoServicioId = varTipoServicioId;
			
				item.Salicitante = varSalicitante;
			
				item.RNCSolicitante = varRNCSolicitante;
			
				item.NombreContacto = varNombreContacto;
			
				item.TelefonoContacto = varTelefonoContacto;
			
				item.FaxContacto = varFaxContacto;
			
				item.NoReciboDGII = varNoReciboDGII;
			
				item.FechaReciboDGII = varFechaReciboDGII;
			
				item.MontoDGII = varMontoDGII;
			
				item.DestinoTraslado = varDestinoTraslado;
			
				item.Comentario = varComentario;
			
				item.ComentarioHtml = varComentarioHtml;
			
				item.FlowId = varFlowId;
			
				item.Estatus = varEstatus;
			
				item.Estatus2 = varEstatus2;
			
				item.Prioridad = varPrioridad;
			
				item.CustomString1 = varCustomString1;
			
				item.CustomString2 = varCustomString2;
			
				item.CustomString3 = varCustomString3;
			
				item.CustomInt1 = varCustomInt1;
			
				item.CustomInt2 = varCustomInt2;
			
				item.CustomInt3 = varCustomInt3;
			
				item.CustomDateTime1 = varCustomDateTime1;
			
				item.CustomDateTime2 = varCustomDateTime2;
			
				item.CustomDecimal1 = varCustomDecimal1;
			
				item.CustomDecimal2 = varCustomDecimal2;
			
				item.FechaModificacion = varFechaModificacion;
			
				item.Rowguid = varRowguid;
			
				item.Tipo = varTipo;
			
				item.Ncf = varNcf;
			
				item.UsuarioId = varUsuarioId;
			
				item.HoraInicio = varHoraInicio;
			
				item.HoraFinal = varHoraFinal;
			
				item.Receptor = varReceptor;
			
				item.TipoNcf = varTipoNcf;
			
				item.UbicacionExpedienteId = varUbicacionExpedienteId;
			
				item.UbicacionExterna = varUbicacionExterna;
			
				item.TipoServicio = varTipoServicio;
			
				item.Servicio = varServicio;
			
				item.TipoServicioSufijo = varTipoServicioSufijo;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn TransaccionIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoTransaccionIdColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoServicioIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn SalicitanteColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn RNCSolicitanteColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreContactoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TelefonoContactoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn FaxContactoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NoReciboDGIIColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaReciboDGIIColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MontoDGIIColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn DestinoTrasladoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn ComentarioColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ComentarioHtmlColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn FlowIdColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn EstatusColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn Estatus2Column
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn PrioridadColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomString1Column
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomString2Column
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomString3Column
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomInt1Column
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomInt2Column
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomInt3Column
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomDateTime1Column
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomDateTime2Column
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomDecimal1Column
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn CustomDecimal2Column
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaModificacionColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn RowguidColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn NcfColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn UsuarioIdColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn HoraInicioColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn HoraFinalColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn ReceptorColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoNcfColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn UbicacionExpedienteIdColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn UbicacionExternaColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoServicioColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn ServicioColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoServicioSufijoColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string TransaccionId = @"TransaccionId";
			 public static string Fecha = @"Fecha";
			 public static string TipoTransaccionId = @"TipoTransaccionId";
			 public static string TipoServicioId = @"TipoServicioId";
			 public static string Salicitante = @"Salicitante";
			 public static string RNCSolicitante = @"RNCSolicitante";
			 public static string NombreContacto = @"NombreContacto";
			 public static string TelefonoContacto = @"TelefonoContacto";
			 public static string FaxContacto = @"FaxContacto";
			 public static string NoReciboDGII = @"NoReciboDGII";
			 public static string FechaReciboDGII = @"FechaReciboDGII";
			 public static string MontoDGII = @"MontoDGII";
			 public static string DestinoTraslado = @"DestinoTraslado";
			 public static string Comentario = @"Comentario";
			 public static string ComentarioHtml = @"ComentarioHtml";
			 public static string FlowId = @"FlowId";
			 public static string Estatus = @"Estatus";
			 public static string Estatus2 = @"Estatus2";
			 public static string Prioridad = @"Prioridad";
			 public static string CustomString1 = @"CustomString1";
			 public static string CustomString2 = @"CustomString2";
			 public static string CustomString3 = @"CustomString3";
			 public static string CustomInt1 = @"CustomInt1";
			 public static string CustomInt2 = @"CustomInt2";
			 public static string CustomInt3 = @"CustomInt3";
			 public static string CustomDateTime1 = @"CustomDateTime1";
			 public static string CustomDateTime2 = @"CustomDateTime2";
			 public static string CustomDecimal1 = @"CustomDecimal1";
			 public static string CustomDecimal2 = @"CustomDecimal2";
			 public static string FechaModificacion = @"FechaModificacion";
			 public static string Rowguid = @"rowguid";
			 public static string Tipo = @"Tipo";
			 public static string Ncf = @"NCF";
			 public static string UsuarioId = @"UsuarioId";
			 public static string HoraInicio = @"HoraInicio";
			 public static string HoraFinal = @"HoraFinal";
			 public static string Receptor = @"Receptor";
			 public static string TipoNcf = @"TipoNcf";
			 public static string UbicacionExpedienteId = @"UbicacionExpedienteId";
			 public static string UbicacionExterna = @"UbicacionExterna";
			 public static string TipoServicio = @"TipoServicio";
			 public static string Servicio = @"Servicio";
			 public static string TipoServicioSufijo = @"TipoServicioSufijo";
						
		}
		#endregion
		
		#region Update PK Collections
		
        public void SetPKValues()
        {
}
        #endregion
    
        #region Deep Save
		
        public void DeepSave()
        {
            Save();
            
}
        #endregion
	}
}
