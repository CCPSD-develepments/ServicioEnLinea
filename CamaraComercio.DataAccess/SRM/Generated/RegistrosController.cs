using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
    /// <summary>
    /// Controller class for Registros
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class RegistrosController
    {
        // Preload our schema..
        Registros thisSchemaLoad = new Registros();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public RegistrosCollection FetchAll()
        {
            RegistrosCollection coll = new RegistrosCollection();
            Query qry = new Query(Registros.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public RegistrosCollection FetchByID(object RegistroId)
        {
            RegistrosCollection coll = new RegistrosCollection().Where("RegistroId", RegistroId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public RegistrosCollection FetchByQuery(Query qry)
        {
            RegistrosCollection coll = new RegistrosCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object RegistroId)
        {
            return (Registros.Delete(RegistroId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object RegistroId)
        {
            return (Registros.Destroy(RegistroId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(DateTime? FechaEmision,DateTime? FechaVencimiento,string NombreEstablecimiento,decimal? CapitalSocial,int? TipoMonedaCapitalSocial,decimal? CapitalAutorizado,int? TIpoMonedaCapitalAutorizado,decimal? CapitalPagado,int? TipoMonedaCapitalPagado,decimal? Activos,int? TipoMonedaActivos,decimal? BienesRaices,int? TipoMonedaBienesRaices,DateTime? FechaInicioOperacion,int? EmpleadosMasculinos,int? EmpleadosFemeninos,int? EmpleadosTotal,int? DireccionId,string NombreComercial,string RegistroNombreComercial,string MarcaFabrica,string RegistroMarcaFabrica,string PatenteInversion,string RegistroPatenteInversion,bool EsProvicional,string Comentario1,string Comentario2,string NombreOperador,string NombreSociedad,string TipoRegistro,string Estado,string ActividadNegocio,int? NumeroSocios,int? TotalAcciones,bool EsSocioInterno,string TipoSocioInterno,DateTime? FechaCreacion,DateTime FechaModificacion,Guid Rowguid,string MonedaActivos,string MonedaBienesRaices,string MonedaCapitalAutorizado,string MonedaCapitalPagado,string MonedaCapitalSocial,bool? SocioValido)
	    {
		    Registros item = new Registros();
		    
            item.FechaEmision = FechaEmision;
            
            item.FechaVencimiento = FechaVencimiento;
            
            item.NombreEstablecimiento = NombreEstablecimiento;
            
            item.CapitalSocial = CapitalSocial;
            
            item.TipoMonedaCapitalSocial = TipoMonedaCapitalSocial;
            
            item.CapitalAutorizado = CapitalAutorizado;
            
            item.TIpoMonedaCapitalAutorizado = TIpoMonedaCapitalAutorizado;
            
            item.CapitalPagado = CapitalPagado;
            
            item.TipoMonedaCapitalPagado = TipoMonedaCapitalPagado;
            
            item.Activos = Activos;
            
            item.TipoMonedaActivos = TipoMonedaActivos;
            
            item.BienesRaices = BienesRaices;
            
            item.TipoMonedaBienesRaices = TipoMonedaBienesRaices;
            
            item.FechaInicioOperacion = FechaInicioOperacion;
            
            item.EmpleadosMasculinos = EmpleadosMasculinos;
            
            item.EmpleadosFemeninos = EmpleadosFemeninos;
            
            item.EmpleadosTotal = EmpleadosTotal;
            
            item.DireccionId = DireccionId;
            
            item.NombreComercial = NombreComercial;
            
            item.RegistroNombreComercial = RegistroNombreComercial;
            
            item.MarcaFabrica = MarcaFabrica;
            
            item.RegistroMarcaFabrica = RegistroMarcaFabrica;
            
            item.PatenteInversion = PatenteInversion;
            
            item.RegistroPatenteInversion = RegistroPatenteInversion;
            
            item.EsProvicional = EsProvicional;
            
            item.Comentario1 = Comentario1;
            
            item.Comentario2 = Comentario2;
            
            item.NombreOperador = NombreOperador;
            
            item.NombreSociedad = NombreSociedad;
            
            item.TipoRegistro = TipoRegistro;
            
            item.Estado = Estado;
            
            item.ActividadNegocio = ActividadNegocio;
            
            item.NumeroSocios = NumeroSocios;
            
            item.TotalAcciones = TotalAcciones;
            
            item.EsSocioInterno = EsSocioInterno;
            
            item.TipoSocioInterno = TipoSocioInterno;
            
            item.FechaCreacion = FechaCreacion;
            
            item.FechaModificacion = FechaModificacion;
            
            item.Rowguid = Rowguid;
            
            item.MonedaActivos = MonedaActivos;
            
            item.MonedaBienesRaices = MonedaBienesRaices;
            
            item.MonedaCapitalAutorizado = MonedaCapitalAutorizado;
            
            item.MonedaCapitalPagado = MonedaCapitalPagado;
            
            item.MonedaCapitalSocial = MonedaCapitalSocial;
            
            item.SocioValido = SocioValido;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int RegistroId,DateTime? FechaEmision,DateTime? FechaVencimiento,string NombreEstablecimiento,decimal? CapitalSocial,int? TipoMonedaCapitalSocial,decimal? CapitalAutorizado,int? TIpoMonedaCapitalAutorizado,decimal? CapitalPagado,int? TipoMonedaCapitalPagado,decimal? Activos,int? TipoMonedaActivos,decimal? BienesRaices,int? TipoMonedaBienesRaices,DateTime? FechaInicioOperacion,int? EmpleadosMasculinos,int? EmpleadosFemeninos,int? EmpleadosTotal,int? DireccionId,string NombreComercial,string RegistroNombreComercial,string MarcaFabrica,string RegistroMarcaFabrica,string PatenteInversion,string RegistroPatenteInversion,bool EsProvicional,string Comentario1,string Comentario2,string NombreOperador,string NombreSociedad,string TipoRegistro,string Estado,string ActividadNegocio,int? NumeroSocios,int? TotalAcciones,bool EsSocioInterno,string TipoSocioInterno,DateTime? FechaCreacion,DateTime FechaModificacion,Guid Rowguid,string MonedaActivos,string MonedaBienesRaices,string MonedaCapitalAutorizado,string MonedaCapitalPagado,string MonedaCapitalSocial,bool? SocioValido)
	    {
		    Registros item = new Registros();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.RegistroId = RegistroId;
				
			item.FechaEmision = FechaEmision;
				
			item.FechaVencimiento = FechaVencimiento;
				
			item.NombreEstablecimiento = NombreEstablecimiento;
				
			item.CapitalSocial = CapitalSocial;
				
			item.TipoMonedaCapitalSocial = TipoMonedaCapitalSocial;
				
			item.CapitalAutorizado = CapitalAutorizado;
				
			item.TIpoMonedaCapitalAutorizado = TIpoMonedaCapitalAutorizado;
				
			item.CapitalPagado = CapitalPagado;
				
			item.TipoMonedaCapitalPagado = TipoMonedaCapitalPagado;
				
			item.Activos = Activos;
				
			item.TipoMonedaActivos = TipoMonedaActivos;
				
			item.BienesRaices = BienesRaices;
				
			item.TipoMonedaBienesRaices = TipoMonedaBienesRaices;
				
			item.FechaInicioOperacion = FechaInicioOperacion;
				
			item.EmpleadosMasculinos = EmpleadosMasculinos;
				
			item.EmpleadosFemeninos = EmpleadosFemeninos;
				
			item.EmpleadosTotal = EmpleadosTotal;
				
			item.DireccionId = DireccionId;
				
			item.NombreComercial = NombreComercial;
				
			item.RegistroNombreComercial = RegistroNombreComercial;
				
			item.MarcaFabrica = MarcaFabrica;
				
			item.RegistroMarcaFabrica = RegistroMarcaFabrica;
				
			item.PatenteInversion = PatenteInversion;
				
			item.RegistroPatenteInversion = RegistroPatenteInversion;
				
			item.EsProvicional = EsProvicional;
				
			item.Comentario1 = Comentario1;
				
			item.Comentario2 = Comentario2;
				
			item.NombreOperador = NombreOperador;
				
			item.NombreSociedad = NombreSociedad;
				
			item.TipoRegistro = TipoRegistro;
				
			item.Estado = Estado;
				
			item.ActividadNegocio = ActividadNegocio;
				
			item.NumeroSocios = NumeroSocios;
				
			item.TotalAcciones = TotalAcciones;
				
			item.EsSocioInterno = EsSocioInterno;
				
			item.TipoSocioInterno = TipoSocioInterno;
				
			item.FechaCreacion = FechaCreacion;
				
			item.FechaModificacion = FechaModificacion;
				
			item.Rowguid = Rowguid;
				
			item.MonedaActivos = MonedaActivos;
				
			item.MonedaBienesRaices = MonedaBienesRaices;
				
			item.MonedaCapitalAutorizado = MonedaCapitalAutorizado;
				
			item.MonedaCapitalPagado = MonedaCapitalPagado;
				
			item.MonedaCapitalSocial = MonedaCapitalSocial;
				
			item.SocioValido = SocioValido;
				
	        item.Save(UserName);
	    }
    }
}
