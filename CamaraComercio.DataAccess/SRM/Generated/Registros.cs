using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CamaraComercio.DataAccess.SRM
{
	/// <summary>
	/// Strongly-typed collection for the Registros class.
	/// </summary>
    [Serializable]
	public partial class RegistrosCollection : ActiveList<Registros, RegistrosCollection>
	{	   
		public RegistrosCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>RegistrosCollection</returns>
		public RegistrosCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Registros o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Registros table.
	/// </summary>
	[Serializable]
	public partial class Registros : ActiveRecord<Registros>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Registros()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Registros(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Registros(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Registros(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Registros", TableType.Table, DataService.GetInstance("SrmProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"Sistema";
				//columns
				
				TableSchema.TableColumn colvarRegistroId = new TableSchema.TableColumn(schema);
				colvarRegistroId.ColumnName = "RegistroId";
				colvarRegistroId.DataType = DbType.Int32;
				colvarRegistroId.MaxLength = 0;
				colvarRegistroId.AutoIncrement = true;
				colvarRegistroId.IsNullable = false;
				colvarRegistroId.IsPrimaryKey = true;
				colvarRegistroId.IsForeignKey = false;
				colvarRegistroId.IsReadOnly = false;
				colvarRegistroId.DefaultSetting = @"";
				colvarRegistroId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroId);
				
				TableSchema.TableColumn colvarFechaEmision = new TableSchema.TableColumn(schema);
				colvarFechaEmision.ColumnName = "FechaEmision";
				colvarFechaEmision.DataType = DbType.DateTime;
				colvarFechaEmision.MaxLength = 0;
				colvarFechaEmision.AutoIncrement = false;
				colvarFechaEmision.IsNullable = true;
				colvarFechaEmision.IsPrimaryKey = false;
				colvarFechaEmision.IsForeignKey = false;
				colvarFechaEmision.IsReadOnly = false;
				colvarFechaEmision.DefaultSetting = @"";
				colvarFechaEmision.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaEmision);
				
				TableSchema.TableColumn colvarFechaVencimiento = new TableSchema.TableColumn(schema);
				colvarFechaVencimiento.ColumnName = "FechaVencimiento";
				colvarFechaVencimiento.DataType = DbType.DateTime;
				colvarFechaVencimiento.MaxLength = 0;
				colvarFechaVencimiento.AutoIncrement = false;
				colvarFechaVencimiento.IsNullable = true;
				colvarFechaVencimiento.IsPrimaryKey = false;
				colvarFechaVencimiento.IsForeignKey = false;
				colvarFechaVencimiento.IsReadOnly = false;
				colvarFechaVencimiento.DefaultSetting = @"";
				colvarFechaVencimiento.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaVencimiento);
				
				TableSchema.TableColumn colvarNombreEstablecimiento = new TableSchema.TableColumn(schema);
				colvarNombreEstablecimiento.ColumnName = "NombreEstablecimiento";
				colvarNombreEstablecimiento.DataType = DbType.String;
				colvarNombreEstablecimiento.MaxLength = 150;
				colvarNombreEstablecimiento.AutoIncrement = false;
				colvarNombreEstablecimiento.IsNullable = true;
				colvarNombreEstablecimiento.IsPrimaryKey = false;
				colvarNombreEstablecimiento.IsForeignKey = false;
				colvarNombreEstablecimiento.IsReadOnly = false;
				colvarNombreEstablecimiento.DefaultSetting = @"";
				colvarNombreEstablecimiento.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreEstablecimiento);
				
				TableSchema.TableColumn colvarCapitalSocial = new TableSchema.TableColumn(schema);
				colvarCapitalSocial.ColumnName = "CapitalSocial";
				colvarCapitalSocial.DataType = DbType.Currency;
				colvarCapitalSocial.MaxLength = 0;
				colvarCapitalSocial.AutoIncrement = false;
				colvarCapitalSocial.IsNullable = true;
				colvarCapitalSocial.IsPrimaryKey = false;
				colvarCapitalSocial.IsForeignKey = false;
				colvarCapitalSocial.IsReadOnly = false;
				colvarCapitalSocial.DefaultSetting = @"";
				colvarCapitalSocial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCapitalSocial);
				
				TableSchema.TableColumn colvarTipoMonedaCapitalSocial = new TableSchema.TableColumn(schema);
				colvarTipoMonedaCapitalSocial.ColumnName = "TipoMonedaCapitalSocial";
				colvarTipoMonedaCapitalSocial.DataType = DbType.Int32;
				colvarTipoMonedaCapitalSocial.MaxLength = 0;
				colvarTipoMonedaCapitalSocial.AutoIncrement = false;
				colvarTipoMonedaCapitalSocial.IsNullable = true;
				colvarTipoMonedaCapitalSocial.IsPrimaryKey = false;
				colvarTipoMonedaCapitalSocial.IsForeignKey = false;
				colvarTipoMonedaCapitalSocial.IsReadOnly = false;
				colvarTipoMonedaCapitalSocial.DefaultSetting = @"";
				colvarTipoMonedaCapitalSocial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoMonedaCapitalSocial);
				
				TableSchema.TableColumn colvarCapitalAutorizado = new TableSchema.TableColumn(schema);
				colvarCapitalAutorizado.ColumnName = "CapitalAutorizado";
				colvarCapitalAutorizado.DataType = DbType.Currency;
				colvarCapitalAutorizado.MaxLength = 0;
				colvarCapitalAutorizado.AutoIncrement = false;
				colvarCapitalAutorizado.IsNullable = true;
				colvarCapitalAutorizado.IsPrimaryKey = false;
				colvarCapitalAutorizado.IsForeignKey = false;
				colvarCapitalAutorizado.IsReadOnly = false;
				colvarCapitalAutorizado.DefaultSetting = @"";
				colvarCapitalAutorizado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCapitalAutorizado);
				
				TableSchema.TableColumn colvarTIpoMonedaCapitalAutorizado = new TableSchema.TableColumn(schema);
				colvarTIpoMonedaCapitalAutorizado.ColumnName = "TIpoMonedaCapitalAutorizado";
				colvarTIpoMonedaCapitalAutorizado.DataType = DbType.Int32;
				colvarTIpoMonedaCapitalAutorizado.MaxLength = 0;
				colvarTIpoMonedaCapitalAutorizado.AutoIncrement = false;
				colvarTIpoMonedaCapitalAutorizado.IsNullable = true;
				colvarTIpoMonedaCapitalAutorizado.IsPrimaryKey = false;
				colvarTIpoMonedaCapitalAutorizado.IsForeignKey = false;
				colvarTIpoMonedaCapitalAutorizado.IsReadOnly = false;
				colvarTIpoMonedaCapitalAutorizado.DefaultSetting = @"";
				colvarTIpoMonedaCapitalAutorizado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTIpoMonedaCapitalAutorizado);
				
				TableSchema.TableColumn colvarCapitalPagado = new TableSchema.TableColumn(schema);
				colvarCapitalPagado.ColumnName = "CapitalPagado";
				colvarCapitalPagado.DataType = DbType.Currency;
				colvarCapitalPagado.MaxLength = 0;
				colvarCapitalPagado.AutoIncrement = false;
				colvarCapitalPagado.IsNullable = true;
				colvarCapitalPagado.IsPrimaryKey = false;
				colvarCapitalPagado.IsForeignKey = false;
				colvarCapitalPagado.IsReadOnly = false;
				colvarCapitalPagado.DefaultSetting = @"";
				colvarCapitalPagado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCapitalPagado);
				
				TableSchema.TableColumn colvarTipoMonedaCapitalPagado = new TableSchema.TableColumn(schema);
				colvarTipoMonedaCapitalPagado.ColumnName = "TipoMonedaCapitalPagado";
				colvarTipoMonedaCapitalPagado.DataType = DbType.Int32;
				colvarTipoMonedaCapitalPagado.MaxLength = 0;
				colvarTipoMonedaCapitalPagado.AutoIncrement = false;
				colvarTipoMonedaCapitalPagado.IsNullable = true;
				colvarTipoMonedaCapitalPagado.IsPrimaryKey = false;
				colvarTipoMonedaCapitalPagado.IsForeignKey = false;
				colvarTipoMonedaCapitalPagado.IsReadOnly = false;
				colvarTipoMonedaCapitalPagado.DefaultSetting = @"";
				colvarTipoMonedaCapitalPagado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoMonedaCapitalPagado);
				
				TableSchema.TableColumn colvarActivos = new TableSchema.TableColumn(schema);
				colvarActivos.ColumnName = "Activos";
				colvarActivos.DataType = DbType.Currency;
				colvarActivos.MaxLength = 0;
				colvarActivos.AutoIncrement = false;
				colvarActivos.IsNullable = true;
				colvarActivos.IsPrimaryKey = false;
				colvarActivos.IsForeignKey = false;
				colvarActivos.IsReadOnly = false;
				colvarActivos.DefaultSetting = @"";
				colvarActivos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarActivos);
				
				TableSchema.TableColumn colvarTipoMonedaActivos = new TableSchema.TableColumn(schema);
				colvarTipoMonedaActivos.ColumnName = "TipoMonedaActivos";
				colvarTipoMonedaActivos.DataType = DbType.Int32;
				colvarTipoMonedaActivos.MaxLength = 0;
				colvarTipoMonedaActivos.AutoIncrement = false;
				colvarTipoMonedaActivos.IsNullable = true;
				colvarTipoMonedaActivos.IsPrimaryKey = false;
				colvarTipoMonedaActivos.IsForeignKey = false;
				colvarTipoMonedaActivos.IsReadOnly = false;
				colvarTipoMonedaActivos.DefaultSetting = @"";
				colvarTipoMonedaActivos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoMonedaActivos);
				
				TableSchema.TableColumn colvarBienesRaices = new TableSchema.TableColumn(schema);
				colvarBienesRaices.ColumnName = "BienesRaices";
				colvarBienesRaices.DataType = DbType.Currency;
				colvarBienesRaices.MaxLength = 0;
				colvarBienesRaices.AutoIncrement = false;
				colvarBienesRaices.IsNullable = true;
				colvarBienesRaices.IsPrimaryKey = false;
				colvarBienesRaices.IsForeignKey = false;
				colvarBienesRaices.IsReadOnly = false;
				colvarBienesRaices.DefaultSetting = @"";
				colvarBienesRaices.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBienesRaices);
				
				TableSchema.TableColumn colvarTipoMonedaBienesRaices = new TableSchema.TableColumn(schema);
				colvarTipoMonedaBienesRaices.ColumnName = "TipoMonedaBienesRaices";
				colvarTipoMonedaBienesRaices.DataType = DbType.Int32;
				colvarTipoMonedaBienesRaices.MaxLength = 0;
				colvarTipoMonedaBienesRaices.AutoIncrement = false;
				colvarTipoMonedaBienesRaices.IsNullable = true;
				colvarTipoMonedaBienesRaices.IsPrimaryKey = false;
				colvarTipoMonedaBienesRaices.IsForeignKey = false;
				colvarTipoMonedaBienesRaices.IsReadOnly = false;
				colvarTipoMonedaBienesRaices.DefaultSetting = @"";
				colvarTipoMonedaBienesRaices.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoMonedaBienesRaices);
				
				TableSchema.TableColumn colvarFechaInicioOperacion = new TableSchema.TableColumn(schema);
				colvarFechaInicioOperacion.ColumnName = "FechaInicioOperacion";
				colvarFechaInicioOperacion.DataType = DbType.DateTime;
				colvarFechaInicioOperacion.MaxLength = 0;
				colvarFechaInicioOperacion.AutoIncrement = false;
				colvarFechaInicioOperacion.IsNullable = true;
				colvarFechaInicioOperacion.IsPrimaryKey = false;
				colvarFechaInicioOperacion.IsForeignKey = false;
				colvarFechaInicioOperacion.IsReadOnly = false;
				colvarFechaInicioOperacion.DefaultSetting = @"";
				colvarFechaInicioOperacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaInicioOperacion);
				
				TableSchema.TableColumn colvarEmpleadosMasculinos = new TableSchema.TableColumn(schema);
				colvarEmpleadosMasculinos.ColumnName = "EmpleadosMasculinos";
				colvarEmpleadosMasculinos.DataType = DbType.Int32;
				colvarEmpleadosMasculinos.MaxLength = 0;
				colvarEmpleadosMasculinos.AutoIncrement = false;
				colvarEmpleadosMasculinos.IsNullable = true;
				colvarEmpleadosMasculinos.IsPrimaryKey = false;
				colvarEmpleadosMasculinos.IsForeignKey = false;
				colvarEmpleadosMasculinos.IsReadOnly = false;
				
						colvarEmpleadosMasculinos.DefaultSetting = @"((0))";
				colvarEmpleadosMasculinos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmpleadosMasculinos);
				
				TableSchema.TableColumn colvarEmpleadosFemeninos = new TableSchema.TableColumn(schema);
				colvarEmpleadosFemeninos.ColumnName = "EmpleadosFemeninos";
				colvarEmpleadosFemeninos.DataType = DbType.Int32;
				colvarEmpleadosFemeninos.MaxLength = 0;
				colvarEmpleadosFemeninos.AutoIncrement = false;
				colvarEmpleadosFemeninos.IsNullable = true;
				colvarEmpleadosFemeninos.IsPrimaryKey = false;
				colvarEmpleadosFemeninos.IsForeignKey = false;
				colvarEmpleadosFemeninos.IsReadOnly = false;
				
						colvarEmpleadosFemeninos.DefaultSetting = @"((0))";
				colvarEmpleadosFemeninos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmpleadosFemeninos);
				
				TableSchema.TableColumn colvarEmpleadosTotal = new TableSchema.TableColumn(schema);
				colvarEmpleadosTotal.ColumnName = "EmpleadosTotal";
				colvarEmpleadosTotal.DataType = DbType.Int32;
				colvarEmpleadosTotal.MaxLength = 0;
				colvarEmpleadosTotal.AutoIncrement = false;
				colvarEmpleadosTotal.IsNullable = true;
				colvarEmpleadosTotal.IsPrimaryKey = false;
				colvarEmpleadosTotal.IsForeignKey = false;
				colvarEmpleadosTotal.IsReadOnly = true;
				colvarEmpleadosTotal.DefaultSetting = @"";
				colvarEmpleadosTotal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmpleadosTotal);
				
				TableSchema.TableColumn colvarDireccionId = new TableSchema.TableColumn(schema);
				colvarDireccionId.ColumnName = "DireccionId";
				colvarDireccionId.DataType = DbType.Int32;
				colvarDireccionId.MaxLength = 0;
				colvarDireccionId.AutoIncrement = false;
				colvarDireccionId.IsNullable = true;
				colvarDireccionId.IsPrimaryKey = false;
				colvarDireccionId.IsForeignKey = true;
				colvarDireccionId.IsReadOnly = false;
				colvarDireccionId.DefaultSetting = @"";
				
					colvarDireccionId.ForeignKeyTableName = "Direcciones";
				schema.Columns.Add(colvarDireccionId);
				
				TableSchema.TableColumn colvarNombreComercial = new TableSchema.TableColumn(schema);
				colvarNombreComercial.ColumnName = "NombreComercial";
				colvarNombreComercial.DataType = DbType.String;
				colvarNombreComercial.MaxLength = 150;
				colvarNombreComercial.AutoIncrement = false;
				colvarNombreComercial.IsNullable = true;
				colvarNombreComercial.IsPrimaryKey = false;
				colvarNombreComercial.IsForeignKey = false;
				colvarNombreComercial.IsReadOnly = false;
				colvarNombreComercial.DefaultSetting = @"";
				colvarNombreComercial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreComercial);
				
				TableSchema.TableColumn colvarRegistroNombreComercial = new TableSchema.TableColumn(schema);
				colvarRegistroNombreComercial.ColumnName = "RegistroNombreComercial";
				colvarRegistroNombreComercial.DataType = DbType.String;
				colvarRegistroNombreComercial.MaxLength = 15;
				colvarRegistroNombreComercial.AutoIncrement = false;
				colvarRegistroNombreComercial.IsNullable = true;
				colvarRegistroNombreComercial.IsPrimaryKey = false;
				colvarRegistroNombreComercial.IsForeignKey = false;
				colvarRegistroNombreComercial.IsReadOnly = false;
				colvarRegistroNombreComercial.DefaultSetting = @"";
				colvarRegistroNombreComercial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroNombreComercial);
				
				TableSchema.TableColumn colvarMarcaFabrica = new TableSchema.TableColumn(schema);
				colvarMarcaFabrica.ColumnName = "MarcaFabrica";
				colvarMarcaFabrica.DataType = DbType.String;
				colvarMarcaFabrica.MaxLength = 150;
				colvarMarcaFabrica.AutoIncrement = false;
				colvarMarcaFabrica.IsNullable = true;
				colvarMarcaFabrica.IsPrimaryKey = false;
				colvarMarcaFabrica.IsForeignKey = false;
				colvarMarcaFabrica.IsReadOnly = false;
				colvarMarcaFabrica.DefaultSetting = @"";
				colvarMarcaFabrica.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMarcaFabrica);
				
				TableSchema.TableColumn colvarRegistroMarcaFabrica = new TableSchema.TableColumn(schema);
				colvarRegistroMarcaFabrica.ColumnName = "RegistroMarcaFabrica";
				colvarRegistroMarcaFabrica.DataType = DbType.String;
				colvarRegistroMarcaFabrica.MaxLength = 15;
				colvarRegistroMarcaFabrica.AutoIncrement = false;
				colvarRegistroMarcaFabrica.IsNullable = true;
				colvarRegistroMarcaFabrica.IsPrimaryKey = false;
				colvarRegistroMarcaFabrica.IsForeignKey = false;
				colvarRegistroMarcaFabrica.IsReadOnly = false;
				colvarRegistroMarcaFabrica.DefaultSetting = @"";
				colvarRegistroMarcaFabrica.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroMarcaFabrica);
				
				TableSchema.TableColumn colvarPatenteInversion = new TableSchema.TableColumn(schema);
				colvarPatenteInversion.ColumnName = "PatenteInversion";
				colvarPatenteInversion.DataType = DbType.String;
				colvarPatenteInversion.MaxLength = 50;
				colvarPatenteInversion.AutoIncrement = false;
				colvarPatenteInversion.IsNullable = true;
				colvarPatenteInversion.IsPrimaryKey = false;
				colvarPatenteInversion.IsForeignKey = false;
				colvarPatenteInversion.IsReadOnly = false;
				colvarPatenteInversion.DefaultSetting = @"";
				colvarPatenteInversion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatenteInversion);
				
				TableSchema.TableColumn colvarRegistroPatenteInversion = new TableSchema.TableColumn(schema);
				colvarRegistroPatenteInversion.ColumnName = "RegistroPatenteInversion";
				colvarRegistroPatenteInversion.DataType = DbType.String;
				colvarRegistroPatenteInversion.MaxLength = 15;
				colvarRegistroPatenteInversion.AutoIncrement = false;
				colvarRegistroPatenteInversion.IsNullable = true;
				colvarRegistroPatenteInversion.IsPrimaryKey = false;
				colvarRegistroPatenteInversion.IsForeignKey = false;
				colvarRegistroPatenteInversion.IsReadOnly = false;
				colvarRegistroPatenteInversion.DefaultSetting = @"";
				colvarRegistroPatenteInversion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRegistroPatenteInversion);
				
				TableSchema.TableColumn colvarEsProvicional = new TableSchema.TableColumn(schema);
				colvarEsProvicional.ColumnName = "EsProvicional";
				colvarEsProvicional.DataType = DbType.Boolean;
				colvarEsProvicional.MaxLength = 0;
				colvarEsProvicional.AutoIncrement = false;
				colvarEsProvicional.IsNullable = false;
				colvarEsProvicional.IsPrimaryKey = false;
				colvarEsProvicional.IsForeignKey = false;
				colvarEsProvicional.IsReadOnly = false;
				
						colvarEsProvicional.DefaultSetting = @"((0))";
				colvarEsProvicional.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEsProvicional);
				
				TableSchema.TableColumn colvarComentario1 = new TableSchema.TableColumn(schema);
				colvarComentario1.ColumnName = "Comentario1";
				colvarComentario1.DataType = DbType.String;
				colvarComentario1.MaxLength = -1;
				colvarComentario1.AutoIncrement = false;
				colvarComentario1.IsNullable = true;
				colvarComentario1.IsPrimaryKey = false;
				colvarComentario1.IsForeignKey = false;
				colvarComentario1.IsReadOnly = false;
				colvarComentario1.DefaultSetting = @"";
				colvarComentario1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarComentario1);
				
				TableSchema.TableColumn colvarComentario2 = new TableSchema.TableColumn(schema);
				colvarComentario2.ColumnName = "Comentario2";
				colvarComentario2.DataType = DbType.String;
				colvarComentario2.MaxLength = -1;
				colvarComentario2.AutoIncrement = false;
				colvarComentario2.IsNullable = true;
				colvarComentario2.IsPrimaryKey = false;
				colvarComentario2.IsForeignKey = false;
				colvarComentario2.IsReadOnly = false;
				colvarComentario2.DefaultSetting = @"";
				colvarComentario2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarComentario2);
				
				TableSchema.TableColumn colvarNombreOperador = new TableSchema.TableColumn(schema);
				colvarNombreOperador.ColumnName = "NombreOperador";
				colvarNombreOperador.DataType = DbType.String;
				colvarNombreOperador.MaxLength = 50;
				colvarNombreOperador.AutoIncrement = false;
				colvarNombreOperador.IsNullable = true;
				colvarNombreOperador.IsPrimaryKey = false;
				colvarNombreOperador.IsForeignKey = false;
				colvarNombreOperador.IsReadOnly = false;
				colvarNombreOperador.DefaultSetting = @"";
				colvarNombreOperador.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreOperador);
				
				TableSchema.TableColumn colvarNombreSociedad = new TableSchema.TableColumn(schema);
				colvarNombreSociedad.ColumnName = "NombreSociedad";
				colvarNombreSociedad.DataType = DbType.String;
				colvarNombreSociedad.MaxLength = 150;
				colvarNombreSociedad.AutoIncrement = false;
				colvarNombreSociedad.IsNullable = true;
				colvarNombreSociedad.IsPrimaryKey = false;
				colvarNombreSociedad.IsForeignKey = false;
				colvarNombreSociedad.IsReadOnly = false;
				colvarNombreSociedad.DefaultSetting = @"";
				colvarNombreSociedad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNombreSociedad);
				
				TableSchema.TableColumn colvarTipoRegistro = new TableSchema.TableColumn(schema);
				colvarTipoRegistro.ColumnName = "TipoRegistro";
				colvarTipoRegistro.DataType = DbType.String;
				colvarTipoRegistro.MaxLength = 1;
				colvarTipoRegistro.AutoIncrement = false;
				colvarTipoRegistro.IsNullable = true;
				colvarTipoRegistro.IsPrimaryKey = false;
				colvarTipoRegistro.IsForeignKey = false;
				colvarTipoRegistro.IsReadOnly = false;
				colvarTipoRegistro.DefaultSetting = @"";
				colvarTipoRegistro.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoRegistro);
				
				TableSchema.TableColumn colvarEstado = new TableSchema.TableColumn(schema);
				colvarEstado.ColumnName = "Estado";
				colvarEstado.DataType = DbType.String;
				colvarEstado.MaxLength = 1;
				colvarEstado.AutoIncrement = false;
				colvarEstado.IsNullable = true;
				colvarEstado.IsPrimaryKey = false;
				colvarEstado.IsForeignKey = false;
				colvarEstado.IsReadOnly = false;
				colvarEstado.DefaultSetting = @"";
				colvarEstado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstado);
				
				TableSchema.TableColumn colvarActividadNegocio = new TableSchema.TableColumn(schema);
				colvarActividadNegocio.ColumnName = "ActividadNegocio";
				colvarActividadNegocio.DataType = DbType.String;
				colvarActividadNegocio.MaxLength = -1;
				colvarActividadNegocio.AutoIncrement = false;
				colvarActividadNegocio.IsNullable = true;
				colvarActividadNegocio.IsPrimaryKey = false;
				colvarActividadNegocio.IsForeignKey = false;
				colvarActividadNegocio.IsReadOnly = false;
				colvarActividadNegocio.DefaultSetting = @"";
				colvarActividadNegocio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarActividadNegocio);
				
				TableSchema.TableColumn colvarNumeroSocios = new TableSchema.TableColumn(schema);
				colvarNumeroSocios.ColumnName = "NumeroSocios";
				colvarNumeroSocios.DataType = DbType.Int32;
				colvarNumeroSocios.MaxLength = 0;
				colvarNumeroSocios.AutoIncrement = false;
				colvarNumeroSocios.IsNullable = true;
				colvarNumeroSocios.IsPrimaryKey = false;
				colvarNumeroSocios.IsForeignKey = false;
				colvarNumeroSocios.IsReadOnly = false;
				colvarNumeroSocios.DefaultSetting = @"";
				colvarNumeroSocios.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNumeroSocios);
				
				TableSchema.TableColumn colvarTotalAcciones = new TableSchema.TableColumn(schema);
				colvarTotalAcciones.ColumnName = "TotalAcciones";
				colvarTotalAcciones.DataType = DbType.Int32;
				colvarTotalAcciones.MaxLength = 0;
				colvarTotalAcciones.AutoIncrement = false;
				colvarTotalAcciones.IsNullable = true;
				colvarTotalAcciones.IsPrimaryKey = false;
				colvarTotalAcciones.IsForeignKey = false;
				colvarTotalAcciones.IsReadOnly = false;
				colvarTotalAcciones.DefaultSetting = @"";
				colvarTotalAcciones.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTotalAcciones);
				
				TableSchema.TableColumn colvarEsSocioInterno = new TableSchema.TableColumn(schema);
				colvarEsSocioInterno.ColumnName = "EsSocioInterno";
				colvarEsSocioInterno.DataType = DbType.Boolean;
				colvarEsSocioInterno.MaxLength = 0;
				colvarEsSocioInterno.AutoIncrement = false;
				colvarEsSocioInterno.IsNullable = false;
				colvarEsSocioInterno.IsPrimaryKey = false;
				colvarEsSocioInterno.IsForeignKey = false;
				colvarEsSocioInterno.IsReadOnly = false;
				
						colvarEsSocioInterno.DefaultSetting = @"((0))";
				colvarEsSocioInterno.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEsSocioInterno);
				
				TableSchema.TableColumn colvarTipoSocioInterno = new TableSchema.TableColumn(schema);
				colvarTipoSocioInterno.ColumnName = "TipoSocioInterno";
				colvarTipoSocioInterno.DataType = DbType.String;
				colvarTipoSocioInterno.MaxLength = 1;
				colvarTipoSocioInterno.AutoIncrement = false;
				colvarTipoSocioInterno.IsNullable = true;
				colvarTipoSocioInterno.IsPrimaryKey = false;
				colvarTipoSocioInterno.IsForeignKey = false;
				colvarTipoSocioInterno.IsReadOnly = false;
				colvarTipoSocioInterno.DefaultSetting = @"";
				colvarTipoSocioInterno.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipoSocioInterno);
				
				TableSchema.TableColumn colvarFechaCreacion = new TableSchema.TableColumn(schema);
				colvarFechaCreacion.ColumnName = "FechaCreacion";
				colvarFechaCreacion.DataType = DbType.DateTime;
				colvarFechaCreacion.MaxLength = 0;
				colvarFechaCreacion.AutoIncrement = false;
				colvarFechaCreacion.IsNullable = true;
				colvarFechaCreacion.IsPrimaryKey = false;
				colvarFechaCreacion.IsForeignKey = false;
				colvarFechaCreacion.IsReadOnly = false;
				colvarFechaCreacion.DefaultSetting = @"";
				colvarFechaCreacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaCreacion);
				
				TableSchema.TableColumn colvarFechaModificacion = new TableSchema.TableColumn(schema);
				colvarFechaModificacion.ColumnName = "FechaModificacion";
				colvarFechaModificacion.DataType = DbType.DateTime;
				colvarFechaModificacion.MaxLength = 0;
				colvarFechaModificacion.AutoIncrement = false;
				colvarFechaModificacion.IsNullable = false;
				colvarFechaModificacion.IsPrimaryKey = false;
				colvarFechaModificacion.IsForeignKey = false;
				colvarFechaModificacion.IsReadOnly = false;
				
						colvarFechaModificacion.DefaultSetting = @"(getdate())";
				colvarFechaModificacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaModificacion);
				
				TableSchema.TableColumn colvarRowguid = new TableSchema.TableColumn(schema);
				colvarRowguid.ColumnName = "rowguid";
				colvarRowguid.DataType = DbType.Guid;
				colvarRowguid.MaxLength = 0;
				colvarRowguid.AutoIncrement = false;
				colvarRowguid.IsNullable = false;
				colvarRowguid.IsPrimaryKey = false;
				colvarRowguid.IsForeignKey = false;
				colvarRowguid.IsReadOnly = false;
				
						colvarRowguid.DefaultSetting = @"(newid())";
				colvarRowguid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRowguid);
				
				TableSchema.TableColumn colvarMonedaActivos = new TableSchema.TableColumn(schema);
				colvarMonedaActivos.ColumnName = "MonedaActivos";
				colvarMonedaActivos.DataType = DbType.AnsiString;
				colvarMonedaActivos.MaxLength = 5;
				colvarMonedaActivos.AutoIncrement = false;
				colvarMonedaActivos.IsNullable = true;
				colvarMonedaActivos.IsPrimaryKey = false;
				colvarMonedaActivos.IsForeignKey = false;
				colvarMonedaActivos.IsReadOnly = false;
				colvarMonedaActivos.DefaultSetting = @"";
				colvarMonedaActivos.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMonedaActivos);
				
				TableSchema.TableColumn colvarMonedaBienesRaices = new TableSchema.TableColumn(schema);
				colvarMonedaBienesRaices.ColumnName = "MonedaBienesRaices";
				colvarMonedaBienesRaices.DataType = DbType.AnsiString;
				colvarMonedaBienesRaices.MaxLength = 5;
				colvarMonedaBienesRaices.AutoIncrement = false;
				colvarMonedaBienesRaices.IsNullable = true;
				colvarMonedaBienesRaices.IsPrimaryKey = false;
				colvarMonedaBienesRaices.IsForeignKey = false;
				colvarMonedaBienesRaices.IsReadOnly = false;
				colvarMonedaBienesRaices.DefaultSetting = @"";
				colvarMonedaBienesRaices.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMonedaBienesRaices);
				
				TableSchema.TableColumn colvarMonedaCapitalAutorizado = new TableSchema.TableColumn(schema);
				colvarMonedaCapitalAutorizado.ColumnName = "MonedaCapitalAutorizado";
				colvarMonedaCapitalAutorizado.DataType = DbType.AnsiString;
				colvarMonedaCapitalAutorizado.MaxLength = 5;
				colvarMonedaCapitalAutorizado.AutoIncrement = false;
				colvarMonedaCapitalAutorizado.IsNullable = true;
				colvarMonedaCapitalAutorizado.IsPrimaryKey = false;
				colvarMonedaCapitalAutorizado.IsForeignKey = false;
				colvarMonedaCapitalAutorizado.IsReadOnly = false;
				colvarMonedaCapitalAutorizado.DefaultSetting = @"";
				colvarMonedaCapitalAutorizado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMonedaCapitalAutorizado);
				
				TableSchema.TableColumn colvarMonedaCapitalPagado = new TableSchema.TableColumn(schema);
				colvarMonedaCapitalPagado.ColumnName = "MonedaCapitalPagado";
				colvarMonedaCapitalPagado.DataType = DbType.AnsiString;
				colvarMonedaCapitalPagado.MaxLength = 5;
				colvarMonedaCapitalPagado.AutoIncrement = false;
				colvarMonedaCapitalPagado.IsNullable = true;
				colvarMonedaCapitalPagado.IsPrimaryKey = false;
				colvarMonedaCapitalPagado.IsForeignKey = false;
				colvarMonedaCapitalPagado.IsReadOnly = false;
				colvarMonedaCapitalPagado.DefaultSetting = @"";
				colvarMonedaCapitalPagado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMonedaCapitalPagado);
				
				TableSchema.TableColumn colvarMonedaCapitalSocial = new TableSchema.TableColumn(schema);
				colvarMonedaCapitalSocial.ColumnName = "MonedaCapitalSocial";
				colvarMonedaCapitalSocial.DataType = DbType.AnsiString;
				colvarMonedaCapitalSocial.MaxLength = 5;
				colvarMonedaCapitalSocial.AutoIncrement = false;
				colvarMonedaCapitalSocial.IsNullable = true;
				colvarMonedaCapitalSocial.IsPrimaryKey = false;
				colvarMonedaCapitalSocial.IsForeignKey = false;
				colvarMonedaCapitalSocial.IsReadOnly = false;
				colvarMonedaCapitalSocial.DefaultSetting = @"";
				colvarMonedaCapitalSocial.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMonedaCapitalSocial);
				
				TableSchema.TableColumn colvarSocioValido = new TableSchema.TableColumn(schema);
				colvarSocioValido.ColumnName = "SocioValido";
				colvarSocioValido.DataType = DbType.Boolean;
				colvarSocioValido.MaxLength = 0;
				colvarSocioValido.AutoIncrement = false;
				colvarSocioValido.IsNullable = true;
				colvarSocioValido.IsPrimaryKey = false;
				colvarSocioValido.IsForeignKey = false;
				colvarSocioValido.IsReadOnly = false;
				colvarSocioValido.DefaultSetting = @"";
				colvarSocioValido.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSocioValido);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["SrmProvider"].AddSchema("Registros",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("RegistroId")]
		[Bindable(true)]
		public int RegistroId 
		{
			get { return GetColumnValue<int>(Columns.RegistroId); }
			set { SetColumnValue(Columns.RegistroId, value); }
		}
		  
		[XmlAttribute("FechaEmision")]
		[Bindable(true)]
		public DateTime? FechaEmision 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaEmision); }
			set { SetColumnValue(Columns.FechaEmision, value); }
		}
		  
		[XmlAttribute("FechaVencimiento")]
		[Bindable(true)]
		public DateTime? FechaVencimiento 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaVencimiento); }
			set { SetColumnValue(Columns.FechaVencimiento, value); }
		}
		  
		[XmlAttribute("NombreEstablecimiento")]
		[Bindable(true)]
		public string NombreEstablecimiento 
		{
			get { return GetColumnValue<string>(Columns.NombreEstablecimiento); }
			set { SetColumnValue(Columns.NombreEstablecimiento, value); }
		}
		  
		[XmlAttribute("CapitalSocial")]
		[Bindable(true)]
		public decimal? CapitalSocial 
		{
			get { return GetColumnValue<decimal?>(Columns.CapitalSocial); }
			set { SetColumnValue(Columns.CapitalSocial, value); }
		}
		  
		[XmlAttribute("TipoMonedaCapitalSocial")]
		[Bindable(true)]
		public int? TipoMonedaCapitalSocial 
		{
			get { return GetColumnValue<int?>(Columns.TipoMonedaCapitalSocial); }
			set { SetColumnValue(Columns.TipoMonedaCapitalSocial, value); }
		}
		  
		[XmlAttribute("CapitalAutorizado")]
		[Bindable(true)]
		public decimal? CapitalAutorizado 
		{
			get { return GetColumnValue<decimal?>(Columns.CapitalAutorizado); }
			set { SetColumnValue(Columns.CapitalAutorizado, value); }
		}
		  
		[XmlAttribute("TIpoMonedaCapitalAutorizado")]
		[Bindable(true)]
		public int? TIpoMonedaCapitalAutorizado 
		{
			get { return GetColumnValue<int?>(Columns.TIpoMonedaCapitalAutorizado); }
			set { SetColumnValue(Columns.TIpoMonedaCapitalAutorizado, value); }
		}
		  
		[XmlAttribute("CapitalPagado")]
		[Bindable(true)]
		public decimal? CapitalPagado 
		{
			get { return GetColumnValue<decimal?>(Columns.CapitalPagado); }
			set { SetColumnValue(Columns.CapitalPagado, value); }
		}
		  
		[XmlAttribute("TipoMonedaCapitalPagado")]
		[Bindable(true)]
		public int? TipoMonedaCapitalPagado 
		{
			get { return GetColumnValue<int?>(Columns.TipoMonedaCapitalPagado); }
			set { SetColumnValue(Columns.TipoMonedaCapitalPagado, value); }
		}
		  
		[XmlAttribute("Activos")]
		[Bindable(true)]
		public decimal? Activos 
		{
			get { return GetColumnValue<decimal?>(Columns.Activos); }
			set { SetColumnValue(Columns.Activos, value); }
		}
		  
		[XmlAttribute("TipoMonedaActivos")]
		[Bindable(true)]
		public int? TipoMonedaActivos 
		{
			get { return GetColumnValue<int?>(Columns.TipoMonedaActivos); }
			set { SetColumnValue(Columns.TipoMonedaActivos, value); }
		}
		  
		[XmlAttribute("BienesRaices")]
		[Bindable(true)]
		public decimal? BienesRaices 
		{
			get { return GetColumnValue<decimal?>(Columns.BienesRaices); }
			set { SetColumnValue(Columns.BienesRaices, value); }
		}
		  
		[XmlAttribute("TipoMonedaBienesRaices")]
		[Bindable(true)]
		public int? TipoMonedaBienesRaices 
		{
			get { return GetColumnValue<int?>(Columns.TipoMonedaBienesRaices); }
			set { SetColumnValue(Columns.TipoMonedaBienesRaices, value); }
		}
		  
		[XmlAttribute("FechaInicioOperacion")]
		[Bindable(true)]
		public DateTime? FechaInicioOperacion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaInicioOperacion); }
			set { SetColumnValue(Columns.FechaInicioOperacion, value); }
		}
		  
		[XmlAttribute("EmpleadosMasculinos")]
		[Bindable(true)]
		public int? EmpleadosMasculinos 
		{
			get { return GetColumnValue<int?>(Columns.EmpleadosMasculinos); }
			set { SetColumnValue(Columns.EmpleadosMasculinos, value); }
		}
		  
		[XmlAttribute("EmpleadosFemeninos")]
		[Bindable(true)]
		public int? EmpleadosFemeninos 
		{
			get { return GetColumnValue<int?>(Columns.EmpleadosFemeninos); }
			set { SetColumnValue(Columns.EmpleadosFemeninos, value); }
		}
		  
		[XmlAttribute("EmpleadosTotal")]
		[Bindable(true)]
		public int? EmpleadosTotal 
		{
			get { return GetColumnValue<int?>(Columns.EmpleadosTotal); }
			set { SetColumnValue(Columns.EmpleadosTotal, value); }
		}
		  
		[XmlAttribute("DireccionId")]
		[Bindable(true)]
		public int? DireccionId 
		{
			get { return GetColumnValue<int?>(Columns.DireccionId); }
			set { SetColumnValue(Columns.DireccionId, value); }
		}
		  
		[XmlAttribute("NombreComercial")]
		[Bindable(true)]
		public string NombreComercial 
		{
			get { return GetColumnValue<string>(Columns.NombreComercial); }
			set { SetColumnValue(Columns.NombreComercial, value); }
		}
		  
		[XmlAttribute("RegistroNombreComercial")]
		[Bindable(true)]
		public string RegistroNombreComercial 
		{
			get { return GetColumnValue<string>(Columns.RegistroNombreComercial); }
			set { SetColumnValue(Columns.RegistroNombreComercial, value); }
		}
		  
		[XmlAttribute("MarcaFabrica")]
		[Bindable(true)]
		public string MarcaFabrica 
		{
			get { return GetColumnValue<string>(Columns.MarcaFabrica); }
			set { SetColumnValue(Columns.MarcaFabrica, value); }
		}
		  
		[XmlAttribute("RegistroMarcaFabrica")]
		[Bindable(true)]
		public string RegistroMarcaFabrica 
		{
			get { return GetColumnValue<string>(Columns.RegistroMarcaFabrica); }
			set { SetColumnValue(Columns.RegistroMarcaFabrica, value); }
		}
		  
		[XmlAttribute("PatenteInversion")]
		[Bindable(true)]
		public string PatenteInversion 
		{
			get { return GetColumnValue<string>(Columns.PatenteInversion); }
			set { SetColumnValue(Columns.PatenteInversion, value); }
		}
		  
		[XmlAttribute("RegistroPatenteInversion")]
		[Bindable(true)]
		public string RegistroPatenteInversion 
		{
			get { return GetColumnValue<string>(Columns.RegistroPatenteInversion); }
			set { SetColumnValue(Columns.RegistroPatenteInversion, value); }
		}
		  
		[XmlAttribute("EsProvicional")]
		[Bindable(true)]
		public bool EsProvicional 
		{
			get { return GetColumnValue<bool>(Columns.EsProvicional); }
			set { SetColumnValue(Columns.EsProvicional, value); }
		}
		  
		[XmlAttribute("Comentario1")]
		[Bindable(true)]
		public string Comentario1 
		{
			get { return GetColumnValue<string>(Columns.Comentario1); }
			set { SetColumnValue(Columns.Comentario1, value); }
		}
		  
		[XmlAttribute("Comentario2")]
		[Bindable(true)]
		public string Comentario2 
		{
			get { return GetColumnValue<string>(Columns.Comentario2); }
			set { SetColumnValue(Columns.Comentario2, value); }
		}
		  
		[XmlAttribute("NombreOperador")]
		[Bindable(true)]
		public string NombreOperador 
		{
			get { return GetColumnValue<string>(Columns.NombreOperador); }
			set { SetColumnValue(Columns.NombreOperador, value); }
		}
		  
		[XmlAttribute("NombreSociedad")]
		[Bindable(true)]
		public string NombreSociedad 
		{
			get { return GetColumnValue<string>(Columns.NombreSociedad); }
			set { SetColumnValue(Columns.NombreSociedad, value); }
		}
		  
		[XmlAttribute("TipoRegistro")]
		[Bindable(true)]
		public string TipoRegistro 
		{
			get { return GetColumnValue<string>(Columns.TipoRegistro); }
			set { SetColumnValue(Columns.TipoRegistro, value); }
		}
		  
		[XmlAttribute("Estado")]
		[Bindable(true)]
		public string Estado 
		{
			get { return GetColumnValue<string>(Columns.Estado); }
			set { SetColumnValue(Columns.Estado, value); }
		}
		  
		[XmlAttribute("ActividadNegocio")]
		[Bindable(true)]
		public string ActividadNegocio 
		{
			get { return GetColumnValue<string>(Columns.ActividadNegocio); }
			set { SetColumnValue(Columns.ActividadNegocio, value); }
		}
		  
		[XmlAttribute("NumeroSocios")]
		[Bindable(true)]
		public int? NumeroSocios 
		{
			get { return GetColumnValue<int?>(Columns.NumeroSocios); }
			set { SetColumnValue(Columns.NumeroSocios, value); }
		}
		  
		[XmlAttribute("TotalAcciones")]
		[Bindable(true)]
		public int? TotalAcciones 
		{
			get { return GetColumnValue<int?>(Columns.TotalAcciones); }
			set { SetColumnValue(Columns.TotalAcciones, value); }
		}
		  
		[XmlAttribute("EsSocioInterno")]
		[Bindable(true)]
		public bool EsSocioInterno 
		{
			get { return GetColumnValue<bool>(Columns.EsSocioInterno); }
			set { SetColumnValue(Columns.EsSocioInterno, value); }
		}
		  
		[XmlAttribute("TipoSocioInterno")]
		[Bindable(true)]
		public string TipoSocioInterno 
		{
			get { return GetColumnValue<string>(Columns.TipoSocioInterno); }
			set { SetColumnValue(Columns.TipoSocioInterno, value); }
		}
		  
		[XmlAttribute("FechaCreacion")]
		[Bindable(true)]
		public DateTime? FechaCreacion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaCreacion); }
			set { SetColumnValue(Columns.FechaCreacion, value); }
		}
		  
		[XmlAttribute("FechaModificacion")]
		[Bindable(true)]
		public DateTime FechaModificacion 
		{
			get { return GetColumnValue<DateTime>(Columns.FechaModificacion); }
			set { SetColumnValue(Columns.FechaModificacion, value); }
		}
		  
		[XmlAttribute("Rowguid")]
		[Bindable(true)]
		public Guid Rowguid 
		{
			get { return GetColumnValue<Guid>(Columns.Rowguid); }
			set { SetColumnValue(Columns.Rowguid, value); }
		}
		  
		[XmlAttribute("MonedaActivos")]
		[Bindable(true)]
		public string MonedaActivos 
		{
			get { return GetColumnValue<string>(Columns.MonedaActivos); }
			set { SetColumnValue(Columns.MonedaActivos, value); }
		}
		  
		[XmlAttribute("MonedaBienesRaices")]
		[Bindable(true)]
		public string MonedaBienesRaices 
		{
			get { return GetColumnValue<string>(Columns.MonedaBienesRaices); }
			set { SetColumnValue(Columns.MonedaBienesRaices, value); }
		}
		  
		[XmlAttribute("MonedaCapitalAutorizado")]
		[Bindable(true)]
		public string MonedaCapitalAutorizado 
		{
			get { return GetColumnValue<string>(Columns.MonedaCapitalAutorizado); }
			set { SetColumnValue(Columns.MonedaCapitalAutorizado, value); }
		}
		  
		[XmlAttribute("MonedaCapitalPagado")]
		[Bindable(true)]
		public string MonedaCapitalPagado 
		{
			get { return GetColumnValue<string>(Columns.MonedaCapitalPagado); }
			set { SetColumnValue(Columns.MonedaCapitalPagado, value); }
		}
		  
		[XmlAttribute("MonedaCapitalSocial")]
		[Bindable(true)]
		public string MonedaCapitalSocial 
		{
			get { return GetColumnValue<string>(Columns.MonedaCapitalSocial); }
			set { SetColumnValue(Columns.MonedaCapitalSocial, value); }
		}
		  
		[XmlAttribute("SocioValido")]
		[Bindable(true)]
		public bool? SocioValido 
		{
			get { return GetColumnValue<bool?>(Columns.SocioValido); }
			set { SetColumnValue(Columns.SocioValido, value); }
		}
		
		#endregion
		
		
		#region PrimaryKey Methods		
		
        protected override void SetPrimaryKey(object oValue)
        {
            base.SetPrimaryKey(oValue);
            
            SetPKValues();
        }
        
		
		public CamaraComercio.DataAccess.SRM.HistoricosDocumentosCollection HistoricosDocumentosRecords()
		{
			return new CamaraComercio.DataAccess.SRM.HistoricosDocumentosCollection().Where(HistoricosDocumentos.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.SRM.PersonasRegistrosCollection PersonasRegistrosRecords()
		{
			return new CamaraComercio.DataAccess.SRM.PersonasRegistrosCollection().Where(PersonasRegistros.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.SRM.ProductosCollection ProductosRecords()
		{
			return new CamaraComercio.DataAccess.SRM.ProductosCollection().Where(Productos.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.SRM.ReferenciasBancariasCollection ReferenciasBancariasRecords()
		{
			return new CamaraComercio.DataAccess.SRM.ReferenciasBancariasCollection().Where(ReferenciasBancarias.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.SRM.ReferenciasComercialesCollection ReferenciasComercialesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.ReferenciasComercialesCollection().Where(ReferenciasComerciales.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.SRM.RegistrosActividadesCollection RegistrosActividadesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.RegistrosActividadesCollection().Where(RegistrosActividades.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.SRM.RegistrosActividadesEspecificasCollection RegistrosActividadesEspecificasRecords()
		{
			return new CamaraComercio.DataAccess.SRM.RegistrosActividadesEspecificasCollection().Where(RegistrosActividadesEspecificas.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.SRM.RegistrosOposicionesCollection RegistrosOposicionesRecords()
		{
			return new CamaraComercio.DataAccess.SRM.RegistrosOposicionesCollection().Where(RegistrosOposiciones.Columns.RegistroId, RegistroId).Load();
		}
		public CamaraComercio.DataAccess.SRM.SociedadesRegistrosCollection SociedadesRegistrosRecords()
		{
			return new CamaraComercio.DataAccess.SRM.SociedadesRegistrosCollection().Where(SociedadesRegistros.Columns.RegistroId, RegistroId).Load();
		}
		#endregion
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a Direcciones ActiveRecord object related to this Registros
		/// 
		/// </summary>
		public CamaraComercio.DataAccess.SRM.Direcciones Direcciones
		{
			get { return CamaraComercio.DataAccess.SRM.Direcciones.FetchByID(this.DireccionId); }
			set { SetColumnValue("DireccionId", value.DireccionId); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(DateTime? varFechaEmision,DateTime? varFechaVencimiento,string varNombreEstablecimiento,decimal? varCapitalSocial,int? varTipoMonedaCapitalSocial,decimal? varCapitalAutorizado,int? varTIpoMonedaCapitalAutorizado,decimal? varCapitalPagado,int? varTipoMonedaCapitalPagado,decimal? varActivos,int? varTipoMonedaActivos,decimal? varBienesRaices,int? varTipoMonedaBienesRaices,DateTime? varFechaInicioOperacion,int? varEmpleadosMasculinos,int? varEmpleadosFemeninos,int? varEmpleadosTotal,int? varDireccionId,string varNombreComercial,string varRegistroNombreComercial,string varMarcaFabrica,string varRegistroMarcaFabrica,string varPatenteInversion,string varRegistroPatenteInversion,bool varEsProvicional,string varComentario1,string varComentario2,string varNombreOperador,string varNombreSociedad,string varTipoRegistro,string varEstado,string varActividadNegocio,int? varNumeroSocios,int? varTotalAcciones,bool varEsSocioInterno,string varTipoSocioInterno,DateTime? varFechaCreacion,DateTime varFechaModificacion,Guid varRowguid,string varMonedaActivos,string varMonedaBienesRaices,string varMonedaCapitalAutorizado,string varMonedaCapitalPagado,string varMonedaCapitalSocial,bool? varSocioValido)
		{
			Registros item = new Registros();
			
			item.FechaEmision = varFechaEmision;
			
			item.FechaVencimiento = varFechaVencimiento;
			
			item.NombreEstablecimiento = varNombreEstablecimiento;
			
			item.CapitalSocial = varCapitalSocial;
			
			item.TipoMonedaCapitalSocial = varTipoMonedaCapitalSocial;
			
			item.CapitalAutorizado = varCapitalAutorizado;
			
			item.TIpoMonedaCapitalAutorizado = varTIpoMonedaCapitalAutorizado;
			
			item.CapitalPagado = varCapitalPagado;
			
			item.TipoMonedaCapitalPagado = varTipoMonedaCapitalPagado;
			
			item.Activos = varActivos;
			
			item.TipoMonedaActivos = varTipoMonedaActivos;
			
			item.BienesRaices = varBienesRaices;
			
			item.TipoMonedaBienesRaices = varTipoMonedaBienesRaices;
			
			item.FechaInicioOperacion = varFechaInicioOperacion;
			
			item.EmpleadosMasculinos = varEmpleadosMasculinos;
			
			item.EmpleadosFemeninos = varEmpleadosFemeninos;
			
			item.EmpleadosTotal = varEmpleadosTotal;
			
			item.DireccionId = varDireccionId;
			
			item.NombreComercial = varNombreComercial;
			
			item.RegistroNombreComercial = varRegistroNombreComercial;
			
			item.MarcaFabrica = varMarcaFabrica;
			
			item.RegistroMarcaFabrica = varRegistroMarcaFabrica;
			
			item.PatenteInversion = varPatenteInversion;
			
			item.RegistroPatenteInversion = varRegistroPatenteInversion;
			
			item.EsProvicional = varEsProvicional;
			
			item.Comentario1 = varComentario1;
			
			item.Comentario2 = varComentario2;
			
			item.NombreOperador = varNombreOperador;
			
			item.NombreSociedad = varNombreSociedad;
			
			item.TipoRegistro = varTipoRegistro;
			
			item.Estado = varEstado;
			
			item.ActividadNegocio = varActividadNegocio;
			
			item.NumeroSocios = varNumeroSocios;
			
			item.TotalAcciones = varTotalAcciones;
			
			item.EsSocioInterno = varEsSocioInterno;
			
			item.TipoSocioInterno = varTipoSocioInterno;
			
			item.FechaCreacion = varFechaCreacion;
			
			item.FechaModificacion = varFechaModificacion;
			
			item.Rowguid = varRowguid;
			
			item.MonedaActivos = varMonedaActivos;
			
			item.MonedaBienesRaices = varMonedaBienesRaices;
			
			item.MonedaCapitalAutorizado = varMonedaCapitalAutorizado;
			
			item.MonedaCapitalPagado = varMonedaCapitalPagado;
			
			item.MonedaCapitalSocial = varMonedaCapitalSocial;
			
			item.SocioValido = varSocioValido;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varRegistroId,DateTime? varFechaEmision,DateTime? varFechaVencimiento,string varNombreEstablecimiento,decimal? varCapitalSocial,int? varTipoMonedaCapitalSocial,decimal? varCapitalAutorizado,int? varTIpoMonedaCapitalAutorizado,decimal? varCapitalPagado,int? varTipoMonedaCapitalPagado,decimal? varActivos,int? varTipoMonedaActivos,decimal? varBienesRaices,int? varTipoMonedaBienesRaices,DateTime? varFechaInicioOperacion,int? varEmpleadosMasculinos,int? varEmpleadosFemeninos,int? varEmpleadosTotal,int? varDireccionId,string varNombreComercial,string varRegistroNombreComercial,string varMarcaFabrica,string varRegistroMarcaFabrica,string varPatenteInversion,string varRegistroPatenteInversion,bool varEsProvicional,string varComentario1,string varComentario2,string varNombreOperador,string varNombreSociedad,string varTipoRegistro,string varEstado,string varActividadNegocio,int? varNumeroSocios,int? varTotalAcciones,bool varEsSocioInterno,string varTipoSocioInterno,DateTime? varFechaCreacion,DateTime varFechaModificacion,Guid varRowguid,string varMonedaActivos,string varMonedaBienesRaices,string varMonedaCapitalAutorizado,string varMonedaCapitalPagado,string varMonedaCapitalSocial,bool? varSocioValido)
		{
			Registros item = new Registros();
			
				item.RegistroId = varRegistroId;
			
				item.FechaEmision = varFechaEmision;
			
				item.FechaVencimiento = varFechaVencimiento;
			
				item.NombreEstablecimiento = varNombreEstablecimiento;
			
				item.CapitalSocial = varCapitalSocial;
			
				item.TipoMonedaCapitalSocial = varTipoMonedaCapitalSocial;
			
				item.CapitalAutorizado = varCapitalAutorizado;
			
				item.TIpoMonedaCapitalAutorizado = varTIpoMonedaCapitalAutorizado;
			
				item.CapitalPagado = varCapitalPagado;
			
				item.TipoMonedaCapitalPagado = varTipoMonedaCapitalPagado;
			
				item.Activos = varActivos;
			
				item.TipoMonedaActivos = varTipoMonedaActivos;
			
				item.BienesRaices = varBienesRaices;
			
				item.TipoMonedaBienesRaices = varTipoMonedaBienesRaices;
			
				item.FechaInicioOperacion = varFechaInicioOperacion;
			
				item.EmpleadosMasculinos = varEmpleadosMasculinos;
			
				item.EmpleadosFemeninos = varEmpleadosFemeninos;
			
				item.EmpleadosTotal = varEmpleadosTotal;
			
				item.DireccionId = varDireccionId;
			
				item.NombreComercial = varNombreComercial;
			
				item.RegistroNombreComercial = varRegistroNombreComercial;
			
				item.MarcaFabrica = varMarcaFabrica;
			
				item.RegistroMarcaFabrica = varRegistroMarcaFabrica;
			
				item.PatenteInversion = varPatenteInversion;
			
				item.RegistroPatenteInversion = varRegistroPatenteInversion;
			
				item.EsProvicional = varEsProvicional;
			
				item.Comentario1 = varComentario1;
			
				item.Comentario2 = varComentario2;
			
				item.NombreOperador = varNombreOperador;
			
				item.NombreSociedad = varNombreSociedad;
			
				item.TipoRegistro = varTipoRegistro;
			
				item.Estado = varEstado;
			
				item.ActividadNegocio = varActividadNegocio;
			
				item.NumeroSocios = varNumeroSocios;
			
				item.TotalAcciones = varTotalAcciones;
			
				item.EsSocioInterno = varEsSocioInterno;
			
				item.TipoSocioInterno = varTipoSocioInterno;
			
				item.FechaCreacion = varFechaCreacion;
			
				item.FechaModificacion = varFechaModificacion;
			
				item.Rowguid = varRowguid;
			
				item.MonedaActivos = varMonedaActivos;
			
				item.MonedaBienesRaices = varMonedaBienesRaices;
			
				item.MonedaCapitalAutorizado = varMonedaCapitalAutorizado;
			
				item.MonedaCapitalPagado = varMonedaCapitalPagado;
			
				item.MonedaCapitalSocial = varMonedaCapitalSocial;
			
				item.SocioValido = varSocioValido;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn RegistroIdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaEmisionColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaVencimientoColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreEstablecimientoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CapitalSocialColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoMonedaCapitalSocialColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn CapitalAutorizadoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TIpoMonedaCapitalAutorizadoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CapitalPagadoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoMonedaCapitalPagadoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn ActivosColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoMonedaActivosColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn BienesRaicesColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoMonedaBienesRaicesColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaInicioOperacionColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn EmpleadosMasculinosColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn EmpleadosFemeninosColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn EmpleadosTotalColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn DireccionIdColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreComercialColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroNombreComercialColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn MarcaFabricaColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroMarcaFabricaColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn PatenteInversionColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn RegistroPatenteInversionColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn EsProvicionalColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn Comentario1Column
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn Comentario2Column
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreOperadorColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn NombreSociedadColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoRegistroColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn EstadoColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn ActividadNegocioColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn NumeroSociosColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn TotalAccionesColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn EsSocioInternoColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoSocioInternoColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaCreacionColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaModificacionColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn RowguidColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn MonedaActivosColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn MonedaBienesRaicesColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn MonedaCapitalAutorizadoColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        public static TableSchema.TableColumn MonedaCapitalPagadoColumn
        {
            get { return Schema.Columns[43]; }
        }
        
        
        
        public static TableSchema.TableColumn MonedaCapitalSocialColumn
        {
            get { return Schema.Columns[44]; }
        }
        
        
        
        public static TableSchema.TableColumn SocioValidoColumn
        {
            get { return Schema.Columns[45]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string RegistroId = @"RegistroId";
			 public static string FechaEmision = @"FechaEmision";
			 public static string FechaVencimiento = @"FechaVencimiento";
			 public static string NombreEstablecimiento = @"NombreEstablecimiento";
			 public static string CapitalSocial = @"CapitalSocial";
			 public static string TipoMonedaCapitalSocial = @"TipoMonedaCapitalSocial";
			 public static string CapitalAutorizado = @"CapitalAutorizado";
			 public static string TIpoMonedaCapitalAutorizado = @"TIpoMonedaCapitalAutorizado";
			 public static string CapitalPagado = @"CapitalPagado";
			 public static string TipoMonedaCapitalPagado = @"TipoMonedaCapitalPagado";
			 public static string Activos = @"Activos";
			 public static string TipoMonedaActivos = @"TipoMonedaActivos";
			 public static string BienesRaices = @"BienesRaices";
			 public static string TipoMonedaBienesRaices = @"TipoMonedaBienesRaices";
			 public static string FechaInicioOperacion = @"FechaInicioOperacion";
			 public static string EmpleadosMasculinos = @"EmpleadosMasculinos";
			 public static string EmpleadosFemeninos = @"EmpleadosFemeninos";
			 public static string EmpleadosTotal = @"EmpleadosTotal";
			 public static string DireccionId = @"DireccionId";
			 public static string NombreComercial = @"NombreComercial";
			 public static string RegistroNombreComercial = @"RegistroNombreComercial";
			 public static string MarcaFabrica = @"MarcaFabrica";
			 public static string RegistroMarcaFabrica = @"RegistroMarcaFabrica";
			 public static string PatenteInversion = @"PatenteInversion";
			 public static string RegistroPatenteInversion = @"RegistroPatenteInversion";
			 public static string EsProvicional = @"EsProvicional";
			 public static string Comentario1 = @"Comentario1";
			 public static string Comentario2 = @"Comentario2";
			 public static string NombreOperador = @"NombreOperador";
			 public static string NombreSociedad = @"NombreSociedad";
			 public static string TipoRegistro = @"TipoRegistro";
			 public static string Estado = @"Estado";
			 public static string ActividadNegocio = @"ActividadNegocio";
			 public static string NumeroSocios = @"NumeroSocios";
			 public static string TotalAcciones = @"TotalAcciones";
			 public static string EsSocioInterno = @"EsSocioInterno";
			 public static string TipoSocioInterno = @"TipoSocioInterno";
			 public static string FechaCreacion = @"FechaCreacion";
			 public static string FechaModificacion = @"FechaModificacion";
			 public static string Rowguid = @"rowguid";
			 public static string MonedaActivos = @"MonedaActivos";
			 public static string MonedaBienesRaices = @"MonedaBienesRaices";
			 public static string MonedaCapitalAutorizado = @"MonedaCapitalAutorizado";
			 public static string MonedaCapitalPagado = @"MonedaCapitalPagado";
			 public static string MonedaCapitalSocial = @"MonedaCapitalSocial";
			 public static string SocioValido = @"SocioValido";
						
		}
		#endregion
		
		#region Update PK Collections
		
        public void SetPKValues()
        {
}
        #endregion
    
        #region Deep Save
		
        public void DeepSave()
        {
            Save();
            
}
        #endregion
	}
}
